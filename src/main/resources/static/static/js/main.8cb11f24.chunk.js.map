{"version":3,"sources":["context/actionTypes.js","context/order-reducer.js","context/actions.js","services/auth-service.js","context/auth-reducer.js","models/SortObject.js","context/sort-reducer.js","models/CustomerObject.js","context/customerModal-reducer.js","context/store.js","ComboBox.js","InfoMessage.js","services/utils.js","InputField.js","models/OrderKindObject.js","models/OrderObject.js","models/OrderTypeObject.js","SwitchControl.js","AddOrderForm.js","hooks/useSaveOrder.js","hooks/useSaveCELink.js","hooks/useSaveCPLink.js","hooks/useSaveOrderKind.js","hooks/useSaveOrderType.js","hooks/useSaveDimensions.js","DatePicker.js","DependentInput.js","services/customer-service.js","models/PaymentObject.js","PaymentForm.js","hooks/useMakePayment.js","hooks/usePaymentMethods.js","hooks/useUpdatePaymentMethod.js","SortForm.js","ActionBar.js","ClientsTable.js","hooks/useExportCustomers.js","CustomerForm.js","hooks/useSaveCustomer.js","Header.js","Login.js","ToolTip.js","EditForm.js","hooks/useDeleteOrder.js","hooks/useUpdateOrder.js","services/orders-service.js","StatusPopper.js","hooks/useSetStatus.js","Table.js","hooks/useOrders.js","hooks/useExportOrders.js","App.js","hooks/useCustomers.js","hooks/useEntrepreneurs.js","hooks/useOrderTypes.js","hooks/useStatuses.js","hooks/useCELinks.js","hooks/useCPLinks.js","ProtectedRoute.js","NotFound.js","index.js"],"names":["ADD_ORDER","LOAD_ORDERS","SET_AUTHENTICATED","SET_UNAUTHENTICATED","SELECT_CUSTOMER","UNSELECT_CUSTOMER","SET_ACTIVE_SORTING","UPDATE_MAIN_SORTING","UPDATE_SORT_SORTING","UPDATE_PAYMENT_SORTING","ADD_MAIN_SORTING","ADD_SORT_SORTING","ADD_PAYMENT_SORTING","SHOW_CUSTOMER_MODAL","CLOSE_CUSTOMER_MODAL","initialState","mainPageOrderList","sortPageOrderList","isLoading","orderReducer","state","action","type","ActionTypes","payload","token","employee","username","roles","sorting","UPDATE_SORTING","selections","sortPage","customer","authorize","credentials","a","Axios","post","response","data","unauthorize","store","dispatch","isAuthenticated","loggedUser","authReducer","localStorage","setItem","JSON","stringify","defaults","headers","common","interceptors","use","error","status","AuthService","console","removeItem","EmptySort","dateFrom","dateTill","orderKind","orderType","details","active","main","sort","payment","sortReducer","CustomerObject","customerId","customerName","customerGroup","money","payLog","debtor","city","info","firstPerson","firstPhone","firstEmail","secondPerson","secondPhone","secondEmail","thirdPerson","thirdPhone","thirdEmail","show","customerModalReducer","require","createStore","combineReducers","auth","orders","default","sortSelections","showCustomerModal","NoPaddingAutocomplete","withStyles","inputRoot","padding","paddingRight","input","Autocomplete","ComboBox","label","getName","sortKey","validator","kindNameSetter","typeNameSetter","setEntrepreneur","setDimensions","setPrice","props","textFieldProps","setFieldValue","form","order","useFormikContext","values","fieldToTextField","field","name","useDispatch","queryClient","useQueryClient","size","value","autoHighlight","getOptionLabel","onKeyPress","e","key","preventDefault","onChange","_","sortBy","selection","ADD_SORTING_BY","entrepreneur","getQueryData","find","link","width","height","orderKindId","kindId","price","renderInput","TextField","target","variant","InfoMessage","open","onClose","message","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","checkPriceShrink","shrinkStatus","setShrinkStatus","shrink","fixCustomers","id","map","row","orderId","InputField","readonly","isSum","numeric","phone","autoComplete","InputProps","readOnly","match","length","onKeyUp","m2","amount","toFixed","sum","Math","ceil","fees","EmptyOrderKind","typeId","kindName","EmptyOrder","billNo","date","userID","finalSum","paySum","comment","EmptyOrderType","typeName","SwitchControl","isChecked","useField","FormControlLabel","control","Switch","checked","color","useStyles","makeStyles","root","display","flexWrap","borderRadius","backgroundColor","margin","lock","minWidth","svg","fill","clear","justifySelf","validationSchema","yup","required","lessThan","positive","min","trim","max","AddOrderForm","classes","newOrderQuery","useMutation","params","newOrder","onSuccess","passedParams","setStatus","success","resetForm","onError","newCELinkQuery","get","entrepreneurId","invalidateQueries","useSaveCELink","newCPLinkQuery","useSaveCPLink","saveOrderKindQuery","orderKinds","push","useSaveOrderKind","saveOrderTypeQuery","useSaveOrderType","saveDimensionsQuery","put","useSaveDimensions","useState","showOrderInfo","setShowOrderInfo","showCELinkInfo","setShowCELinkInfo","showDimensionsInfo","setShowDimensionsInfo","showPriceInfo","setShowPriceInfo","showOrderTypeInfo","setShowOrderTypeInfo","showOrderKindInfo","setShowOrderKindInfo","orderKindName","setOrderKindName","orderTypeName","setOrderTypeName","handleClose","onAddCustomer","onAddOrderType","mutate","onFormSubmit","isUrgently","onAcceptance","setAcceptance","clearFields","keepFields","className","validateOnChange","validateOnMount","validateOnBlur","initialValues","parse","getItem","onSubmit","errors","validateField","handleReset","component","disabled","isFetching","option","fullName","options","Button","tabIndex","disableRipple","onClick","LastPageOutlined","LinkOutlined","OutlinedInput","endAdornment","InputAdornment","position","InputLabelProps","LockOpenOutlined","clearAndUnsort","datepicker","DatePicker","onTouch","autoOk","helperText","inputVariant","format","KeyboardButtonProps","DependentInput","React","useEffect","paymentType","paymentPercentage","fetchCustomers","res","fetchEntrepreneurs","fetchOrderTypes","fetchStatuses","fetchPaymentMethods","fetchCELinks","fetchCPLinks","EmptyPayment","paymentDate","percentage","row__one","gridColumnGap","gridTemplateColumns","row__two","gridTemplateRows","transform","top","right","button","gridColumn","successInfo","successText","errorInfo","errorText","errorSvg","fontSize","successSvg","nullable","PaymentForm","makePaymentQuery","useMakePayment","paymentMethods","useQuery","DataService","initialData","initialStale","keepPreviousData","updatePaymentMethodQuery","paymentMethod","useUpdatePaymentMethod","showPaymentInfo","setShowPaymentInfo","showPercentageLinkInfo","setShowPercentageLinkInfo","Date","currentTime","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setCurrentTime","receiver","style","SortForm","authState","useSelector","showUserOrders","ActionBar","currentTab","setTab","useIsFetching","sortState","tabId","Paper","elevation","selectedCustomer","Typography","src","alt","showCustomerInfo","includes","marginLeft","Collapse","in","timeout","onEntered","columns","headerName","flex","renderCell","Link","cellClassName","ClientsTable","exportQuery","customers","responseType","val","blob","Blob","window","navigator","msSaveOrOpenBlob","URL","createObjectURL","document","createElement","href","download","dispatchEvent","MouseEvent","bubbles","cancelable","view","q","setQ","filter","rows","toString","toLowerCase","indexOf","placeholder","sortModel","loading","rowHeight","headerHeight","pagination","disableSelectionOnClick","theme","modal","alignItems","justifyContent","paper","palette","background","boxShadow","shadows","spacing","cursor","primary","h2","textAlign","fontWeight","marginBottom","buttons","clearButton","marginRight","rowOne","gridRowGap","rowTwo","longTextField","gridColumnStart","gridColumnEnd","switchHolder","auxiliaryRow","email","CustomerForm","customerModalState","saveCustomerQuery","log","useSaveCustomer","showSavedInfo","setShowSavedInfo","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","flexGrow","logoutButton","logoutHolder","whiteSpace","tabs","Header","history","useHistory","setValue","AppBar","Toolbar","Tabs","_e","newValue","TabIndicatorProps","indicatorColor","aria-label","Tab","Copyright","align","getFullYear","marginTop","flexDirection","avatar","secondary","submit","Login","password","setForm","showNotYetVerified","setShowNotYetVerified","showWrongCredentials","setShowWrongCredentials","isDisabled","setIsDisabled","Container","maxWidth","CssBaseline","Avatar","then","catch","fullWidth","autoFocus","Grid","container","item","xs","Box","mt","useStylesTooltip","arrow","tooltip","ToolTip","title","placement","children","Tooltip","lineHeight","EditForm","deleteQuery","delete","setShowModal","useDeleteOrder","updateOrderQuery","backupOrder","updateObject","onMutate","mutationObject","getQueryCache","findAll","forEach","query","setQueryData","queryKey","cachedOrder","_error","toggleModal","useUpdateOrder","setOpen","showDeleteError","setShowDeleteError","showSaveError","setShowSaveError","showConfirmation","setShowConfirmation","toggle","multiline","Dialog","fullScreen","DialogTitle","DialogContent","DialogContentText","DialogActions","fixOrders","sortOrders","payDateFrom","payDateTill","sendForm","sources","acceptanceButton","border","borderColor","inWorkButton","readyButton","completedButton","popper","zIndex","left","borderWidth","content","borderStyle","StatusPopper","statusQuery","statusId","useSetStatus","anchorRef","useRef","arrowRef","setArrowRef","prevOpen","img","ref","Popper","anchorEl","current","disablePortal","modifiers","flip","enabled","preventOverflow","boundariesElement","element","o","strcmp","b","localeCompare","formatDate","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","Table","tableID","ordersQuery","OrderService","useOrders","employeeID","textDecoration","sortComparator","c1","c2","valueFormatter","param","Number","parseFloat","sortable","payDate","reduce","App","CustomerService","path","exact","ProtectedRoute","Component","authToken","render","to","pathname","from","location","NotFound","oldTheme","createMuiTheme","light","dark","typography","useNextVariants","htmlFontSize","ukUA","breakpoints","overrides","MuiInputLabel","up","down","MuiInputAdornment","MuiInputBase","MuiTypography","subtitle1","body1","MuiButton","MuiTab","MuiSvgIcon","queryCache","QueryCache","QueryClient","ReactDOM","QueryClientProvider","client","utils","DateFnsUtils","locale","uk","getElementById"],"mappings":"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","file":"static/js/main.8cb11f24.chunk.js","sourcesContent":["export const ADD_ORDER = \"ADD_ORDER\";\nexport const LOAD_ORDERS = \"LOAD_ORDERS\";\n\nexport const SET_AUTHENTICATED = \"SET_AUTHENTICATED\";\nexport const SET_UNAUTHENTICATED = \"SET_UNAUTHENTICATED\";\n\nexport const SELECT_CUSTOMER = \"SELECT_CUSTOMER\";\nexport const UNSELECT_CUSTOMER = \"UNSELECT_CUSTOMER\";\n\nexport const SET_ACTIVE_SORTING = \"SET_ACTIVE_SORTING\";\nexport const UPDATE_MAIN_SORTING = \"UPDATE_MAIN_SORTING\";\nexport const UPDATE_SORT_SORTING = \"UPDATE_SORT_SORTING\";\nexport const UPDATE_PAYMENT_SORTING = \"UPDATE_PAYMENT_SORTING\";\nexport const ADD_MAIN_SORTING = \"ADD_MAIN_SORTING\";\nexport const ADD_SORT_SORTING = \"ADD_SORT_SORTING\";\nexport const ADD_PAYMENT_SORTING = \"ADD_PAYMENT_SORTING\";\n\nexport const SHOW_CUSTOMER_MODAL = \"SHOW_CUSTOMER_MODAL\";\nexport const CLOSE_CUSTOMER_MODAL = \"CLOSE_CUSTOMER_MODAL\";\n","import * as ActionTypes from \"./actionTypes\";\n\nconst initialState = {\n  mainPageOrderList: [],\n  sortPageOrderList: [],\n  isLoading: true,\n};\n\nfunction orderReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.ADD_ORDER:\n      return {\n        ...state,\n        mainPageOrderList: [...state.mainPageOrderList, action.payload],\n        sortPageOrderList: [...state.sortPageOrderList, action.payload],\n      };\n    case ActionTypes.LOAD_ORDERS:\n      if (!action.payload) return state;\n      return {\n        ...state,\n        mainPageOrderList: action.payload,\n        sortPageOrderList: action.payload,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default orderReducer;\n","import * as ActionTypes from \"./actionTypes\";\n\nexport const NEW_ORDER = (newOrder) => ({\n  type: ActionTypes.ADD_ORDER,\n  payload: newOrder,\n});\n\nexport const LOAD_ORDERS = (orders) => ({\n  type: ActionTypes.LOAD_ORDERS,\n  payload: orders,\n});\n\nexport const SET_AUTHENTICATED = (token, employee, username, roles) => ({\n  type: ActionTypes.SET_AUTHENTICATED,\n  payload: {\n    token,\n    employee,\n    username,\n    roles,\n  },\n});\n\nexport const SET_UNAUTHENTICATED = () => ({\n  type: ActionTypes.SET_UNAUTHENTICATED,\n});\n\nexport const SELECT_CUSTOMER = (customer) => ({\n  type: ActionTypes.SELECT_CUSTOMER,\n  payload: customer,\n});\n\nexport const DESELECT_CUSTOMER = () => ({\n  type: ActionTypes.UNSELECT_CUSTOMER,\n});\n\nexport const SET_ACTIVE_SORTING = (sorting) => ({\n  type: ActionTypes.SET_ACTIVE_SORTING,\n  payload: sorting,\n});\n\nexport const ADD_SORTING_BY = (selection, type) => {\n  let sortPage;\n  switch (type) {\n    case \"main\":\n      sortPage = ActionTypes.ADD_MAIN_SORTING;\n      break;\n    case \"sort\":\n      sortPage = ActionTypes.ADD_SORT_SORTING;\n      break;\n    case \"payment\":\n      sortPage = ActionTypes.ADD_PAYMENT_SORTING;\n      break;\n    default:\n      break;\n  }\n  return {\n    type: sortPage,\n    payload: selection,\n  };\n};\n\nexport const UPDATE_SORTING = (selections, type) => {\n  let sortPage;\n  switch (type) {\n    case \"main\":\n      sortPage = ActionTypes.UPDATE_MAIN_SORTING;\n      break;\n    case \"sort\":\n      sortPage = ActionTypes.UPDATE_SORT_SORTING;\n      break;\n    case \"payment\":\n      sortPage = ActionTypes.UPDATE_PAYMENT_SORTING;\n      break;\n    default:\n      break;\n  }\n  return {\n    type: sortPage,\n    payload: selections,\n  };\n};\n\nexport const SHOW_CUSTOMER_MODAL = (customer = {}) => {\n  return {\n    type: ActionTypes.SHOW_CUSTOMER_MODAL,\n    payload: customer,\n  };\n};\n\nexport const CLOSE_CUSTOMER_MODAL = () => ({\n  type: ActionTypes.CLOSE_CUSTOMER_MODAL,\n});\n","import Axios from \"axios\";\nimport { SET_UNAUTHENTICATED } from \"../context/actions\";\nimport store from \"../context/store\";\n\nexport const authorize = async (credentials) => {\n  const response = await Axios.post(\"/api/auth/signin\", credentials);\n  const data = response.data;\n  return data;\n};\n\nexport const unauthorize = () => {\n  store.dispatch(SET_UNAUTHENTICATED());\n};\n","import Axios from \"axios\";\nimport * as AuthService from \"../services/auth-service\";\nimport * as ActionTypes from \"./actionTypes\";\n\nconst initialState = {\n  isAuthenticated: false,\n  loggedUser: null,\n  roles: [],\n};\n\nfunction authReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.SET_AUTHENTICATED:\n      localStorage.setItem(\"token\", action.payload.token);\n      localStorage.setItem(\"username\", action.payload.username);\n      localStorage.setItem(\"roles\", action.payload.roles);\n      localStorage.setItem(\"loggedUser\", JSON.stringify(action.payload.employee));\n\n      Axios.defaults.headers.common[\n        \"Authorization\"\n      ] = `Bearer ${action.payload.token}`;\n\n      Axios.interceptors.response.use(\n        (response) => response,\n        (error) => {\n          error.response?.status === 401\n            ? AuthService.unauthorize()\n            : console.error(error);\n          throw error;\n        }\n      );\n      return {\n        isAuthenticated: true,\n        loggedUser: action.payload.employee,\n        roles: action.payload.roles,\n      };\n    case ActionTypes.SET_UNAUTHENTICATED:\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"username\");\n      localStorage.removeItem(\"roles\");\n      localStorage.removeItem(\"loggedUser\");\n      return {isAuthenticated: false, loggedUser: null};\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;\n","export const EmptySort = {\n  customer: null,\n  status: null,\n  dateFrom: null,\n  dateTill: null,\n  orderKind: null,\n  orderType: null,\n  employee: null,\n  details: \"\",\n};\n","import * as ActionTypes from \"./actionTypes\";\nimport {EmptySort} from \"../models/SortObject\";\n\nconst initialState = {\n  active: \"main\",\n  main: EmptySort,\n  sort: EmptySort,\n  payment: EmptySort,\n};\n\nfunction sortReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.SET_ACTIVE_SORTING:\n      return {...state, active: action.payload};\n    case ActionTypes.ADD_MAIN_SORTING:\n      return {...state, main: {...state.main, ...action.payload}};\n    case ActionTypes.ADD_SORT_SORTING:\n      return {...state, sort: {...state.sort, ...action.payload}};\n    case ActionTypes.ADD_PAYMENT_SORTING:\n      return {...state, payment: {...state.payment, ...action.payload}};\n    case ActionTypes.UPDATE_MAIN_SORTING:\n      return {...state, main: action.payload};\n    case ActionTypes.UPDATE_SORT_SORTING:\n      return {...state, sort: action.payload};\n    case ActionTypes.UPDATE_PAYMENT_SORTING:\n      return {...state, payment: action.payload};\n    default:\n      return state;\n  }\n}\n\nexport default sortReducer;\n","export const CustomerObject = {\n  customerId: 0,\n  customerName: \"\",\n  customerGroup: \"\",\n  money: 0,\n  payLog: \"\",\n  debtor: false,\n  city: \"\",\n  info: \"\",\n  firstPerson: \"\",\n  firstPhone: \"\",\n  firstEmail: \"\",\n  secondPerson: \"\",\n  secondPhone: \"\",\n  secondEmail: \"\",\n  thirdPerson: \"\",\n  thirdPhone: \"\",\n  thirdEmail: \"\",\n};\n","import {CustomerObject} from \"../models/CustomerObject\";\nimport * as ActionTypes from \"./actionTypes\";\n\nconst initialState = {\n  show: false,\n  customer: CustomerObject,\n};\n\nfunction customerModalReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.SHOW_CUSTOMER_MODAL:\n      return {show: true, customer: action.payload};\n    case ActionTypes.CLOSE_CUSTOMER_MODAL:\n      return {show: false, customer: {}};\n    default:\n      return state;\n  }\n}\n\nexport default customerModalReducer;\n","import authReducer from \"./auth-reducer\";\nimport sortReducer from \"./sort-reducer\";\nimport customerModalReducer from \"./customerModal-reducer\";\n\nconst {createStore, combineReducers} = require(\"redux\");\nconst {default: orderReducer} = require(\"./order-reducer\");\n\nconst store = createStore(\n  combineReducers({\n    auth: authReducer,\n    orders: orderReducer,\n    sortSelections: sortReducer,\n    showCustomerModal: customerModalReducer,\n  })\n);\n\nexport default store;\n","import {TextField, withStyles} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {useFormikContext} from \"formik\";\nimport {fieldToTextField} from \"formik-material-ui\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useDispatch} from \"react-redux\";\nimport {ADD_SORTING_BY} from \"./context/actions\";\n\nconst NoPaddingAutocomplete = withStyles({\n  inputRoot: {\n    '&&[class*=\"MuiOutlinedInput-root\"] $input': {\n      padding: 2,\n    },\n    '&&[class*=\"MuiOutlinedInput-root\"]': {\n      paddingRight: \"40px!important\",\n    },\n  },\n  input: {},\n})(Autocomplete);\n\nfunction ComboBox({\n  label,\n  getName,\n  sortKey,\n  error,\n  validator,\n  kindNameSetter = false,\n  typeNameSetter = false,\n  setEntrepreneur = false,\n  setDimensions = false,\n  setPrice = false,\n  action = false,\n  sortPage = \"\",\n  textFieldProps,\n  ...props\n}) {\n  const {\n    form: {setFieldValue},\n  } = props;\n  const {\n    values: {order},\n  } = useFormikContext();\n  const {...field} = fieldToTextField(props);\n  const {name} = field;\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n\n  return (\n    <NoPaddingAutocomplete\n      {...props}\n      size=\"small\"\n      error={\"\"}\n      value={field.value}\n      autoHighlight={true}\n      getOptionLabel={getName}\n      onKeyPress={(e) => {\n        if (e.key === \"=\" || e.key === \"+\") {\n          if (action) action();\n          e.preventDefault();\n        }\n      }}\n      onChange={(_, value) => {\n        if (sortKey) {\n          const sortBy = {};\n          sortBy[sortKey] = value;\n          dispatch(ADD_SORTING_BY(sortBy, sortPage));\n        }\n\n        if (setEntrepreneur) {\n          const entrepreneur =\n            queryClient\n              .getQueryData(\"ce-links\")\n              .find((link) => link.customer.customerId === value?.customerId)\n              ?.entrepreneur || null;\n          setFieldValue(\"order.entrepreneur\", entrepreneur);\n        }\n\n        setFieldValue(name, value);\n\n        if (setDimensions && value && value.width && value.height) {\n          setFieldValue(\"order.width\", value.width);\n          setFieldValue(\"order.height\", value.height);\n        }\n\n        if (setPrice) {\n          if (!value) return;\n          let customerId;\n          let orderKindId;\n          if (value.customerId) {\n            customerId = value.customerId;\n            orderKindId = order.orderKind?.kindId;\n          } else {\n            customerId = order.customer?.customerId;\n            orderKindId = value.kindId;\n          }\n          if (!customerId || !orderKindId) return;\n          const price =\n            queryClient\n              .getQueryData(\"cp-links\")\n              .find(\n                (link) =>\n                  link.customer?.customerId === customerId &&\n                  link.orderKind?.kindId === orderKindId\n              )?.price || 0;\n          setFieldValue(\"order.price\", price);\n        }\n\n        validator(name);\n      }}\n      renderInput={(props) => (\n        <TextField\n          {...props}\n          error={!!error}\n          onChange={(e) => {\n            if (typeNameSetter) {\n              typeNameSetter(e.target.value);\n            } else if (kindNameSetter) {\n              kindNameSetter(e.target.value);\n            }\n          }}\n          label={label}\n          variant=\"outlined\"\n        />\n      )}\n    />\n  );\n}\n\nexport default ComboBox;\n","import {Snackbar} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport React from \"react\";\n\nfunction InfoMessage({open, onClose, message, type}) {\n  if (type === \"success\") {\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={onClose}\n      >\n        <Alert onClose={onClose} variant=\"filled\" severity=\"success\">\n          {message}\n        </Alert>\n      </Snackbar>\n    );\n  } else {\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={onClose}\n      >\n        <Alert onClose={onClose} variant=\"filled\" severity=\"error\">\n          {message}\n        </Alert>\n      </Snackbar>\n    );\n  }\n}\n\nexport default InfoMessage;\n","export function calculateM2(order) {\n  order.m2 =\n    (((order.width * order.height) / 1000000) * order.amount).toFixed(3) || 0.0;\n}\n\nexport const checkPriceShrink = (form, shrinkStatus, setShrinkStatus) => {\n  if (form.price >= 0) {\n    if (!shrinkStatus.shrink) {\n      setShrinkStatus({\n        shrink: true,\n      });\n    }\n  } else if (shrinkStatus.shrink) {\n    setShrinkStatus({\n      shrink: false,\n    });\n  }\n};\n\nexport const fixCustomers = (data, id = 0) => {\n  return data.map((row) => {\n    if (row.orderId === 0) {\n      row.id = id;\n      row.customerId = id;\n    } else {\n      row.id = row.customerId;\n    }\n    return row;\n  });\n};\n\nexport const setCurrentTime = (date) => {\n  const currentTime = new Date();\n  date.setHours(currentTime.getHours());\n  date.setMinutes(currentTime.getMinutes());\n  date.setSeconds(currentTime.getSeconds());\n};\n","import {TextField} from \"@material-ui/core\";\nimport {useFormikContext} from \"formik\";\nimport React from \"react\";\nimport {calculateM2} from \"./services/utils\";\n\nconst InputField = ({\n  label,\n  field,\n  error,\n  readonly = false,\n  validator,\n  isSum = false,\n  numeric = true,\n  phone = false,\n  ...props\n}) => {\n  const {\n    form: {setFieldValue},\n  } = props;\n  const {values: form} = useFormikContext();\n  const {onChange, name} = field;\n  return (\n    <TextField\n      {...props}\n      {...field}\n      error={!!error}\n      size=\"small\"\n      variant=\"outlined\"\n      autoComplete=\"off\"\n      label={label}\n      InputProps={{readOnly: readonly}}\n      onChange={(e) => {\n        if (!numeric) onChange(e);\n        if (e.target.value.match(/^\\d*\\.?\\d*$/) || e.target.value.length === 0) {\n          onChange(e);\n        }\n        validator(name);\n      }}\n      onKeyUp={(_) => {\n        if (!numeric || phone || !form.order || isSum) return;\n        calculateM2(form.order);\n        const sum =\n          form.order.m2 > 0\n            ? Math.ceil(+(form.order.m2 * form.order.price) + +form.order.fees)\n            : Math.ceil(form.order.price * form.order.amount + +form.order.fees);\n        if (sum) setFieldValue(\"order.finalSum\", sum);\n      }}\n    />\n  );\n};\n\nexport default InputField;\n","export const EmptyOrderKind = {\n  kindId: 0,\n  typeId: 0,\n  kindName: \"\",\n  width: 0,\n  height: 0,\n};\n","export const EmptyOrder = {\n  orderId: 0,\n  billNo: 0,\n  date: \"\",\n  employee: {userID: 60},\n  entrepreneur: null,\n  customer: null,\n  orderType: null,\n  orderKind: null,\n  width: 0,\n  height: 0,\n  amount: 0,\n  m2: 0.0,\n  price: 0,\n  fees: 0,\n  finalSum: 0,\n  paySum: 0,\n  status: {id: 1},\n  comment: \"\",\n};\n","export const EmptyOrderType = {\n  typeId: 0,\n  typeName: \"\",\n};\n","import { FormControlLabel, Switch } from \"@material-ui/core\";\nimport { useField } from \"formik\";\nimport React from \"react\";\n\nconst SwitchControl = ({ label, isChecked, ...props }) => {\n  const [field] = useField(props);\n  return (\n    <FormControlLabel\n      control={<Switch {...props} {...field} checked={isChecked} color=\"primary\" />}\n      label={label}\n    />\n  );\n};\n\nexport default SwitchControl;\n","import {Button} from \"@material-ui/core\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {LastPageOutlined, LinkOutlined, LockOpenOutlined} from \"@material-ui/icons\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {Field, Form, Formik} from \"formik\";\nimport React, {useState} from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useDispatch} from \"react-redux\";\nimport * as yup from \"yup\";\nimport \"./AddOrderForm.css\";\nimport ComboBox from \"./ComboBox\";\nimport {SHOW_CUSTOMER_MODAL, UPDATE_SORTING} from \"./context/actions\";\nimport store from \"./context/store\";\nimport useSaveCELink from \"./hooks/useSaveCELink\";\nimport useSaveCPLink from \"./hooks/useSaveCPLink\";\nimport useSaveDimensions from \"./hooks/useSaveDimensions\";\nimport useSaveOrder from \"./hooks/useSaveOrder\";\nimport useSaveOrderKind from \"./hooks/useSaveOrderKind\";\nimport useSaveOrderType from \"./hooks/useSaveOrderType\";\nimport InfoMessage from \"./InfoMessage\";\nimport InputField from \"./InputField\";\nimport {CustomerObject} from \"./models/CustomerObject\";\nimport {EmptyOrderKind} from \"./models/OrderKindObject\";\nimport {EmptyOrder} from \"./models/OrderObject\";\nimport {EmptyOrderType} from \"./models/OrderTypeObject\";\nimport {EmptySort} from \"./models/SortObject\";\nimport {checkPriceShrink} from \"./services/utils\";\nimport SwitchControl from \"./SwitchControl\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    margin: \"0 auto\",\n    width: \"52%\",\n  },\n  lock: {\n    padding: 0,\n    width: \"5px\",\n    backgroundColor: \"white !important\",\n    minWidth: 0,\n\n    \"&:hover\": {\n      backgroundColor: \"white\",\n    },\n  },\n  svg: {\n    fill: \"rgba(0, 0, 0, 0.23)\",\n\n    \"&:hover\": {\n      fill: \"black\",\n    },\n  },\n  clear: {\n    backgroundColor: \"#fff\",\n    minWidth: 0,\n    justifySelf: \"flex-end\",\n    margin: \"0px 0px 1px 0\",\n    width: \"2.4rem\",\n  },\n}));\n\nconst validationSchema = yup.object({\n  order: yup.object({\n    entrepreneur: yup.object().required(),\n    customer: yup.object().required(),\n    orderType: yup.object().required(),\n    orderKind: yup.object().required(),\n    width: yup.number().lessThan(2000000000).positive().min(0).required(),\n    height: yup.number().lessThan(2000000000).positive().min(0).required(),\n    amount: yup.number().lessThan(2000000000).positive().min(0).required(),\n    price: yup.number().lessThan(2000000000).positive().min(0).required(),\n    fees: yup.number().lessThan(2000000000).positive().min(0).required(),\n    finalSum: yup.number().lessThan(2000000000).positive().min(0).required(),\n    comment: yup.string().trim().max(255).required(),\n  }),\n});\n\nexport default function AddOrderForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n  const newOrderQuery = useSaveOrder();\n  const newCELinkQuery = useSaveCELink();\n  const newCPLinkQuery = useSaveCPLink();\n  const saveOrderKindQuery = useSaveOrderKind();\n  const saveOrderTypeQuery = useSaveOrderType();\n  const saveDimensionsQuery = useSaveDimensions();\n  const [shrinkStatus, setShrinkStatus] = useState({});\n  const [showOrderInfo, setShowOrderInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [showCELinkInfo, setShowCELinkInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [showDimensionsInfo, setShowDimensionsInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [showPriceInfo, setShowPriceInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [showOrderTypeInfo, setShowOrderTypeInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [showOrderKindInfo, setShowOrderKindInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [orderKindName, setOrderKindName] = useState(\"\");\n  const [orderTypeName, setOrderTypeName] = useState(\"\");\n\n  const handleClose = () => {\n    setShowOrderInfo({success: false, error: false});\n    setShowCELinkInfo({success: false, error: false});\n    setShowDimensionsInfo({success: false, error: false});\n    setShowPriceInfo({success: false, error: false});\n    setShowOrderKindInfo({success: false, error: false});\n    setShowOrderTypeInfo({success: false, error: false});\n  };\n\n  const clearAndUnsort = (e, resetForm) => {\n    store.dispatch(UPDATE_SORTING({...EmptySort}, \"main\"));\n    resetForm(e);\n  };\n\n  const onAddCustomer = () => {\n    dispatch(SHOW_CUSTOMER_MODAL({...CustomerObject}));\n  };\n\n  const onAddOrderType = () => {\n    if (orderTypeName.trim().length === 0) {\n      setShowOrderTypeInfo({success: false, error: true});\n      return;\n    }\n    saveOrderTypeQuery.mutate({\n      orderType: {\n        ...EmptyOrderType,\n        typeName: orderTypeName,\n      },\n      setStatus: setShowOrderTypeInfo,\n    });\n  };\n\n  const onAddOrderKind = (orderType) => {\n    if (orderKindName.trim().length === 0 || !orderType) {\n      setShowOrderKindInfo({success: false, error: true});\n      return;\n    }\n    saveOrderKindQuery.mutate({\n      orderType: orderType,\n      orderKind: {\n        ...EmptyOrderKind,\n        typeId: orderType.typeId,\n        kindName: orderKindName,\n      },\n      setStatus: setShowOrderKindInfo,\n    });\n  };\n\n  const linkCustomer = (customer, entrepreneur) => {\n    if (!customer || !entrepreneur) {\n      setShowCELinkInfo({success: false, error: true});\n      return;\n    }\n    newCELinkQuery.mutate({\n      customerId: customer.customerId,\n      entrepreneurId: entrepreneur.entrepreneurId,\n      setStatus: setShowCELinkInfo,\n    });\n  };\n\n  const linkDimensions = (orderKind, width, height) => {\n    if (!orderKind || !width || !height) {\n      setShowDimensionsInfo({success: false, error: true});\n      return;\n    }\n    orderKind.width = width;\n    orderKind.height = height;\n    saveDimensionsQuery.mutate({\n      orderKind: orderKind,\n      setStatus: setShowDimensionsInfo,\n    });\n  };\n\n  const linkPrice = (customer, orderKind, price) => {\n    if (!customer || !orderKind || !price) {\n      setShowPriceInfo({success: false, error: true});\n      return;\n    }\n    newCPLinkQuery.mutate({\n      customerId: customer.customerId,\n      orderKindId: orderKind.kindId,\n      price: price,\n      setStatus: setShowPriceInfo,\n    });\n  };\n\n  const setUrgence = (isUrgently, order) => {\n    if (isUrgently) {\n      if (order.finalSum * 0.15 < 10) {\n        order.finalSum = +order.finalSum + 10;\n      } else {\n        order.finalSum = Math.ceil(order.finalSum * 1.15);\n      }\n      order.comment = \"(Терміново) \" + order.comment;\n    }\n  };\n\n  const setAcceptance = (onAcceptance, order) => {\n    onAcceptance\n      ? (order.status = queryClient\n          .getQueryData(\"statuses\")\n          .find((status) => status.id === 1))\n      : (order.status = queryClient\n          .getQueryData(\"statuses\")\n          .find((status) => status.id === 2));\n  };\n\n  const onFormSubmit = (form, resetForm, setFieldValue) => {\n    setUrgence(form.isUrgently, form.order);\n    setAcceptance(form.onAcceptance, form.order);\n    newOrderQuery.mutate({\n      newOrder: form.order,\n      resetForm: form.clearFields\n        ? resetForm\n        : () => keepFields(form.order, setFieldValue),\n      setStatus: setShowOrderInfo,\n    });\n  };\n\n  const keepFields = (form, setFieldValue) => {\n    setFieldValue(\"order.width\", form.orderKind.width);\n    setFieldValue(\"order.height\", form.orderKind.height);\n    setFieldValue(\"order.amount\", 0);\n    const price =\n      queryClient\n        .getQueryData(\"cp-links\")\n        .find(\n          (link) =>\n            link.customer?.customerId === form.customer.customerId &&\n            link.orderKind?.kindId === form.orderKind.kindId\n        )?.price || 0;\n    setFieldValue(\"order.price\", price);\n    setFieldValue(\"order.fees\", 0);\n    setFieldValue(\"order.finalSum\", 0);\n    setFieldValue(\"order.comment\", \"\");\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik\n        validateOnChange={false}\n        validateOnMount={false}\n        validateOnBlur={false}\n        initialValues={{\n          order: {\n            ...EmptyOrder,\n            employee: JSON.parse(localStorage.getItem(\"loggedUser\")),\n          },\n          onAcceptance: false,\n          clearFields: true,\n          isUrgently: false,\n        }}\n        onSubmit={(form, {resetForm, setFieldValue}) =>\n          onFormSubmit(form, resetForm, setFieldValue)\n        }\n        validationSchema={validationSchema}\n      >\n        {({values, errors, validateField, handleReset, setFieldValue}) => (\n          <Form>\n            {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\n            {checkPriceShrink(values.order, shrinkStatus, setShrinkStatus)}\n            <div className=\"row__one\">\n              <Field\n                name=\"order.entrepreneur\"\n                label=\"Підприємець\"\n                error={errors?.order?.entrepreneur}\n                validator={validateField}\n                component={ComboBox}\n                disabled={newOrderQuery.isFetching}\n                getName={(option) => option.fullName || \"\"}\n                options={queryClient.getQueryData(\"entrepreneurs\") || []}\n              />\n              <Button\n                tabIndex={-1}\n                className={classes.lock}\n                disableRipple={true}\n                onClick={() =>\n                  linkCustomer(values.order.customer, values.order.entrepreneur)\n                }\n              >\n                <LastPageOutlined className={classes.svg} />\n              </Button>\n              <Field\n                name=\"order.customer\"\n                label=\"Замовник\"\n                error={errors?.order?.customer}\n                validator={validateField}\n                component={ComboBox}\n                setEntrepreneur={true}\n                setPrice={true}\n                sortKey=\"customer\"\n                sortPage=\"main\"\n                action={onAddCustomer}\n                disabled={newOrderQuery.isFetching}\n                getName={(option) => option.customerName || \"\"}\n                options={queryClient.getQueryData(\"customers\") || []}\n              />\n              <Field\n                name=\"order.orderType\"\n                label=\"Вид\"\n                error={errors?.order?.orderType}\n                validator={validateField}\n                component={ComboBox}\n                typeNameSetter={setOrderTypeName}\n                action={onAddOrderType}\n                disabled={newOrderQuery.isFetching}\n                getName={(option) => option.typeName || \"\"}\n                options={queryClient.getQueryData(\"orderTypes\") || []}\n              />\n\n              <Field\n                name=\"order.orderKind\"\n                label=\"Тип\"\n                error={errors?.order?.orderKind}\n                validator={validateField}\n                component={ComboBox}\n                setPrice={true}\n                setDimensions={true}\n                action={() => onAddOrderKind(values.order.orderType)}\n                kindNameSetter={setOrderKindName}\n                disabled={newOrderQuery.isFetching}\n                getName={(option) => option.kindName || \"\"}\n                options={values.order.orderType?.orderKinds || []}\n              />\n            </div>\n\n            <div className=\"row__two\">\n              <Field\n                name=\"order.width\"\n                label=\"Ширина\"\n                error={errors?.order?.width}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <Button\n                tabIndex={-1}\n                className={classes.lock}\n                disableRipple={true}\n                onClick={() =>\n                  linkDimensions(\n                    values.order.orderKind,\n                    values.order.width,\n                    values.order.height\n                  )\n                }\n              >\n                <LinkOutlined className={classes.svg} />\n              </Button>\n              <Field\n                name=\"order.height\"\n                label=\"Висота\"\n                error={errors?.order?.height}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <Field\n                name=\"order.amount\"\n                label=\"Кількість\"\n                error={errors?.order?.amount}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <OutlinedInput\n                id=\"outlined\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={\n                  (\n                    ((values.order.width * values.order.height) / 1000000) *\n                    values.order.amount\n                  ).toFixed(3) || 0.0\n                }\n                endAdornment={<InputAdornment position=\"end\">м²</InputAdornment>}\n                disabled\n              />\n\n              <Field\n                name=\"order.price\"\n                label=\"Ціна\"\n                error={errors?.order?.price}\n                validator={validateField}\n                InputLabelProps={shrinkStatus}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <Button\n                tabIndex={-1}\n                className={classes.lock}\n                disableRipple={true}\n                onClick={() =>\n                  linkPrice(\n                    values.order.customer,\n                    values.order.orderKind,\n                    values.order.price\n                  )\n                }\n              >\n                <LockOpenOutlined className={classes.svg} />\n              </Button>\n\n              <Field\n                name=\"order.fees\"\n                label=\"Послуги\"\n                error={errors?.order?.fees}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <Field\n                name=\"order.finalSum\"\n                label=\"Сума\"\n                error={errors?.order?.finalSum}\n                validator={validateField}\n                component={InputField}\n                isSum={true}\n                disabled={newOrderQuery.isFetching}\n              />\n            </div>\n\n            <div className=\"row__three\">\n              <Field\n                name=\"order.comment\"\n                label=\"Опис замовлення\"\n                error={errors?.order?.comment}\n                validator={validateField}\n                numeric={false}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n            </div>\n\n            <div className=\"row__four\">\n              <div className=\"controls\">\n                <SwitchControl\n                  name=\"onAcceptance\"\n                  isChecked={values.onAcceptance}\n                  label=\"На погодженні\"\n                  disabled={newOrderQuery.isFetching}\n                />\n                <SwitchControl\n                  name=\"clearFields\"\n                  isChecked={values.clearFields}\n                  label=\"Очищати поля\"\n                  disabled={newOrderQuery.isFetching}\n                />\n                <SwitchControl\n                  name=\"isUrgently\"\n                  isChecked={values.isUrgently}\n                  label=\"Терміново\"\n                  disabled={newOrderQuery.isFetching}\n                />\n              </div>\n\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={newOrderQuery.isFetching}\n                type=\"submit\"\n              >\n                Зберегти замовлення\n              </Button>\n\n              <Button\n                className={classes.clear}\n                onClick={(e) => clearAndUnsort(e, handleReset)}\n                disabled={newOrderQuery.isFetching}\n                variant=\"contained\"\n                type=\"button\"\n              >\n                <RefreshIcon></RefreshIcon>\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n      <InfoMessage\n        type=\"success\"\n        open={showOrderInfo.success}\n        onClose={handleClose}\n        message=\"Замовлення успішно додано.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showOrderInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при додаванні замовлення.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showCELinkInfo.success}\n        onClose={handleClose}\n        message=\"Зв'язок збережено.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showCELinkInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні зв'язку.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showDimensionsInfo.success}\n        onClose={handleClose}\n        message=\"Розміри збережено.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showDimensionsInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні розмірів.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showPriceInfo.success}\n        onClose={handleClose}\n        message=\"Ціна прив'язана.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showPriceInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні ціни.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showOrderKindInfo.success}\n        onClose={handleClose}\n        message=\"Тип успішно створений.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showOrderKindInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при створенні типу. Можливо не вибраний вид.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showOrderTypeInfo.success}\n        onClose={handleClose}\n        message=\"Вид успішно створений.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showOrderTypeInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при створенні виду.\"\n      />\n    </div>\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation} from \"react-query\";\nimport {UPDATE_SORTING} from \"../context/actions\";\nimport store from \"../context/store\";\nimport {EmptySort} from \"../models/SortObject\";\n\nexport default function useSaveOrder() {\n  return useMutation((params) => Axios.post(\"/api/orders/\", params.newOrder), {\n    onSuccess: (_, passedParams) => {\n      passedParams.setStatus({success: true, error: false});\n      store.dispatch(UPDATE_SORTING({...EmptySort}, \"main\"));\n      passedParams.resetForm();\n    },\n    onError: (_, passedParams) => {\n      passedParams.setStatus({success: false, error: true});\n    },\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveCELink() {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (params) =>\n      Axios.get(\"/api/ce-links/\" + params.customerId + \"/\" + params.entrepreneurId),\n    {\n      onSuccess: (_, passedParams) => {\n        queryClient.invalidateQueries(\"ce-links\");\n        passedParams.setStatus({success: true, error: false});\n      },\n      onError: (_, passedParams) => {\n        passedParams.setStatus({success: false, error: true});\n      },\n    }\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveCELink() {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (params) =>\n      Axios.get(\n        \"/api/cp-links/\" +\n          params.customerId +\n          \"/\" +\n          params.orderKindId +\n          \"/\" +\n          params.price\n      ),\n    {\n      onSuccess: (_, passedParams) => {\n        queryClient.invalidateQueries(\"cp-links\");\n        passedParams.setStatus({success: true, error: false});\n      },\n      onError: (_, passedParams) => {\n        passedParams.setStatus({success: false, error: true});\n      },\n    }\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveOrderKind() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.post(\"/api/order-kinds/\", params.orderKind), {\n    onError: (_, params) => {\n      params.setStatus({success: false, error: true});\n    },\n    onSuccess: (response, params) => {\n      params.orderType.orderKinds.push(response.data);\n      queryClient.invalidateQueries([\"orderTypes\"]);\n      params.setStatus({success: true, error: false});\n    },\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveOrderType() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.post(\"/api/order-types/\", params.orderType), {\n    onError: (_, params) => {\n      params.setStatus({success: false, error: true});\n    },\n    onSuccess: (_, params) => {\n      queryClient.invalidateQueries([\"orderTypes\"]);\n      params.setStatus({success: true, error: false});\n    },\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveDimensions() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.put(\"/api/order-kinds/\", params.orderKind), {\n    onSuccess: (_, passedParams) => {\n      queryClient.invalidateQueries(\"orderTypes\");\n      passedParams.setStatus({success: true, error: false});\n    },\n    onError: (_, passedParams) => {\n      passedParams.setStatus({success: false, error: true});\n    },\n  });\n}\n","import React from \"react\";\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\nimport {makeStyles} from \"@material-ui/core\";\nimport {fieldToTextField} from \"formik-material-ui\";\n\nconst useStyles = makeStyles(() => ({\n  datepicker: {\n    margin: 0,\n  },\n}));\n\nfunction DatePicker({label, validator, onTouch = false, ...props}) {\n  const classes = useStyles();\n  const {\n    form: {setFieldValue},\n  } = props;\n  const {...field} = fieldToTextField(props);\n  const {name} = field;\n\n  return (\n    <KeyboardDatePicker\n      {...props}\n      {...field}\n      autoOk={true}\n      autoComplete=\"off\"\n      helperText={\"\"}\n      className={classes.datepicker}\n      inputVariant=\"outlined\"\n      variant=\"inline\"\n      format=\"dd/MM/yyyy\"\n      margin=\"normal\"\n      label={label}\n      onChange={(value) => {\n        setFieldValue(name, value);\n\n        if (onTouch) {\n          onTouch(true);\n        }\n\n        if (validator) {\n          validator(name);\n        }\n      }}\n      KeyboardButtonProps={{\n        \"aria-label\": \"change date\",\n      }}\n    />\n  );\n}\n\nexport default DatePicker;\n","import {TextField} from \"@material-ui/core\";\nimport {useFormikContext} from \"formik\";\nimport React from \"react\";\n\nconst DependentInput = ({name, label, field, error, validator, value, ...props}) => {\n  const {onChange} = field;\n  const {\n    values: {payment},\n    setFieldValue,\n  } = useFormikContext();\n\n  React.useEffect(() => {\n    if (payment.paymentType) {\n      setFieldValue(\"payment.percentage\", payment.paymentType?.paymentPercentage);\n    } else {\n      setFieldValue(\"payment.percentage\", 0);\n    }\n  }, [payment.paymentType, setFieldValue]);\n\n  return (\n    <TextField\n      {...props}\n      {...field}\n      error={!!error}\n      id=\"metrics\"\n      size=\"small\"\n      variant=\"outlined\"\n      autoComplete=\"off\"\n      label={label}\n      onChange={(e) => {\n        if (e.target.value.match(/^\\d*\\.?\\d*$/) || e.target.value.length === 0) {\n          setFieldValue(\"payment.percentage\", e.target.value);\n          onChange(e);\n        }\n        validator(name);\n      }}\n    />\n  );\n};\n\nexport default DependentInput;\n","import Axios from \"axios\";\n\nexport const fetchCustomers = async () => {\n  const res = await Axios.get(\"/api/customers/\");\n  return res.data;\n};\n\nexport const fetchEntrepreneurs = async () => {\n  const res = await Axios.get(\"/api/entrepreneurs/\");\n  return res.data;\n};\n\nexport const fetchOrderTypes = async () => {\n  const res = await Axios.get(\"/api/order-types/\");\n  return res.data;\n};\n\nexport const fetchOrderKinds = async () => {\n  const res = await Axios.get(\"/api/order-kinds/\");\n  return res.data;\n};\n\nexport const fetchStatuses = async () => {\n  const res = await Axios.get(\"/api/orders/statuses/\");\n  return res.data;\n};\n\nexport const fetchPaymentMethods = async () => {\n  const res = await Axios.get(\"/api/payments/\");\n  return res.data;\n};\n\nexport const fetchCELinks = async () => {\n  const res = await Axios.get(\"/api/ce-links/\");\n  return res.data;\n};\n\nexport const fetchCPLinks = async () => {\n  const res = await Axios.get(\"/api/cp-links/\");\n  return res.data;\n};\n","export const EmptyPayment = {\n  entrepreneur: null,\n  customer: null,\n  paymentDate: null,\n  sum: 0,\n  percentage: 0,\n  paymentType: null,\n};\n","import {Button} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {LinkOutlined} from \"@material-ui/icons\";\nimport {Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport * as yup from \"yup\";\nimport ComboBox from \"./ComboBox\";\nimport {UPDATE_SORTING} from \"./context/actions\";\nimport store from \"./context/store\";\nimport DatePicker from \"./DatePicker\";\nimport DependentInput from \"./DependentInput\";\nimport useMakePayment from \"./hooks/useMakePayment\";\nimport usePaymentMethods from \"./hooks/usePaymentMethods\";\nimport useUpdatePaymentMethod from \"./hooks/useUpdatePaymentMethod\";\nimport InfoMessage from \"./InfoMessage\";\nimport InputField from \"./InputField\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {EmptyPayment} from \"./models/PaymentObject\";\nimport {EmptySort} from \"./models/SortObject\";\nimport {setCurrentTime} from \"./services/utils\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    margin: \"0 auto\",\n    width: \"52%\",\n  },\n  row__one: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"1fr 2fr\",\n    margin: \".5rem auto 1rem auto\",\n  },\n  row__two: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"1fr 1fr 0.05fr 1fr 1fr\",\n    margin: \"1rem auto\",\n\n    \"& .MuiOutlinedInput-input\": {\n      padding: \"8px 8px\",\n    },\n\n    \"& .MuiInputLabel-outlined\": {\n      transform: \"translate(14px, 10px) scale(1)\",\n    },\n\n    \"& .MuiButtonBase-root\": {\n      padding: \"2px !important\",\n    },\n\n    \"& .MuiOutlinedInput-adornedEnd\": {\n      paddingRight: \"3px\",\n    },\n\n    \"& .MuiAutocomplete-endAdornment\": {\n      top: \"initial\",\n      right: \"11px !important\",\n    },\n  },\n  button: {\n    gridColumn: 2,\n    width: \"16rem\",\n    height: \"2.375rem\",\n    justifySelf: \"center\",\n  },\n  clear: {\n    backgroundColor: \"#fff\",\n    minWidth: 0,\n    justifySelf: \"flex-end\",\n    margin: \"0px 0px 1px 0\",\n    width: \"2.4rem\",\n  },\n  lock: {\n    padding: 0,\n    width: \"100%\",\n    backgroundColor: \"white !important\",\n    minWidth: 0,\n\n    \"&:hover\": {\n      backgroundColor: \"white\",\n    },\n  },\n  svg: {\n    fill: \"rgba(0, 0, 0, 0.23)\",\n\n    \"&:hover\": {\n      fill: \"black\",\n    },\n  },\n  successInfo: {\n    display: \"flex\",\n  },\n  successText: {\n    margin: \"auto .5rem\",\n    color: \"#27A637\",\n  },\n  errorInfo: {\n    display: \"flex\",\n  },\n  errorText: {\n    margin: \"auto .5rem\",\n    color: \"#d2000a\",\n  },\n  errorSvg: {\n    fontSize: \"2.54rem\",\n    fill: \"#d2000a\",\n  },\n  successSvg: {\n    fontSize: \"2.54rem\",\n    fill: \"#27A637\",\n  },\n}));\n\nconst validationSchema = yup.object({\n  payment: yup.object({\n    entrepreneur: yup.object().nullable(),\n    customer: yup.object().required(),\n    paymentDate: yup.date().required(),\n    sum: yup.number().lessThan(2000000000).positive().required(),\n    percentage: yup.number().lessThan(2000000000).positive().min(0).required(),\n    paymentType: yup.object().required(),\n  }),\n});\n\nfunction PaymentForm() {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const makePaymentQuery = useMakePayment();\n  const paymentMethods = usePaymentMethods();\n  const updatePaymentMethodQuery = useUpdatePaymentMethod();\n  const [showPaymentInfo, setShowPaymentInfo] = React.useState({\n    success: false,\n    error: false,\n  });\n  const [showPercentageLinkInfo, setShowPercentageLinkInfo] = React.useState({\n    success: false,\n    error: false,\n  });\n\n  const handleClose = () => {\n    setShowPaymentInfo({success: false, error: false});\n    setShowPercentageLinkInfo({success: false, error: false});\n  };\n\n  const linkPercentage = (paymentMethod, percentage) => {\n    paymentMethod.paymentPercentage = percentage;\n    updatePaymentMethodQuery.mutate({\n      paymentMethod: paymentMethod,\n      setStatus: setShowPercentageLinkInfo,\n    });\n  };\n\n  const clearAndUnsort = (e, resetForm) => {\n    store.dispatch(UPDATE_SORTING({...EmptySort}, \"payment\"));\n    resetForm(e);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik\n        validateOnChange={false}\n        validateOnMount={false}\n        validateOnBlur={false}\n        initialValues={{payment: {...EmptyPayment, paymentDate: new Date()}}}\n        validationSchema={validationSchema}\n        onSubmit={(form) => {\n          setCurrentTime(form.payment.paymentDate);\n          form.payment.receiver = form.payment.paymentType.typeName;\n          makePaymentQuery.mutate({\n            payment: form.payment,\n            setStatus: setShowPaymentInfo,\n          });\n        }}\n      >\n        {({values, errors, handleReset, validateField}) => (\n          <Form style={{margin: \"0 auto\"}}>\n            <div className={classes.row__one}>\n              <Field\n                name=\"payment.entrepreneur\"\n                label=\"Підприємець\"\n                error={errors?.payment?.entrepreneur}\n                validator={validateField}\n                component={ComboBox}\n                sortKey=\"entrepreneur\"\n                sortPage=\"payment\"\n                disabled={makePaymentQuery.isLoading}\n                getName={(option) => option.fullName || \"\"}\n                options={queryClient.getQueryData(\"entrepreneurs\") || []}\n              />\n              <Field\n                name=\"payment.customer\"\n                label=\"Замовник\"\n                error={errors?.payment?.customer}\n                component={ComboBox}\n                validator={validateField}\n                sortKey=\"customer\"\n                sortPage=\"payment\"\n                disabled={makePaymentQuery.isLoading}\n                getName={(option) => option.customerName || \"\"}\n                options={queryClient.getQueryData(\"customers\") || []}\n              />\n            </div>\n\n            <div className={classes.row__two}>\n              <Field\n                component={DatePicker}\n                label=\"Дата\"\n                name=\"payment.paymentDate\"\n                validator={validateField}\n                disabled={makePaymentQuery.isLoading}\n              />\n\n              <Field\n                name=\"payment.paymentType\"\n                label=\"Тип оплати\"\n                error={errors?.payment?.paymentType}\n                component={ComboBox}\n                validator={validateField}\n                disabled={makePaymentQuery.isLoading}\n                getName={(option) => option.typeName || \"\"}\n                options={paymentMethods?.data || []}\n              />\n              <Button\n                className={classes.lock}\n                disableRipple={true}\n                onClick={() =>\n                  linkPercentage(\n                    values.payment.paymentType,\n                    values.payment.percentage\n                  )\n                }\n              >\n                <LinkOutlined className={classes.svg} />\n              </Button>\n              <Field\n                name=\"payment.percentage\"\n                label=\"Відсоток\"\n                error={errors?.payment?.percentage}\n                validator={validateField}\n                component={DependentInput}\n                disabled={makePaymentQuery.isLoading}\n              />\n              <Field\n                name=\"payment.sum\"\n                label=\"Сума\"\n                error={errors?.payment?.sum}\n                validator={validateField}\n                component={InputField}\n                disabled={makePaymentQuery.isLoading}\n              />\n            </div>\n\n            <div className=\"sort__row__three\">\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={makePaymentQuery.isLoading}\n                className={classes.button}\n                type=\"submit\"\n              >\n                Оплатити\n              </Button>\n\n              <Button\n                className={classes.clear}\n                onClick={(e) => clearAndUnsort(e, handleReset)}\n                disabled={makePaymentQuery.isLoading}\n                variant=\"contained\"\n                type=\"button\"\n              >\n                <RefreshIcon></RefreshIcon>\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n      <InfoMessage\n        type=\"success\"\n        open={showPaymentInfo.success}\n        onClose={handleClose}\n        message=\"Оплата успішно внесена.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showPaymentInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при внесенні оплати.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showPercentageLinkInfo.success}\n        onClose={handleClose}\n        message=\"Зв'язок успішно збережений.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showPercentageLinkInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні зв'язку.\"\n      />\n    </div>\n  );\n}\n\nexport default PaymentForm;\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useMakePayment() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.post(\"/api/payments/\", params.payment), {\n    onError: (_, params) => {\n      params.setStatus({success: false, error: true});\n    },\n    onSuccess: (_, params) => {\n      params.setStatus({success: true, error: false});\n      queryClient.invalidateQueries([\"orders\"]);\n      params.payment.sum = 0;\n    },\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as DataService from \"../services/customer-service\";\n\nexport default function usePaymentMethods() {\n  return useQuery(\"paymentMethods\", DataService.fetchPaymentMethods, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useUpdatePaymentMethod() {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (params) => Axios.put(\"/api/payments/types/\", params.paymentMethod),\n    {\n      onSuccess: (_, passedParams) => {\n        queryClient.invalidateQueries(\"paymentMethods\");\n        passedParams.setStatus({success: true, error: false});\n      },\n      onError: (_, passedParams) => {\n        passedParams.setStatus({success: false, error: true});\n      },\n    }\n  );\n}\n","import {Button} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as yup from \"yup\";\nimport ComboBox from \"./ComboBox\";\nimport {UPDATE_SORTING} from \"./context/actions\";\nimport DatePicker from \"./DatePicker\";\nimport InputField from \"./InputField\";\nimport {EmptySort} from \"./models/SortObject\";\nimport \"./SortForm.css\";\nimport SwitchControl from \"./SwitchControl\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    margin: \"0 auto\",\n    width: \"52%\",\n  },\n  button: {\n    width: \"16rem\",\n    justifySelf: \"center\",\n  },\n  clear: {\n    backgroundColor: \"#fff\",\n    minWidth: 0,\n    justifySelf: \"flex-end\",\n    margin: \"0px 0px 1px 0\",\n    width: \"2.4rem\",\n  },\n}));\n\nconst validationSchema = yup.object({\n  sort: yup.object({\n    customer: yup.object().nullable(),\n    status: yup.object().nullable(),\n    dateFrom: yup.date().nullable(),\n    dateTill: yup.date().nullable(),\n    orderKind: yup.object().nullable(),\n    orderType: yup.object().nullable(),\n    details: yup.string().trim().max(255).nullable(),\n  }),\n});\n\nfunction SortForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n  const authState = useSelector((state) => state.auth);\n\n  const clearAndUnsort = (e, resetForm) => {\n    dispatch(UPDATE_SORTING({...EmptySort}, \"sort\"));\n    resetForm(e);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik\n        validateOnChange={false}\n        validateOnMount={false}\n        validateOnBlur={false}\n        initialValues={{sort: EmptySort, showUserOrders: false}}\n        onSubmit={(form) => {\n          form.showUserOrders\n            ? (form.sort.employee = authState.loggedUser)\n            : (form.sort.employee = null);\n          form.sort.details = form.sort.details.trim();\n          dispatch(UPDATE_SORTING(form.sort, \"sort\"));\n        }}\n        validationSchema={validationSchema}\n      >\n        {({values, errors, handleReset, validateField}) => (\n          <Form>\n            <div className=\"sort__row__one\">\n              <Field\n                name=\"sort.customer\"\n                label=\"Замовник\"\n                error={errors?.sort?.customer}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.customerName || \"\"}\n                options={queryClient.getQueryData(\"customers\") || []}\n              />\n              <Field\n                name=\"sort.orderType\"\n                label=\"Вид\"\n                error={errors?.sort?.orderType}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.typeName || \"\"}\n                options={queryClient.getQueryData(\"orderTypes\") || []}\n              />\n              <Field\n                name=\"sort.orderKind\"\n                label=\"Тип\"\n                error={errors?.sort?.orderKind}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.kindName || \"\"}\n                options={values.sort.orderType?.orderKinds || []}\n              />\n            </div>\n\n            <div className=\"sort__row__two\">\n              <div className=\"datepickers\">\n                <Field\n                  component={DatePicker}\n                  disabled={false}\n                  label=\"Від\"\n                  name=\"sort.dateFrom\"\n                />\n                <Field\n                  component={DatePicker}\n                  disabled={false}\n                  label=\"До\"\n                  name=\"sort.dateTill\"\n                />\n              </div>\n              <Field\n                name=\"sort.status\"\n                label=\"Статус\"\n                error={errors?.sort?.status}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.name || \"\"}\n                options={queryClient.getQueryData(\"statuses\") || []}\n              />\n              <Field\n                name=\"sort.details\"\n                label=\"Опис замовлення\"\n                error={errors?.sort?.details}\n                numeric={false}\n                component={InputField}\n                validator={validateField}\n              />\n            </div>\n\n            <div className=\"sort__row__three\">\n              <SwitchControl\n                name=\"showUserOrders\"\n                isChecked={values.showUserOrders}\n                label=\"Лише мої замовлення\"\n              />\n\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                className={classes.button}\n                type=\"submit\"\n              >\n                Сортувати\n              </Button>\n\n              <Button\n                className={classes.clear}\n                onClick={(e) => clearAndUnsort(e, handleReset)}\n                variant=\"contained\"\n                type=\"button\"\n              >\n                <RefreshIcon></RefreshIcon>\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default SortForm;\n","import {Button, Collapse, Paper, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {useIsFetching, useQueryClient} from \"react-query\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport \"./ActionBar.css\";\nimport AddOrderForm from \"./AddOrderForm\";\nimport {SET_ACTIVE_SORTING} from \"./context/actions\";\nimport PaymentForm from \"./PaymentForm\";\nimport SortForm from \"./SortForm\";\n\nexport default function ActionBar() {\n  const [currentTab, setTab] = useState(0);\n  const queryClient = useQueryClient();\n  const dispatch = useDispatch();\n  const isFetching = useIsFetching();\n  const authState = useSelector((store) => store.auth);\n  const sortState = useSelector((state) => state.sortSelections);\n\n  const open = (tabId) => (currentTab === tabId ? setTab(0) : setTab(tabId));\n\n  const invalidateAddOrderValues = () => {\n    queryClient.invalidateQueries(\"customers\");\n    queryClient.invalidateQueries(\"ce-links\");\n    queryClient.invalidateQueries(\"cp-links\");\n    if (!isFetching) dispatch(SET_ACTIVE_SORTING(\"main\"));\n  };\n\n  const invalidateSortValues = () => {\n    queryClient.invalidateQueries(\"customers\");\n    queryClient.invalidateQueries(\"statuses\");\n    if (!isFetching) dispatch(SET_ACTIVE_SORTING(\"sort\"));\n  };\n\n  const invalidatePaymentValues = () => {\n    queryClient.invalidateQueries(\"customers\");\n    if (!isFetching) dispatch(SET_ACTIVE_SORTING(\"payment\"));\n  };\n\n  const showCustomerInfo = () => {\n    if (!sortState[sortState.active].selectedCustomer) return;\n    return sortState[sortState.active].selectedCustomer?.debtor ? (\n      <>\n        <Typography variant=\"subtitle1\">\n          <img\n            className=\"debtor-mark\"\n            src=\"img/Blackmark.svg\"\n            width=\"19\"\n            height=\"19\"\n            alt=\"blackmark\"\n          />{\" \"}\n          <strong>\n            {sortState[sortState.active].selectedCustomer?.customerName}\n          </strong>{\" \"}\n          {sortState[sortState.active].selectedCustomer?.customerGroup}:{\" \"}\n          {sortState[sortState.active].selectedCustomer?.info}\n        </Typography>\n      </>\n    ) : (\n      <>\n        <Typography variant=\"subtitle1\">\n          <strong>\n            {sortState[sortState.active].selectedCustomer?.customerName}\n          </strong>{\" \"}\n          {sortState[sortState.active].selectedCustomer?.customerGroup}:{\" \"}\n          {sortState[sortState.active].selectedCustomer?.info}\n        </Typography>\n      </>\n    );\n  };\n\n  return (\n    <Paper elevation={2}>\n      <div className=\"action_bar_container\">\n        <div className=\"action__bar\">\n          <div className=\"action__bar__info\">{showCustomerInfo()}</div>\n          <div className=\"action__bar__button\">\n            {!authState.roles.includes(\"ROLE_GROUNDFLOOR\") &&\n              !authState.roles.includes(\"ROLE_UVPRINT\") && (\n                <Button variant=\"contained\" color=\"primary\" onClick={() => open(1)}>\n                  Додати замовлення\n                </Button>\n              )}\n            <Button\n              style={{marginLeft: \".5rem\"}}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => open(2)}\n            >\n              Сортування\n            </Button>\n            {!authState.roles.includes(\"ROLE_GROUNDFLOOR\") &&\n              !authState.roles.includes(\"ROLE_UVPRINT\") && (\n                <Button\n                  style={{marginLeft: \".5rem\"}}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => open(3)}\n                >\n                  Внести оплату\n                </Button>\n              )}\n          </div>\n        </div>\n\n        <Collapse\n          in={currentTab === 1}\n          timeout=\"auto\"\n          onEntered={invalidateAddOrderValues}\n        >\n          <AddOrderForm />\n        </Collapse>\n\n        <Collapse\n          in={currentTab === 2}\n          timeout=\"auto\"\n          onEntered={invalidateSortValues}\n        >\n          <SortForm />\n        </Collapse>\n\n        <Collapse\n          in={currentTab === 3}\n          timeout=\"auto\"\n          onEntered={invalidatePaymentValues}\n        >\n          <PaymentForm />\n        </Collapse>\n      </div>\n    </Paper>\n  );\n}\n","import {Button, Link, Paper, TextField} from \"@material-ui/core\";\nimport {XGrid} from \"@material-ui/x-grid\";\nimport React, {useState} from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {SHOW_CUSTOMER_MODAL} from \"./context/actions\";\nimport store from \"./context/store\";\nimport {fixCustomers} from \"./services/utils\";\nimport useExportCustomers from \"./hooks/useExportCustomers\";\nimport {useSelector} from \"react-redux\";\nimport \"./ClientTable.css\";\n\nconst columns = [\n  {\n    field: \"customerName\",\n    headerName: \"Назва замовника\",\n    flex: 3,\n    renderCell: (params) => (\n      <Link\n        className=\"name-link\"\n        onClick={() => store.dispatch(SHOW_CUSTOMER_MODAL(params.row))}\n      >\n        <b>{params.value}</b>\n      </Link>\n    ),\n  },\n  {\n    field: \"debtor\",\n    headerName: \"Боржник\",\n    flex: 1.4,\n    cellClassName: \"centered\",\n    renderCell: (params) => {\n      if (params.value) {\n        return (\n          <img src=\"img/Blackmark.svg\" width=\"19\" height=\"19\" alt=\"blackmark\" />\n        );\n      } else return <div></div>;\n    },\n  },\n  {\n    field: \"customerGroup\",\n    headerName: \"Група\",\n    flex: 5,\n  },\n  {\n    field: \"firstPerson\",\n    headerName: \"Особа 1\",\n    flex: 2,\n  },\n  {\n    field: \"firstPhone\",\n    headerName: \"Телефон 1\",\n    flex: 2.5,\n  },\n  {\n    field: \"firstEmail\",\n    headerName: \"Email 1\",\n    flex: 4,\n  },\n  {\n    field: \"city\",\n    headerName: \"Місто\",\n    flex: 1.3,\n  },\n  {\n    field: \"info\",\n    headerName: \"Інформація\",\n    flex: 6,\n  },\n];\n\nexport default function ClientsTable() {\n  const queryClient = useQueryClient();\n  const exportQuery = useExportCustomers();\n  const authState = useSelector((state) => state.auth);\n  const [q, setQ] = useState(\"\");\n\n  const filter = (rows) => {\n    return rows.filter(\n      (row) =>\n        row.customerName?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.customerGroup?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.firstPerson?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.firstPhone?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.firstEmail?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.city?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.info?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1\n    );\n  };\n\n  return (\n    <>\n      <TextField\n        variant=\"outlined\"\n        size=\"small\"\n        placeholder=\"Швидкий пошук\"\n        onChange={(e) => setQ(e.target.value)}\n        InputProps={{\n          endAdornment: authState.roles.includes(\"ADMIN\") && (\n            <Button\n              className=\"export-btn\"\n              variant=\"outlined\"\n              onClick={() =>\n                exportQuery.mutate(\n                  filter(fixCustomers(queryClient.getQueryData(\"customers\") || []))\n                )\n              }\n            >\n              Експорт\n            </Button>\n          ),\n        }}\n      />\n      <Paper elevation={4} className=\"x-grid\">\n        <div className=\"frame\">\n          <div className=\"grid-holder\">\n            <XGrid\n              className=\"customers-grid\"\n              rows={filter(\n                fixCustomers(queryClient.getQueryData(\"customers\") || [])\n              )}\n              columns={columns}\n              sortModel={[{field: \"customerName\", sort: \"asc\"}]}\n              loading={queryClient.isFetching(\"customers\")}\n              rowHeight={35}\n              headerHeight={35}\n              pagination={true}\n              disableSelectionOnClick={true}\n            />\n          </div>\n        </div>\n      </Paper>\n    </>\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation} from \"react-query\";\n\nexport default function useExportCustomers() {\n  return useMutation(\n    (customers) =>\n      Axios.post(\n        \"api/customers/export/\",\n        {customers: customers},\n        {\n          responseType: \"arraybuffer\",\n        }\n      ),\n    {\n      onError: (_, params) => {\n        params.setStatus({success: false, error: true});\n      },\n      onSuccess: (val, _) => {\n        const blob = new Blob([val.data], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        });\n\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n          window.navigator.msSaveOrOpenBlob(blob);\n          return;\n        }\n        const data = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = data;\n        link.download = \"Клієнти.xlsx\";\n        link.dispatchEvent(\n          new MouseEvent(\"click\", {bubbles: true, cancelable: true, view: window})\n        );\n      },\n    }\n  );\n}\n","import {Button, Typography} from \"@material-ui/core\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Modal from \"@material-ui/core/Modal\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as yup from \"yup\";\nimport {CLOSE_CUSTOMER_MODAL} from \"./context/actions\";\nimport useSaveCustomer from \"./hooks/useSaveCustomer\";\nimport InfoMessage from \"./InfoMessage\";\nimport InputField from \"./InputField\";\nimport SwitchControl from \"./SwitchControl\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"4px\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4),\n    width: \"40%\",\n\n    \"& .MuiOutlinedInput-inputMarginDense\": {\n      padding: \"8px !important\",\n    },\n  },\n  link: {\n    cursor: \"pointer\",\n    color: theme.palette.primary.main,\n  },\n  h2: {\n    textAlign: \"center\",\n    fontWeight: \"400\",\n    marginBottom: \"1rem\",\n  },\n  buttons: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n  },\n  clearButton: {\n    backgroundColor: \"rgb(210,0,10)\",\n    color: \"white\",\n    marginRight: \"1rem\",\n\n    \"&:hover\": {\n      backgroundColor: \"rgb(190,0,10)\",\n    },\n  },\n  rowOne: {\n    gridTemplateRows: \"1fr 1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    gridColumnGap: \"15px\",\n    gridRowGap: \"10px\",\n  },\n  rowTwo: {\n    gridTemplateRows: \"1fr 1fr 1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    gridRowGap: \"10px\",\n  },\n  longTextField: {\n    gridColumnStart: 1,\n    gridColumnEnd: 3,\n  },\n  billNo: {\n    gridColumn: 4,\n  },\n  switchHolder: {\n    gridColumn: 3,\n    justifySelf: \"end\",\n\n    \"& .MuiFormControlLabel-root\": {\n      margin: 0,\n    },\n  },\n  auxiliaryRow: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n    margin: \"2rem auto 1rem auto\",\n\n    \"& .MuiOutlinedInput-input\": {\n      padding: \"8px\",\n    },\n\n    \"& .MuiButtonBase-root\": {\n      padding: \"2px !important\",\n    },\n\n    \"& .MuiOutlinedInput-adornedEnd\": {\n      paddingRight: \"3px\",\n    },\n\n    \"& #date-picker-inline-label\": {\n      transform: \"translate(14px, 10px) scale(1)\",\n    },\n  },\n}));\n\nconst validationSchema = yup.object({\n  customer: yup.object({\n    customerName: yup.string().required(),\n    customerGroup: yup.string().nullable(),\n    city: yup.string().nullable(),\n    info: yup.string().nullable(),\n    firstPerson: yup.string().trim().max(25).nullable(),\n    firstPhone: yup.string().max(10).min(10).nullable(),\n    firstEmail: yup.string().email().nullable(),\n    secondPerson: yup.string().trim().max(25).nullable(),\n    secondPhone: yup.string().max(10).min(10).nullable(),\n    secondEmail: yup.string().email().nullable(),\n    thirdPerson: yup.string().trim().max(25).nullable(),\n    thirdPhone: yup.string().max(10).min(10).nullable(),\n    thirdEmail: yup.string().email().nullable(),\n  }),\n});\n\nexport default function CustomerForm() {\n  const classes = useStyles();\n  const customerModalState = useSelector((store) => store.showCustomerModal);\n  const saveCustomerQuery = useSaveCustomer();\n  const dispatch = useDispatch();\n  const [showSavedInfo, setShowSavedInfo] = React.useState({\n    success: false,\n    error: false,\n  });\n\n  const handleClose = () => {\n    setShowSavedInfo({success: false, error: false});\n  };\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={customerModalState.show}\n        onClose={() => dispatch(CLOSE_CUSTOMER_MODAL())}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={customerModalState.show}>\n          <div className={classes.paper}>\n            <Formik\n              validateOnChange={false}\n              validateOnMount={false}\n              validateOnBlur={false}\n              initialValues={{customer: customerModalState.customer}}\n              onSubmit={(form) => {\n                saveCustomerQuery.mutate({\n                  customer: form.customer,\n                  setStatus: setShowSavedInfo,\n                });\n              }}\n              validationSchema={validationSchema}\n            >\n              {({values, errors, validateField}) => (\n                <Form>\n                  <Typography className={classes.h2} component=\"h2\" variant=\"h5\">\n                    {customerModalState.customer.customerName\n                      ? customerModalState.customer.customerName\n                      : \"Новий замовник\"}\n                  </Typography>\n                  <div className={`row__one ${classes.rowOne}`}>\n                    <Field\n                      className={classes.longTextField}\n                      name=\"customer.customerName\"\n                      label=\"Назва замовника\"\n                      error={errors?.customer?.customerName}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.customerGroup\"\n                      label=\"Група\"\n                      error={errors?.customer?.customerGroup}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      className={classes.longTextField}\n                      name=\"customer.info\"\n                      label=\"Примітка\"\n                      error={errors?.customer?.info}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.city\"\n                      label=\"Місто\"\n                      error={errors?.customer?.city}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                  </div>\n\n                  <div className={`${classes.rowTwo} row__two`}>\n                    <Field\n                      name=\"customer.firstPerson\"\n                      label=\"Конт. Особа 1\"\n                      error={errors?.customer?.firstPerson}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.firstPhone\"\n                      label=\"Телефон (без +38)\"\n                      error={errors?.customer?.firstPhone}\n                      validator={validateField}\n                      component={InputField}\n                      phone={true}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.firstEmail\"\n                      label=\"Email\"\n                      error={errors?.customer?.firstEmail}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n\n                    <Field\n                      name=\"customer.secondPerson\"\n                      label=\"Конт. Особа 2\"\n                      error={errors?.customer?.secondPerson}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.secondPhone\"\n                      label=\"Телефон (без +38)\"\n                      error={errors?.customer?.secondPhone}\n                      validator={validateField}\n                      component={InputField}\n                      phone={true}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.secondEmail\"\n                      label=\"Email\"\n                      error={errors?.customer?.secondEmail}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n\n                    <Field\n                      name=\"customer.thirdPerson\"\n                      label=\"Конт. Особа 3\"\n                      error={errors?.customer?.thirdPerson}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.thirdPhone\"\n                      label=\"Телефон (без +38)\"\n                      error={errors?.customer?.thirdPhone}\n                      validator={validateField}\n                      component={InputField}\n                      phone={true}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.thirdEmail\"\n                      label=\"Email\"\n                      error={errors?.customer?.thirdEmail}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                  </div>\n\n                  <div className={classes.buttons}>\n                    <Button\n                      style={{gridColumn: 2}}\n                      color=\"primary\"\n                      variant=\"contained\"\n                      className={classes.button}\n                      disabled={saveCustomerQuery.isLoading}\n                      type=\"submit\"\n                    >\n                      Зберегти замовника\n                    </Button>\n\n                    {(values.customer.customerId && (\n                      <div className={classes.switchHolder}>\n                        <SwitchControl\n                          name=\"customer.debtor\"\n                          label=\"Боржник\"\n                          isChecked={values.customer.debtor}\n                          disabled={saveCustomerQuery.isLoading}\n                        />\n                      </div>\n                    )) ||\n                      null}\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </Fade>\n      </Modal>\n      <InfoMessage\n        type=\"success\"\n        open={showSavedInfo.success}\n        onClose={handleClose}\n        message=\"Замовинка успішно збережено.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showSavedInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні замовника. Можливо клієнт зі схожою інформацією вже існує.\"\n      />\n    </div>\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\nimport {useDispatch} from \"react-redux\";\nimport {CLOSE_CUSTOMER_MODAL} from \"../context/actions\";\n\nexport default function useSaveCustomer() {\n  const queryClient = useQueryClient();\n  const dispatch = useDispatch();\n\n  return useMutation(\n    (params) =>\n      params.customer.customerId === 0\n        ? Axios.post(\"/api/customers/\", params.customer)\n        : Axios.put(\"/api/customers/\", params.customer),\n    {\n      onSuccess: (_, passedParams) => {\n        queryClient.invalidateQueries(\"customers\");\n        dispatch(CLOSE_CUSTOMER_MODAL());\n        passedParams.setStatus({success: true, error: false});\n      },\n      onError: (_, passedParams) => {\n        console.log(_);\n        passedParams.setStatus({success: false, error: true});\n      },\n    }\n  );\n}\n","import {Link, Typography} from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useHistory} from \"react-router-dom\";\nimport \"./Header.css\";\nimport * as AuthService from \"./services/auth-service\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  logoutButton: {\n    padding: 0,\n  },\n  logoutHolder: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"baseline\",\n    whiteSpace: \"nowrap\",\n  },\n  tabs: {\n    margin: \"0 auto\",\n    cursor: \"pointer\",\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n  const history = useHistory();\n  const queryClient = useQueryClient();\n  const [value, setValue] = React.useState(0);\n\n  const logout = () => {\n    AuthService.unauthorize();\n    history.push(\"/login\");\n  };\n\n  const changeView = (_e, newValue) => {\n    setValue(newValue);\n    switch (newValue) {\n      case 0:\n        history.push(\"/\");\n        break;\n      case 1:\n        queryClient.invalidateQueries(\"customers\");\n        history.push(\"/clients\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Paper elevation={2}>\n      <div className=\"header__container\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Link color=\"inherit\" href=\"https://psdruk.com.ua/\">\n              <img width=\"110\" height=\"50\" src=\"/img/logo.svg\" alt=\"logo\" />\n            </Link>\n\n            <Tabs\n              className={classes.tabs}\n              value={value}\n              onChange={changeView}\n              TabIndicatorProps={{style: {background: \"white\"}}}\n              indicatorColor=\"secondary\"\n              aria-label=\"scrollable auto tabs example\"\n            >\n              <Tab label=\"Головна\" />\n              {/* <Tab label=\"Сортування\" /> */}\n              <Tab label=\"Клієнти\" />\n              {/* <Tab label=\"Статус\" /> */}\n            </Tabs>\n\n            <div className={classes.logoutHolder}>\n              <Typography variant=\"body1\" style={{fontWeight: 300}}>\n                Вітаємо, <b>{localStorage.getItem(\"username\")}</b>\n              </Typography>\n              <Button\n                color=\"inherit\"\n                onClick={logout}\n                className={classes.logoutButton}\n              >\n                Вийти\n              </Button>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n    </Paper>\n  );\n}\n","import Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport React, {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\";\nimport {SET_AUTHENTICATED} from \"./context/actions\";\nimport InfoMessage from \"./InfoMessage\";\nimport * as AuthService from \"./services/auth-service\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://psdruk.com.ua/\">\n        psdruk.com.ua\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [form, setForm] = useState({username: \"\", password: \"\"});\n  const [showNotYetVerified, setShowNotYetVerified] = useState(false);\n  const [showWrongCredentials, setShowWrongCredentials] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  const setUsername = (e) => setForm({...form, username: e.target.value});\n  const setPassword = (e) => setForm({...form, password: e.target.value});\n\n  const handleClose = () => {\n    setShowNotYetVerified(false);\n    setShowWrongCredentials(false);\n  };\n\n  const submitCredentials = (e) => {\n    e.preventDefault();\n    setIsDisabled(true);\n    AuthService.authorize(form)\n      .then((data) => {\n        if (data.roles.includes(\"ROLE_CUSTOMER\")) {\n          setShowNotYetVerified(true);\n        } else {\n          dispatch(\n            SET_AUTHENTICATED(data.token, data.employee, data.username, data.roles)\n          );\n          history.push(\"/\");\n        }\n      })\n      .catch(() => {\n        setIsDisabled(false);\n        setShowWrongCredentials(true);\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <form className={classes.form} onSubmit={submitCredentials}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            onChange={setUsername}\n            label=\"Логін\"\n            name=\"email\"\n            autoComplete=\"off\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Пароль\"\n            type=\"password\"\n            id=\"password\"\n            onChange={setPassword}\n            autoComplete=\"off\"\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled={isDisabled}\n          >\n            Вхід\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"http://plg-site.32server.in.ua/\" variant=\"body2\">\n                Забули пароль?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"http://plg-site.32server.in.ua/\" variant=\"body2\">\n                {\"Зареєструватись\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n      <InfoMessage\n        type=\"error\"\n        open={showNotYetVerified}\n        onClose={handleClose}\n        message=\"Аккаунт ще не пройшов перевірку.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showWrongCredentials}\n        onClose={handleClose}\n        message=\"Неправильні дані для входу.\"\n      />\n    </Container>\n  );\n}\n","import {makeStyles, Tooltip} from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStylesTooltip = makeStyles((theme) => ({\n  arrow: {\n    color: theme.palette.primary.main,\n  },\n  tooltip: {\n    fontSize: 12,\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nfunction ToolTip({title, value, placement = \"right-start\", children, ...props}) {\n  const classes = useStylesTooltip();\n\n  return (\n    <Tooltip title={title} placement={placement} arrow classes={classes} {...props}>\n      <div className=\"value\" style={{lineHeight: \"1.43\"}}>\n        {children}\n      </div>\n    </Tooltip>\n  );\n}\n\nexport default ToolTip;\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  InputAdornment,\n  Link,\n  OutlinedInput,\n  Typography,\n} from \"@material-ui/core\";\nimport {Field, Form, Formik} from \"formik\";\nimport InputField from \"./InputField\";\nimport ComboBox from \"./ComboBox\";\nimport * as yup from \"yup\";\nimport DatePicker from \"./DatePicker\";\nimport useUpdateOrder from \"./hooks/useUpdateOrder\";\nimport {useQueryClient} from \"react-query\";\nimport ToolTip from \"./ToolTip\";\nimport useDeleteOrder from \"./hooks/useDeleteOrder\";\nimport InfoMessage from \"./InfoMessage\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"4px\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4),\n    width: \"55%\",\n  },\n  link: {\n    cursor: \"pointer\",\n    color: theme.palette.primary.main,\n  },\n  h2: {\n    top: \"-.9rem\",\n    position: \"relative\",\n    marginTop: 0,\n    textAlign: \"center\",\n    fontWeight: \"400\",\n    gridColumnEnd: 4,\n    gridColumnStart: 2,\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  clearButton: {\n    backgroundColor: \"rgb(210,0,10)\",\n    color: \"white\",\n    marginRight: \"1rem\",\n\n    \"&:hover\": {\n      backgroundColor: \"rgb(190,0,10)\",\n    },\n  },\n  rowOne: {\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n  },\n  rowTwo: {\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr\",\n  },\n  billNo: {\n    gridColumn: 4,\n  },\n  auxiliaryRow: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n    margin: \"2rem auto 1rem auto\",\n\n    \"& .MuiOutlinedInput-input\": {\n      padding: \"8px\",\n    },\n\n    \"& .MuiButtonBase-root\": {\n      padding: \"2px !important\",\n    },\n\n    \"& .MuiOutlinedInput-adornedEnd\": {\n      paddingRight: \"3px\",\n    },\n\n    \"& #date-picker-inline-label\": {\n      transform: \"translate(14px, 10px) scale(1)\",\n    },\n  },\n}));\n\nconst validationSchema = yup.object({\n  order: yup.object({\n    entrepreneur: yup.object().required(),\n    customer: yup.object().required(),\n    date: yup.date().required(),\n    orderType: yup.object().required(),\n    orderKind: yup.object().required(),\n    billNo: yup.number().lessThan(2000000000).positive().min(0),\n    width: yup.number().lessThan(2000000000).positive().min(0).required(),\n    height: yup.number().lessThan(2000000000).positive().min(0).required(),\n    amount: yup.number().lessThan(2000000000).positive().min(0).required(),\n    price: yup.number().lessThan(2000000000).positive().min(0).required(),\n    fees: yup.number().lessThan(2000000000).positive().min(0).required(),\n    finalSum: yup.number().lessThan(2000000000).positive().min(0).required(),\n    comment: yup.string().trim().max(255).required(),\n    payLog: yup.string(),\n  }),\n});\n\nexport default function EditForm({order}) {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const deleteQuery = useDeleteOrder();\n  const updateOrderQuery = useUpdateOrder();\n  const [open, setOpen] = React.useState(false);\n  const [showDeleteError, setShowDeleteError] = React.useState(false);\n  const [showSaveError, setShowSaveError] = React.useState(false);\n  const [showConfirmation, setShowConfirmation] = React.useState(false);\n  const toggle = () => setOpen(!open);\n\n  const onDeleteOrder = (orderId) => {\n    setShowConfirmation(false);\n    deleteQuery.mutate({\n      orderId: orderId,\n      setStatus: setShowSaveError,\n      setShowModal: setOpen,\n    });\n  };\n\n  return (\n    <div>\n      <ToolTip title={order.employee.name}>\n        <Link className={classes.link} onClick={toggle}>\n          <b>{order.orderId}</b>\n        </Link>\n      </ToolTip>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={toggle}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <Formik\n              validateOnChange={true}\n              validateOnMount={false}\n              validateOnBlur={false}\n              initialValues={{order: order}}\n              onSubmit={(form) => {\n                updateOrderQuery.mutate({\n                  order: form.order,\n                  toggleModal: toggle,\n                  setStatus: setShowSaveError,\n                });\n              }}\n              validationSchema={validationSchema}\n            >\n              {({values, errors, validateField}) => (\n                <Form>\n                  <InfoMessage\n                    type=\"error\"\n                    open={showDeleteError}\n                    onClose={() => setShowDeleteError(false)}\n                    message=\"Помилка при видаленні замовлення.\"\n                  />\n                  <InfoMessage\n                    type=\"error\"\n                    open={showSaveError}\n                    onClose={() => setShowSaveError(false)}\n                    message=\"Помилка при збереженні замовлення.\"\n                  />\n                  <div className={classes.auxiliaryRow}>\n                    <Field\n                      component={DatePicker}\n                      label=\"Дата\"\n                      name=\"order.date\"\n                      error={errors?.order?.date}\n                      validator={validateField}\n                      disabled={updateOrderQuery.isLoading}\n                    />\n                    <Typography className={classes.h2} component=\"h2\" variant=\"h5\">\n                      Замовленя № <b>{order.orderId}</b>\n                    </Typography>\n                    <Field\n                      className={classes.billNo}\n                      name=\"order.billNo\"\n                      label=\"№ Рахунку\"\n                      error={errors?.order?.billNo}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading}\n                    />\n                  </div>\n\n                  <div className={`${classes.rowOne} row__one`}>\n                    <Field\n                      name=\"order.entrepreneur\"\n                      label=\"Підприємець\"\n                      error={errors?.order?.entrepreneur}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderQuery.isLoading}\n                      getName={(option) => option.fullName || \"\"}\n                      options={queryClient.getQueryData(\"entrepreneurs\")}\n                    />\n                    <Field\n                      name=\"order.customer\"\n                      label=\"Замовник\"\n                      error={errors?.order?.customer}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderQuery.isLoading}\n                      getName={(option) => option.customerName || \"\"}\n                      options={queryClient.getQueryData(\"customers\")}\n                    />\n                    <Field\n                      name=\"order.orderType\"\n                      label=\"Вид\"\n                      error={errors?.order?.orderType}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderQuery.isLoading}\n                      getName={(option) => option.typeName || \"\"}\n                      options={queryClient.getQueryData(\"orderTypes\")}\n                    />\n                    <Field\n                      name=\"order.orderKind\"\n                      label=\"Тип\"\n                      error={errors?.order?.orderKind}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderQuery.isLoading}\n                      getName={(option) => option.kindName || \"\"}\n                      options={values.orderType?.orderKinds || []}\n                    />\n                  </div>\n\n                  <div className={`${classes.rowTwo} row__two`}>\n                    <Field\n                      name=\"order.width\"\n                      label=\"Ширина\"\n                      error={errors?.order?.width}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading}\n                    />\n                    <Field\n                      name=\"order.height\"\n                      label=\"Висота\"\n                      error={errors?.order?.height}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading}\n                    />\n                    <Field\n                      name=\"order.amount\"\n                      label=\"Кількість\"\n                      error={errors?.order?.amount}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading}\n                    />\n                    <OutlinedInput\n                      id=\"metrics\"\n                      size=\"small\"\n                      variant=\"outlined\"\n                      value={\n                        (\n                          ((values.order.width * values.order.height) / 1000000) *\n                          values.order.amount\n                        ).toFixed(3) || 0.0\n                      }\n                      endAdornment={\n                        <InputAdornment position=\"end\">м²</InputAdornment>\n                      }\n                      disabled\n                    />\n                    <Field\n                      name=\"order.price\"\n                      label=\"Ціна\"\n                      error={errors?.order?.price}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading}\n                    />\n                    <Field\n                      name=\"order.fees\"\n                      label=\"Послуги\"\n                      error={errors?.order?.fees}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading}\n                    />\n                    <Field\n                      name=\"order.finalSum\"\n                      label=\"Сума\"\n                      error={errors?.order?.finalSum}\n                      validator={validateField}\n                      component={InputField}\n                      isSum={true}\n                      disabled={updateOrderQuery.isLoading}\n                    />\n                  </div>\n\n                  <div className=\"row__three\">\n                    <Field\n                      name=\"order.comment\"\n                      label=\"Опис замовлення\"\n                      error={errors?.order?.comment}\n                      validator={validateField}\n                      numeric={false}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading}\n                    />\n                  </div>\n\n                  <div className=\"row__three\">\n                    <Field\n                      name=\"order.payLog\"\n                      label=\"Історія оплат\"\n                      error={errors?.order?.payLog}\n                      validator={validateField}\n                      numeric={false}\n                      multiline={true}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading}\n                    />\n                  </div>\n\n                  <div className={classes.buttons}>\n                    <Button\n                      className={classes.clearButton}\n                      disabled={updateOrderQuery.isLoading}\n                      variant=\"contained\"\n                      type=\"button\"\n                      onClick={() => setShowConfirmation(true)}\n                    >\n                      Видалити\n                    </Button>\n                    <Button\n                      color=\"primary\"\n                      variant=\"contained\"\n                      className={classes.button}\n                      disabled={updateOrderQuery.isLoading}\n                      type=\"submit\"\n                    >\n                      Зберегти замовлення\n                    </Button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </Fade>\n      </Modal>\n      <Dialog\n        fullScreen={false}\n        open={showConfirmation}\n        onClose={() => setShowConfirmation(false)}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          Ви дійсно бажаєте видалити це замовлення?\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Повернути його зміст та оплати буде неможливо. Підтвердити?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            autoFocus\n            onClick={() => setShowConfirmation(false)}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Ні\n          </Button>\n          <Button\n            onClick={() => onDeleteOrder(order.orderId)}\n            variant=\"contained\"\n            className={classes.clearButton}\n            autoFocus\n          >\n            Так\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useDeleteOrder() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.delete(\"/api/orders/\" + params.orderId), {\n    onError: (_, params) => {\n      params.setStatus(true);\n    },\n    onSuccess: (_, params) => {\n      queryClient.invalidateQueries([\"orders\"]);\n      params.setShowModal(false);\n    },\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useUpdateOrder() {\n  let backupOrder = null;\n  const queryClient = useQueryClient();\n  return useMutation(\n    (updateObject) => Axios.put(\"/api/orders/\", updateObject.order),\n    {\n      onMutate: (mutationObject) => {\n        queryClient\n          .getQueryCache()\n          .findAll([\"orders\", 1])\n          .forEach((query) => {\n            queryClient.setQueryData(\n              query.queryKey,\n              query.state.data.map((cachedOrder) => {\n                if (cachedOrder.orderId === mutationObject.order.orderId) {\n                  backupOrder = cachedOrder;\n                  return mutationObject.order;\n                } else return cachedOrder;\n              })\n            );\n          });\n      },\n      onError: (_error, params) => {\n        params.setStatus(true);\n        queryClient\n          .getQueryCache()\n          .findAll([\"orders\", 1])\n          .forEach((query) => {\n            queryClient.setQueryData(\n              query.queryKey,\n              query.state.data.map((cachedOrder) => {\n                if (cachedOrder.orderId === backupOrder.orderId) return backupOrder;\n                else return cachedOrder;\n              })\n            );\n          });\n      },\n      onSuccess: (_, updateObject) => {\n        queryClient.invalidateQueries([\"orders\"]);\n        updateObject.toggleModal();\n      },\n    }\n  );\n}\n","import Axios from \"axios\";\n\nexport const fixOrders = (data, id = 0) => {\n  return data.map((row) => {\n    if (row.orderId === 0) {\n      row.id = id;\n      row.orderId = id;\n    } else {\n      row.id = row.orderId;\n    }\n    !row.date ? (row.date = new Date()) : (row.date = new Date(row.date));\n    return row;\n  });\n};\n\nexport const fetchRecentOrders = async () => {\n  const response = await Axios.get(\"/api/orders/\");\n  const data = response.data;\n\n  if (data) return fixOrders(data);\n  return [];\n};\n\nexport const sortOrders = async (selections) => {\n  const form = {\n    orderId: null,\n    customer: null,\n    entrepreneur: null,\n    employee: null,\n    status: null,\n    dateFrom: null,\n    dateTill: null,\n    payDateFrom: null,\n    payDateTill: null,\n    receiver: null,\n    orderKind: null,\n    orderType: null,\n    details: \"\",\n  };\n\n  const sendForm = {\n    ...form,\n    orderId: selections?.orderId,\n    customer: selections?.customer,\n    entrepreneur: selections?.entrepreneur,\n    employee: selections?.employee,\n    status: selections?.status,\n    dateFrom: selections?.dateFrom,\n    dateTill: selections?.dateTill,\n    payDateFrom: selections?.payDateFrom,\n    payDateTill: selections?.payDateTill,\n    receiver: selections?.receiver,\n    orderKind: selections?.orderKind,\n    orderType: selections?.orderType,\n    details: selections?.details,\n  };\n\n  const response = await Axios.post(\"/api/orders/filter/\", sendForm);\n  const data = response.data;\n\n  if (data) return fixOrders(data);\n  return [];\n};\n","import {Button} from \"@material-ui/core\";\nimport Popper from \"@material-ui/core/Popper\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport useSetStatus from \"./hooks/useSetStatus\";\n\nconst sources = [\n  \"\",\n  \"img/on-agreement.svg\",\n  \"img/in-progress.svg\",\n  \"img/ready.svg\",\n  \"img/completed.svg\",\n];\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    backgroundColor: \"#fff\",\n    boxShadow: \"0 0 14px 2px rgba(0, 0, 0, 0.3)\",\n    borderRadius: \"4px\",\n  },\n  acceptanceButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#fff\",\n    border: \"1px solid\",\n    borderColor: \"#df16a0\",\n    color: \"#df16a0\",\n\n    \"&:hover\": {\n      color: \"#fff\",\n      backgroundColor: \"#df16a0\",\n    },\n  },\n  inWorkButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#fff\",\n    border: \"1px solid\",\n    borderColor: theme.palette.primary.main,\n    color: theme.palette.primary.main,\n\n    \"&:hover\": {\n      color: \"#fff\",\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n  readyButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#fff\",\n    border: \"1px solid\",\n    borderColor: \"#28a745\",\n    color: \"#28a745\",\n\n    \"&:hover\": {\n      color: \"#fff\",\n      backgroundColor: \"#28a745\",\n    },\n  },\n  completedButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#28a745\",\n    border: \"1px solid\",\n    borderColor: \"#28a745\",\n    color: \"#fff\",\n\n    \"&:hover\": {\n      borderColor: \"#218838\",\n      backgroundColor: \"#218838\",\n    },\n  },\n  popper: {\n    zIndex: 1,\n    marginLeft: \"0.5rem\",\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: \"-0.9em\",\n      marginTop: \"0.45rem\",\n      height: \"3em\",\n      width: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 1em 1em 0\",\n        borderColor: `transparent ${theme.palette.background.paper} transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: \"-0.9em\",\n      marginTop: \"0.45rem\",\n      height: \"3em\",\n      width: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 0 1em 1em\",\n        borderColor: `transparent transparent transparent ${theme.palette.background.paper}`,\n      },\n    },\n  },\n  arrow: {\n    position: \"absolute\",\n    fontSize: 7,\n    width: \"3em\",\n    height: \"3em\",\n    \"&::before\": {\n      content: '\"\"',\n      margin: \"auto\",\n      display: \"block\",\n      width: 0,\n      height: 0,\n      borderStyle: \"solid\",\n    },\n  },\n}));\n\nfunction StatusPopper({orderId, status}) {\n  const classes = useStyles();\n  const statusQuery = useSetStatus();\n  const anchorRef = React.useRef(null);\n  const [arrow] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const id = open ? \"scroll-playground\" : null;\n\n  const toggle = () => setOpen((prevOpen) => !prevOpen);\n\n  return (\n    <>\n      <img\n        className={classes.img}\n        ref={anchorRef}\n        src={sources[status]}\n        width=\"19\"\n        height=\"19\"\n        alt=\"on-agreement\"\n        aria-describedby={id}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={toggle}\n      />\n\n      <Popper\n        id={id}\n        open={open}\n        anchorEl={anchorRef.current}\n        placement=\"right\"\n        disablePortal={true}\n        className={classes.popper}\n        modifiers={{\n          flip: {\n            enabled: true,\n          },\n          preventOverflow: {\n            enabled: true,\n            boundariesElement: \"scrollParent\",\n          },\n          arrow: {\n            enabled: true,\n            element: arrowRef,\n          },\n        }}\n      >\n        {arrow ? <span className={classes.arrow} ref={setArrowRef} /> : null}\n        <div className={classes.container}>\n          <Button\n            className={classes.acceptanceButton}\n            onClick={() =>\n              statusQuery.mutate({orderId: orderId, statusId: 1, toggle: toggle})\n            }\n          >\n            На погодженні\n          </Button>\n          <br />\n          <Button\n            className={classes.inWorkButton}\n            onClick={() =>\n              statusQuery.mutate({orderId: orderId, statusId: 2, toggle: toggle})\n            }\n          >\n            В роботі\n          </Button>\n          <br />\n          <Button\n            className={classes.readyButton}\n            onClick={() =>\n              statusQuery.mutate({orderId: orderId, statusId: 3, toggle: toggle})\n            }\n          >\n            Готове\n          </Button>\n          <br />\n          <Button\n            className={classes.completedButton}\n            o\n            onClick={() =>\n              statusQuery.mutate({orderId: orderId, statusId: 4, toggle: toggle})\n            }\n          >\n            Віддано\n          </Button>\n        </div>\n      </Popper>\n    </>\n  );\n}\n\nexport default StatusPopper;\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSetStatus() {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (params) =>\n      Axios.get(\"/api/orders/statuses/\" + params.orderId + \"/\" + params.statusId),\n    {\n      onSuccess: (_, params) => {\n        queryClient.invalidateQueries(\"orders\");\n        params.toggle();\n      },\n    }\n  );\n}\n","import {Button, Link, Paper, TextField} from \"@material-ui/core\";\nimport {XGrid} from \"@material-ui/x-grid\";\nimport React, {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport EditForm from \"./EditForm\";\nimport useOrders from \"./hooks/useOrders\";\nimport StatusPopper from \"./StatusPopper\";\nimport ToolTip from \"./ToolTip\";\nimport \"./Table.css\";\nimport useExportOrders from \"./hooks/useExportOrders\";\n\nfunction strcmp(a, b) {\n  return a.localeCompare(b);\n}\n\nconst formatDate = (date) =>\n  new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: false,\n  }).format(date);\n\nexport default function Table({tableID}) {\n  const sortState = useSelector((state) => state.sortSelections);\n  const authState = useSelector((state) => state.auth);\n  const ordersQuery = useOrders(tableID, sortState[sortState.active]);\n  const exportQuery = useExportOrders();\n  const [q, setQ] = useState(\"\");\n\n  const columns = [\n    {\n      field: \"orderId\",\n      type: \"number\",\n      headerName: \"№\",\n      flex: 0.8,\n      renderCell: (params) => {\n        if (\n          authState.roles.includes(\"ROLE_ADMIN\") ||\n          authState.roles.includes(\"ROLE_ORDERS_EDITOR\") ||\n          params.row.employee.employeeID === authState.loggedUser.employeeID\n        ) {\n          return <EditForm order={params.row} />;\n        } else {\n          return (\n            <ToolTip title={params.row.employee.name}>\n              <Link\n                style={{\n                  color: \"rgba(0, 60, 170, 0.95)\",\n                  textDecoration: \"none\",\n                }}\n              >\n                <b>{params.row.orderId}</b>\n              </Link>\n            </ToolTip>\n          );\n        }\n      },\n    },\n    {\n      field: \"billNo\",\n      type: \"number\",\n      headerName: \"Рах\",\n      flex: 0.6,\n    },\n    {\n      field: \"customer\",\n      headerName: \"Замовник\",\n      flex: 2.2,\n      sortComparator: (c1, c2) => strcmp(c1.customerName, c2.customerName),\n      valueFormatter: (param) => param.value.customerName,\n      renderCell: (params) =>\n        params.value.info ? (\n          <ToolTip title={params.value.info}>\n            <b>{params.value.customerName}</b>\n          </ToolTip>\n        ) : (\n          <b>{params.value.customerName}</b>\n        ),\n    },\n    {\n      field: \"date\",\n      type: \"dateTime\",\n      headerName: \"Дата\",\n      flex: 1.2,\n      valueFormatter: (param) => formatDate(param.value),\n    },\n    {\n      field: \"width\",\n      type: \"number\",\n      headerName: \"Ширина\",\n      valueFormatter: (row) => row.value,\n      flex: 1.09,\n    },\n    {\n      field: \"height\",\n      type: \"number\",\n      headerName: \"Висота\",\n      valueFormatter: (row) => row.value,\n      flex: 1,\n    },\n    {\n      field: \"amount\",\n      type: \"number\",\n      headerName: \"К-сть\",\n      valueFormatter: (row) => row.value,\n      flex: 0.85,\n    },\n    {\n      field: \"m2\",\n      type: \"number\",\n      headerName: \"М2\",\n      valueFormatter: (row) => Number.parseFloat(row.value).toFixed(3),\n      flex: 0.9,\n    },\n    {\n      field: \"price\",\n      type: \"number\",\n      headerName: \"Ціна\",\n      valueFormatter: (row) => row.value,\n      flex: 0.8,\n    },\n    {\n      field: \"fees\",\n      type: \"number\",\n      headerName: \"Послуги\",\n      valueFormatter: (row) => row.value,\n      flex: 1,\n    },\n    {\n      field: \"finalSum\",\n      type: \"number\",\n      headerName: \"Сума\",\n      flex: 0.9,\n      renderCell: (params) => <b> {params.value} </b>,\n    },\n    {\n      field: \"paid\",\n      headerName: \"Оплата\",\n      sortable: false,\n      flex: 1.1,\n      cellClassName: \"centered\",\n      renderCell: (params) => {\n        if (params.row.paySum === params.row.finalSum) {\n          return (\n            <ToolTip title={formatDate(new Date(params.row.payDate))} arrow>\n              <img src=\"img/completed.svg\" width=\"19\" height=\"19\" alt=\"paid\" />\n            </ToolTip>\n          );\n        } else if (params.row.paySum > 0)\n          return (\n            <ToolTip\n              title={\n                params.row.paySum +\n                \" грн, \" +\n                formatDate(new Date(params.row.payDate))\n              }\n              arrow\n            >\n              <img\n                src=\"img/partly_paid.svg\"\n                width=\"19\"\n                height=\"19\"\n                alt=\"partly__paid\"\n              />\n            </ToolTip>\n          );\n      },\n    },\n    {\n      field: \"status\",\n      headerName: \"Статус\",\n      flex: 1.1,\n      cellClassName: \"centered\",\n      sortComparator: (c1, c2) => c1.id - c2.id,\n      renderCell: (params) => (\n        <StatusPopper orderId={params.row.orderId} status={params.row.status.id} />\n      ),\n    },\n    {\n      field: \"orderType\",\n      type: \"string\",\n      headerName: \"Вид\",\n      flex: 1.8,\n      sortComparator: (c1, c2) => strcmp(c1.typeName, c2.typeName),\n      valueFormatter: (param) => param.value.typeName,\n    },\n    {\n      field: \"orderKind\",\n      headerName: \"Тип\",\n      flex: 1.8,\n      sortComparator: (c1, c2) => strcmp(c1.kindName, c2.kindName),\n      valueFormatter: (param) => param.value.kindName,\n    },\n    {\n      field: \"comment\",\n      headerName: \"Опис замовлення\",\n      flex: 6,\n      sortComparator: (c1, c2) => strcmp(c1, c2),\n      renderCell: (params) => (\n        <ToolTip title={params.value} placement=\"left-start\">\n          {params.value}\n        </ToolTip>\n      ),\n    },\n  ];\n\n  const filter = (rows) => {\n    return rows.filter(\n      (row) =>\n        row.orderId?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.billNo?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.customer.customerName.toString().toLowerCase().indexOf(q.toLowerCase()) >\n          -1 ||\n        formatDate(row.date)?.toString().toLowerCase().indexOf(q.toLowerCase()) >\n          -1 ||\n        row.fees?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.finalSum?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.amount?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.price?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.height?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.width?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.m2?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.orderKind.kindName?.toString().toLowerCase().indexOf(q.toLowerCase()) >\n          -1 ||\n        row.orderType.typeName?.toString().toLowerCase().indexOf(q.toLowerCase()) >\n          -1 ||\n        row.comment?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1\n    );\n  };\n\n  const calculateDebt = (customer) => {\n    const ordersDiff = ordersQuery.data.reduce(\n      (a, b) => (a += b.finalSum - b.paySum),\n      0\n    );\n    return ordersDiff - customer.money;\n  };\n\n  return (\n    <>\n      <TextField\n        variant=\"outlined\"\n        size=\"small\"\n        placeholder=\"Швидкий пошук\"\n        onChange={(e) => setQ(e.target.value)}\n        InputProps={{\n          endAdornment: authState.roles.includes(\"ROLE_ORDERS_EXPORTER\") && (\n            <Button\n              className=\"export-btn\"\n              variant=\"outlined\"\n              onClick={() => exportQuery.mutate(filter(ordersQuery.data))}\n            >\n              Експорт\n            </Button>\n          ),\n        }}\n      />\n\n      <Paper elevation={4} className=\"x-grid\">\n        {sortState[sortState.active].selectedCustomer && (\n          <div className=\"action__bar__stat\">\n            <label>\n              Сума боргу :{\" \"}\n              <b>{calculateDebt(sortState[sortState.active].selectedCustomer)}</b>{\" \"}\n              грн\n            </label>\n          </div>\n        )}\n        <div className=\"frame\">\n          <div className=\"grid-holder\">\n            <XGrid\n              rows={filter(ordersQuery.data)}\n              columns={columns}\n              sortModel={[{field: \"orderId\", sort: \"desc\"}]}\n              loading={ordersQuery.isLoading}\n              rowHeight={35}\n              headerHeight={35}\n              pagination={true}\n              disableSelectionOnClick={true}\n            />\n          </div>\n        </div>\n      </Paper>\n    </>\n  );\n}\n","import {useQuery} from \"react-query\";\nimport * as OrderService from \".././services/orders-service\";\n\nexport default function useOrders(tableID, sortState) {\n  return useQuery(\n    [\"orders\", tableID, sortState],\n    () => OrderService.sortOrders(sortState),\n    {\n      initialData: [],\n      initialStale: true,\n      keepPreviousData: false,\n    }\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation} from \"react-query\";\n\nexport default function useExportOrders() {\n  return useMutation(\n    (orders) =>\n      Axios.post(\n        \"api/orders/export/\",\n        {orders: orders},\n        {\n          responseType: \"arraybuffer\",\n        }\n      ),\n    {\n      onError: (_, params) => {\n        params.setStatus({success: false, error: true});\n      },\n      onSuccess: (val, _) => {\n        const blob = new Blob([val.data], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        });\n\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n          window.navigator.msSaveOrOpenBlob(blob);\n          return;\n        }\n        const data = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = data;\n        link.download = \"Список замовлень.xlsx\";\n        link.dispatchEvent(\n          new MouseEvent(\"click\", {bubbles: true, cancelable: true, view: window})\n        );\n      },\n    }\n  );\n}\n","import {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport ActionBar from \"./ActionBar\";\nimport \"./App.css\";\nimport ClientsTable from \"./ClientsTable\";\nimport CustomerForm from \"./CustomerForm\";\nimport Header from \"./Header\";\nimport useCELinks from \"./hooks/useCELinks\";\nimport useCPLinks from \"./hooks/useCPLinks\";\nimport useCustomers from \"./hooks/useCustomers\";\nimport useEntrepreneurs from \"./hooks/useEntrepreneurs\";\nimport useOrderTypes from \"./hooks/useOrderTypes\";\nimport useStatuses from \"./hooks/useStatuses\";\nimport Login from \"./Login\";\nimport Table from \"./Table\";\n\nfunction App() {\n  useCustomers();\n  useEntrepreneurs();\n  useOrderTypes();\n  useStatuses();\n  useCELinks();\n  useCPLinks();\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/\">\n            <div className=\"main\">\n              <div className=\"main__header\">\n                <Header />\n                <ActionBar />\n              </div>\n              <div className=\"main__table\">\n                <Table tableID={1} />\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/clients\">\n            <div className=\"clients\">\n              <div className=\"clients__header\">\n                <Header />\n              </div>\n              <div className=\"clients__table\">\n                <ClientsTable />\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/sort\">\n            <Header />\n            <Table tableID={2} />\n          </Route>\n        </Switch>\n      </Router>\n      <CustomerForm />\n    </div>\n  );\n}\n\nexport default App;\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useCustomers() {\n  return useQuery(\"customers\", CustomerService.fetchCustomers);\n}\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useEntrepreneurs() {\n  return useQuery(\"entrepreneurs\", CustomerService.fetchEntrepreneurs, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useOrderTypes() {\n  return useQuery(\"orderTypes\", CustomerService.fetchOrderTypes, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useStatuses() {\n  return useQuery(\"statuses\", CustomerService.fetchStatuses, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useCELinks() {\n  return useQuery(\"ce-links\", CustomerService.fetchCELinks, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useCPLinks() {\n  return useQuery(\"cp-links\", CustomerService.fetchCPLinks, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import {Redirect, Route} from \"react-router-dom\";\nimport {SET_AUTHENTICATED} from \"./context/actions\";\nimport store from \"./context/store\";\nimport {useSelector} from \"react-redux\";\n\nexport const ProtectedRoute = ({component: Component, ...props}) => {\n  const authState = useSelector((store) => store.auth);\n  const authToken = localStorage.getItem(\"token\");\n  const username = localStorage.getItem(\"username\");\n  const roles = localStorage.getItem(\"roles\");\n  const loggedUser = JSON.parse(localStorage.getItem(\"loggedUser\"));\n\n  return (\n    <Route\n      {...props}\n      render={(props) => {\n        if (authState.isAuthenticated) {\n          return <Component {...props} />;\n        } else if (authToken) {\n          store.dispatch(SET_AUTHENTICATED(authToken, loggedUser, username, roles));\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect to={{pathname: \"/login\", state: {from: props.location}}} />\n          );\n        }\n      }}\n    />\n  );\n};\n","import { Box, Paper, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport \"./NotFound.css\";\n\nfunction NotFound() {\n  return (\n    <Paper elevation={3} className=\"blue-holder\">\n      <Paper elevation={3} className=\"info\">\n        <div className=\"blank-page\">\n          <Typography variant=\"h4\" component=\"h3\">\n            Сторінка не знайдена\n          </Typography>{\" \"}\n          <Typography variant=\"h2\" component=\"h3\">\n            404\n          </Typography>\n        </div>\n        <Box mt={8}>\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {\"Copyright © \"}\n            <Link color=\"inherit\" href=\"https://psdruk.com.ua/\">\n              psdruk.com.ua\n            </Link>{\" \"}\n            {new Date().getFullYear()}\n            {\".\"}\n          </Typography>\n        </Box>\n      </Paper>\n    </Paper>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./context/store\";\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport {uk} from \"date-fns/locale\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport App from \"./App\";\nimport {ukUA} from \"@material-ui/core/locale\";\nimport Login from \"./Login\";\nimport {ProtectedRoute} from \"./ProtectedRoute\";\nimport NotFound from \"./NotFound\";\nimport {ReactQueryDevtools} from \"react-query/devtools\";\nimport {QueryCache, QueryClient, QueryClientProvider} from \"react-query\";\nimport \"./index.css\";\n\nconst oldTheme = createMuiTheme(\n  {\n    palette: {\n      primary: {\n        light: \"#fff\",\n        main: \"rgba(0, 60, 170, 0.95)\",\n        dark: \"rgba(0, 40, 170, 0.95)\",\n      },\n      secondary: {\n        main: \"#f44336\",\n      },\n    },\n    typography: {\n      useNextVariants: true,\n      fontSize: 11,\n      htmlFontSize: 15,\n    },\n  },\n  ukUA\n);\n\nconst {breakpoints} = oldTheme;\n\nconst theme = {\n  ...oldTheme,\n  overrides: {\n    MuiInputLabel: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiInputAdornment: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiInputBase: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiTypography: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n      subtitle1: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n      body1: {\n        fontSize: 12,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 12,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 10,\n        },\n      },\n      button: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiButton: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiTab: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiSvgIcon: {\n      root: {\n        [breakpoints.down(1300)]: {\n          fontSize: 15,\n        },\n      },\n    },\n  },\n};\n\nconst queryCache = new QueryCache();\nconst queryClient = new QueryClient({queryCache});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <QueryClientProvider client={queryClient}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={uk}>\n        <Provider store={store}>\n          <Router>\n            <Switch>\n              <Route path=\"/login\" component={Login} />\n              <ProtectedRoute path=\"/\" component={App} />\n              <Route path=\"*\" component={NotFound} />\n            </Switch>\n          </Router>\n        </Provider>\n      </MuiPickersUtilsProvider>\n      <ReactQueryDevtools />\n    </QueryClientProvider>\n  </MuiThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}