{"version":3,"sources":["context/order-reducer.js","context/actionTypes.js","context/actions.js","services/auth-service.js","context/auth-reducer.js","context/customer-reducer.js","context/store.js","Header.js","ToolTip.js","StatusPopper.js","services/orders-service.js","InputField.js","ComboBox.js","DatePicker.js","EditForm.js","hooks/useUpdateOrder.js","Table.js","hooks/useOrders.js","models/OrderObject.js","SwitchControl.js","AddOrderForm.js","hooks/useSaveOrder.js","services/customer-service.js","models/SortObject.js","SortForm.js","hooks/useSort.js","ActionBar.js","hooks/useCustomers.js","hooks/useEntrepreneurs.js","hooks/useOrderTypes.js","hooks/useStatuses.js","Login.js","App.js","ProtectedRoute.js","NotFound.js","index.js"],"names":["initialState","mainPageOrderList","sortPageOrderList","isLoading","orderReducer","state","action","type","ActionTypes","payload","ADD_ORDER","LOAD_ORDERS","SET_AUTHENTICATED","SET_UNAUTHENTICATED","SELECT_CUSTOMER","UNSELECT_CUSTOMER","token","employee","authorize","credentials","a","Axios","post","response","data","unauthorize","store","dispatch","isAuthenticated","loggedUser","authReducer","localStorage","setItem","JSON","stringify","defaults","headers","common","interceptors","use","error","status","AuthService","console","removeItem","selectedCustomer","sortReducer","require","createStore","combineReducers","orders","default","auth","sort","useStyles","makeStyles","root","flexGrow","logoutButton","padding","logoutHolder","display","justifyContent","tabs","margin","Header","classes","history","useHistory","Paper","elevation","className","AppBar","position","Toolbar","Link","color","href","width","height","src","alt","Button","onClick","push","useStylesTooltip","theme","arrow","palette","primary","main","tooltip","fontSize","backgroundColor","ToolTip","title","children","value","props","Tooltip","placement","style","lineHeight","sources","container","spacing","textAlign","boxShadow","borderRadius","acceptanceButton","border","borderColor","inWorkButton","readyButton","completedButton","popper","zIndex","marginLeft","left","marginTop","borderWidth","background","paper","right","marginRight","content","borderStyle","StatusPopper","orderId","anchorRef","React","useRef","useState","arrowRef","setArrowRef","open","setOpen","id","toggle","prevOpen","changeStatus","useMutation","statusId","get","onSuccess","queryCache","invalidateQueries","img","ref","aria-describedby","variant","Popper","anchorEl","current","disablePortal","modifiers","flip","enabled","preventOverflow","boundariesElement","element","fixOrders","map","row","date","Date","fetchRecentOrders","InputField","label","field","readonly","validator","numeric","onChange","name","TextField","size","autoComplete","InputProps","readOnly","e","target","match","length","NoPaddingAutocomplete","withStyles","inputRoot","paddingRight","input","Autocomplete","ComboBox","getName","sortKey","textFieldProps","setFieldValue","form","fieldToTextField","useDispatch","sortOrders","selections","setQueryData","OrderService","autoHighlight","getOptionLabel","_","sortBy","customer","renderInput","datepicker","DatePicker","autoOk","helperText","inputVariant","format","KeyboardButtonProps","modal","alignItems","shadows","link","cursor","h2","top","fontWeight","gridColumnEnd","gridColumnStart","buttons","clearButton","billNo","gridColumn","auxiliaryRow","gridColumnGap","gridTemplateRows","gridTemplateColumns","transform","validationSchema","yup","entrepreneur","required","orderType","orderKind","lessThan","positive","min","amount","price","fees","finalSum","comment","trim","max","EditForm","order","backupOrder","updateObject","put","onMutate","mutationObject","getQueryData","cachedOrder","onError","_error","toggleModal","useUpdateOrder","updateOrder","updateOrderInfo","Modal","aria-labelledby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","validateOnChange","validateOnMount","validateOnBlur","initialValues","onSubmit","values","errors","validateField","component","disabled","Typography","option","fullName","loading","getQuery","options","customerName","orderKinds","OutlinedInput","toFixed","endAdornment","InputAdornment","payLog","multiline","button","percentToPixels","percentage","window","innerWidth","columns","headerName","renderCell","params","sortComparator","c1","c2","b","valueFormatter","param","info","sortable","cellClassName","paySum","payDate","toLocaleDateString","Table","ordersQuery","tableID","useQuery","initialData","initialStale","staleTime","refetchOnWindowFocus","refetchOnMount","useOrders","sortState","useSelector","ordersDiff","reduce","money","calculateDebt","rows","sortModel","rowHeight","headerHeight","pagination","disableSelectionOnClick","EmptyOrder","userID","m2","paid","SwitchControl","isChecked","useField","FormControlLabel","control","Switch","checked","flexWrap","clear","minWidth","justifySelf","AddOrderForm","newOrder","passedParams","resetForm","saveNewOrder","saveNewOrderInfo","onAcceptance","clearFields","isUrgently","Math","ceil","onFormSubmit","handleReset","clearAndUnsort","fetchCustomers","res","fetchEntrepreneurs","fetchOrderTypes","fetchStatuses","EmptySort","selectedStatus","selectedDateFrom","selectedDateTill","selectedKind","selectedType","selectedEmployee","selectedDetails","nullable","SortForm","authState","sortOrdersInfo","showUserOrders","ActionBar","currentTab","setTab","CustomerService","Collapse","Copyright","align","getFullYear","flexDirection","avatar","secondary","submit","Login","username","password","setForm","Container","maxWidth","CssBaseline","Avatar","preventDefault","then","accessToken","fullWidth","autoFocus","Grid","item","xs","Box","mt","App","path","exact","ProtectedRoute","Component","authToken","getItem","parse","render","to","pathname","from","location","NotFound","createMuiTheme","light","dark","typography","useNextVariants","htmlFontSize","ukUA","ReactDOM","utils","DateFnsUtils","locale","uk","document","getElementById"],"mappings":"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","file":"static/js/main.38a7eeea.chunk.js","sourcesContent":["import * as ActionTypes from \"./actionTypes\";\n\nconst initialState = {\n  mainPageOrderList: [],\n  sortPageOrderList: [],\n  isLoading: true,\n};\n\nfunction orderReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.ADD_ORDER:\n      return {\n        ...state,\n        mainPageOrderList: [...state.mainPageOrderList, action.payload],\n        sortPageOrderList: [...state.sortPageOrderList, action.payload],\n      };\n    case ActionTypes.LOAD_ORDERS:\n      if (!action.payload) return state;\n      return {\n        ...state,\n        mainPageOrderList: action.payload,\n        sortPageOrderList: action.payload,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default orderReducer;\n","export const ADD_ORDER = \"ADD_ORDER\";\nexport const LOAD_ORDERS = \"LOAD_ORDERS\";\n\nexport const SET_AUTHENTICATED = \"SET_AUTHENTICATED\";\nexport const SET_UNAUTHENTICATED = \"SET_UNAUTHENTICATED\";\n\nexport const SELECT_CUSTOMER = \"SELECT_CUSTOMER\";\nexport const UNSELECT_CUSTOMER = \"UNSELECT_CUSTOMER\";\n","import * as ActionTypes from \"./actionTypes\";\n\nexport const NEW_ORDER = (newOrder) => ({\n  type: ActionTypes.ADD_ORDER,\n  payload: newOrder,\n});\n\nexport const LOAD_ORDERS = (orders) => ({\n  type: ActionTypes.LOAD_ORDERS,\n  payload: orders,\n});\n\nexport const SET_AUTHENTICATED = (token, employee) => ({\n  type: ActionTypes.SET_AUTHENTICATED,\n  payload: {\n    token,\n    employee,\n  },\n});\n\nexport const SET_UNAUTHENTICATED = () => ({\n  type: ActionTypes.SET_UNAUTHENTICATED,\n});\n\nexport const SELECT_CUSTOMER = (customer) => ({\n  type: ActionTypes.SELECT_CUSTOMER,\n  payload: customer,\n});\n\nexport const DESELECT_CUSTOMER = () => ({\n  type: ActionTypes.UNSELECT_CUSTOMER,\n});\n","import Axios from \"axios\";\nimport { SET_UNAUTHENTICATED } from \"../context/actions\";\nimport store from \"../context/store\";\n\nexport const authorize = async (credentials) => {\n  const response = await Axios.post(\"/api/auth/signin\", credentials);\n  const data = response.data;\n  return data;\n};\n\nexport const unauthorize = () => {\n  store.dispatch(SET_UNAUTHENTICATED());\n};\n","import Axios from \"axios\";\nimport * as AuthService from \"../services/auth-service\";\nimport * as ActionTypes from \"./actionTypes\";\n\nconst initialState = {\n  isAuthenticated: false,\n  loggedUser: null,\n};\n\nfunction authReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.SET_AUTHENTICATED:\n      localStorage.setItem(\"token\", action.payload.token);\n      localStorage.setItem(\"loggedUser\", JSON.stringify(action.payload.employee));\n\n      Axios.defaults.headers.common[\n        \"Authorization\"\n      ] = `Bearer ${action.payload.token}`;\n\n      Axios.interceptors.response.use(\n        (response) => response,\n        (error) => {\n          error.response?.status === 401\n            ? AuthService.unauthorize()\n            : console.error(error);\n          throw error;\n        }\n      );\n      return { isAuthenticated: true, loggedUser: action.payload.employee };\n    case ActionTypes.SET_UNAUTHENTICATED:\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"loggedUser\");\n      return { isAuthenticated: false, loggedUser: null };\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;\n","import * as ActionTypes from \"./actionTypes\";\n\nconst initialState = {\n  selectedCustomer: null,\n};\n\nfunction sortReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.SELECT_CUSTOMER:\n      return {\n        selectedCustomer: action.payload,\n      };\n    case ActionTypes.UNSELECT_CUSTOMER:\n      return {\n        selectedCustomer: null,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default sortReducer;\n","import authReducer from \"./auth-reducer\";\nimport sortReducer from \"./customer-reducer\";\n\nconst { createStore, combineReducers } = require(\"redux\");\nconst { default: orderReducer } = require(\"./order-reducer\");\n\nconst store = createStore(\n  combineReducers({\n    orders: orderReducer,\n    auth: authReducer,\n    sort: sortReducer,\n  })\n);\n\nexport default store;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { useHistory } from \"react-router-dom\";\nimport * as AuthService from \"./services/auth-service\";\nimport { Link } from \"@material-ui/core\";\nimport \"./Header.css\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  logoutButton: {\n    padding: 0,\n  },\n  logoutHolder: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  tabs: {\n    margin: \"0 auto\",\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n  const history = useHistory();\n  // const [value, setValue] = React.useState(0);\n\n  const logout = () => {\n    AuthService.unauthorize();\n    history.push(\"/login\");\n  };\n\n  // const changeView = (_e, newValue) => {\n  //   switch (newValue) {\n  //     case 0:\n  //       setValue(newValue);\n  //       history.push(\"/\");\n  //       break;\n  //     case 1:\n  //       setValue(newValue);\n  //       history.push(\"/sort\");\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // };\n\n  return (\n    <Paper elevation={2}>\n      <div className=\"header__container\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Link color=\"inherit\" href=\"https://psdruk.com.ua/\">\n              <img width=\"110\" height=\"50\" src=\"/img/logo.svg\" alt=\"logo\" />\n            </Link>\n\n            {/* <Tabs\n              className={classes.tabs}\n              value={value}\n              onChange={changeView}\n              TabIndicatorProps={{ style: { background: \"white\" } }}\n              indicatorColor=\"secondary\"\n              aria-label=\"scrollable auto tabs example\"\n            >\n              <Tab label=\"Головна\" />\n              <Tab label=\"Сортування\" />\n              <Tab label=\"Клієнти\" />\n              <Tab label=\"Статус\" />\n            </Tabs> */}\n\n            <div className={classes.logoutHolder}>\n              <Button\n                color=\"inherit\"\n                onClick={logout}\n                className={classes.logoutButton}\n              >\n                Вийти\n              </Button>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n    </Paper>\n  );\n}\n","import { makeStyles, Tooltip } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStylesTooltip = makeStyles((theme) => ({\n  arrow: {\n    color: theme.palette.primary.main,\n  },\n  tooltip: {\n    fontSize: 12,\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nfunction ToolTip({ title, value, children, ...props }) {\n  const classes = useStylesTooltip();\n\n  return (\n    <Tooltip\n      title={title}\n      placement=\"right-start\"\n      arrow\n      classes={classes}\n      {...props}\n    >\n      <div className=\"value\" style={{ lineHeight: \"1.43\" }}>\n        {children}\n      </div>\n    </Tooltip>\n  );\n}\n\nexport default ToolTip;\n","import { Button } from \"@material-ui/core\";\nimport Popper from \"@material-ui/core/Popper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Axios from \"axios\";\nimport React from \"react\";\nimport { queryCache, useMutation } from \"react-query\";\n\nconst sources = [\n  \"\",\n  \"img/on-agreement.svg\",\n  \"img/in-progress.svg\",\n  \"img/ready.svg\",\n  \"img/completed.svg\",\n];\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    backgroundColor: \"#fff\",\n    boxShadow: \"0 0 14px 2px rgba(0, 0, 0, 0.3)\",\n    borderRadius: \"4px\",\n  },\n  acceptanceButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#fff\",\n    border: \"1px solid\",\n    borderColor: \"#df16a0\",\n    color: \"#df16a0\",\n\n    \"&:hover\": {\n      color: \"#fff\",\n      backgroundColor: \"#df16a0\",\n    },\n  },\n  inWorkButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#fff\",\n    border: \"1px solid\",\n    borderColor: theme.palette.primary.main,\n    color: theme.palette.primary.main,\n\n    \"&:hover\": {\n      color: \"#fff\",\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n  readyButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#fff\",\n    border: \"1px solid\",\n    borderColor: \"#28a745\",\n    color: \"#28a745\",\n\n    \"&:hover\": {\n      color: \"#fff\",\n      backgroundColor: \"#28a745\",\n    },\n  },\n  completedButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#28a745\",\n    border: \"1px solid\",\n    borderColor: \"#28a745\",\n    color: \"#fff\",\n\n    \"&:hover\": {\n      borderColor: \"#218838\",\n      backgroundColor: \"#218838\",\n    },\n  },\n  popper: {\n    zIndex: 1,\n    marginLeft: \"0.5rem\",\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: \"-0.9em\",\n      marginTop: \"0.45rem\",\n      height: \"3em\",\n      width: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 1em 1em 0\",\n        borderColor: `transparent ${theme.palette.background.paper} transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: \"-0.9em\",\n      marginTop: \"0.45rem\",\n      height: \"3em\",\n      width: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 0 1em 1em\",\n        borderColor: `transparent transparent transparent ${theme.palette.background.paper}`,\n      },\n    },\n  },\n  arrow: {\n    position: \"absolute\",\n    fontSize: 7,\n    width: \"3em\",\n    height: \"3em\",\n    \"&::before\": {\n      content: '\"\"',\n      margin: \"auto\",\n      display: \"block\",\n      width: 0,\n      height: 0,\n      borderStyle: \"solid\",\n    },\n  },\n}));\n\nfunction StatusPopper({ orderId, status }) {\n  const classes = useStyles();\n  const anchorRef = React.useRef(null);\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const [arrow] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n  const id = open ? \"scroll-playground\" : null;\n\n  const toggle = () => setOpen((prevOpen) => !prevOpen);\n\n  const changeStatus = useMutation(\n    (statusId) => Axios.get(\"/api/orders/status/\" + statusId + \"/\" + orderId),\n    {\n      onSuccess: () => {\n        queryCache.invalidateQueries(\"orders\");\n        toggle();\n      },\n    }\n  )[0];\n\n  return (\n    <>\n      <img\n        className={classes.img}\n        ref={anchorRef}\n        src={sources[status]}\n        width=\"19\"\n        alt=\"on-agreement\"\n        aria-describedby={id}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={toggle}\n      />\n\n      <Popper\n        id={id}\n        open={open}\n        anchorEl={anchorRef.current}\n        placement=\"right\"\n        disablePortal={true}\n        className={classes.popper}\n        modifiers={{\n          flip: {\n            enabled: true,\n          },\n          preventOverflow: {\n            enabled: true,\n            boundariesElement: \"scrollParent\",\n          },\n          arrow: {\n            enabled: true,\n            element: arrowRef,\n          },\n        }}\n      >\n        {arrow ? <span className={classes.arrow} ref={setArrowRef} /> : null}\n        <div className={classes.container}>\n          <Button\n            className={classes.acceptanceButton}\n            onClick={() => changeStatus(1)}\n          >\n            На погодженні\n          </Button>\n          <br />\n          <Button className={classes.inWorkButton} onClick={() => changeStatus(2)}>\n            В роботі\n          </Button>\n          <br />\n          <Button className={classes.readyButton} onClick={() => changeStatus(3)}>\n            Готове\n          </Button>\n          <br />\n          <Button\n            className={classes.completedButton}\n            onClick={() => changeStatus(4)}\n          >\n            Віддано\n          </Button>\n        </div>\n      </Popper>\n    </>\n  );\n}\n\nexport default StatusPopper;\n","import Axios from \"axios\";\n\nexport const fixOrders = (data) => {\n  return data.map((row) => {\n    row.id = row.orderId;\n    row.date = new Date(row.date);\n    return row;\n  });\n};\n\nexport const fetchRecentOrders = async () => {\n  const response = await Axios.get(\"/api/orders/\");\n  const data = response.data;\n\n  if (data) return fixOrders(data);\n  return [];\n};\n\nexport const sortOrders = async (selections) => {\n  const form = {\n    selectedCustomer: null,\n    selectedStatus: null,\n    selectedDateFrom: null,\n    selectedDateTill: null,\n    selectedKind: null,\n    selectedType: null,\n    selectedDetails: \"\",\n  };\n\n  const sendForm = {\n    ...form,\n    selectedCustomer: selections?.selectedCustomer,\n    selectedStatus: selections?.selectedStatus,\n    selectedDateFrom: selections?.selectedDateFrom,\n    selectedDateTill: selections?.selectedDateTill,\n    selectedKind: selections?.selectedKind,\n    selectedType: selections?.selectedType,\n    selectedDetails: selections?.selectedDetails,\n  };\n\n  const response = await Axios.post(\"/api/sort/\", sendForm);\n  const data = response.data;\n\n  if (data) return fixOrders(data);\n  return [];\n};\n","import { TextField } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst InputField = ({\n  label,\n  field,\n  error,\n  readonly = false,\n  validator,\n  numeric = true,\n  ...props\n}) => {\n  const { onChange, name } = field;\n  return (\n    <TextField\n      {...props}\n      {...field}\n      error={!!error}\n      id=\"metrics\"\n      size=\"small\"\n      variant=\"outlined\"\n      autoComplete=\"off\"\n      label={label}\n      InputProps={{ readOnly: readonly }}\n      onChange={(e) => {\n        if (!numeric) onChange(e);\n        if (e.target.value.match(/^\\d*\\.?\\d*$/) || e.target.value.length === 0)\n          onChange(e);\n\n        validator(name);\n      }}\n    />\n  );\n};\n\nexport default InputField;\n","import { TextField, withStyles } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Axios from \"axios\";\nimport { fieldToTextField } from \"formik-material-ui\";\nimport React from \"react\";\nimport * as OrderService from \"./services/orders-service\";\nimport { queryCache, useMutation } from \"react-query\";\nimport { SELECT_CUSTOMER } from \"./context/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst NoPaddingAutocomplete = withStyles({\n  inputRoot: {\n    '&&[class*=\"MuiOutlinedInput-root\"] $input': {\n      padding: 2,\n    },\n    '&&[class*=\"MuiOutlinedInput-root\"]': {\n      paddingRight: \"40px!important\",\n    },\n  },\n  input: {},\n})(Autocomplete);\n\nfunction ComboBox({\n  label,\n  getName,\n  sortKey,\n  error,\n  validator,\n  textFieldProps,\n  ...props\n}) {\n  const {\n    form: { setFieldValue },\n  } = props;\n  const { ...field } = fieldToTextField(props);\n  const { name } = field;\n  const dispatch = useDispatch();\n\n  const sortOrders = useMutation(\n    (selections) => Axios.post(\"/api/sort/\", selections),\n    {\n      onSuccess: (data) => {\n        queryCache.setQueryData([\"orders\", 1], OrderService.fixOrders(data.data));\n      },\n    }\n  )[0];\n\n  return (\n    <NoPaddingAutocomplete\n      {...props}\n      id=\"combo-box\"\n      size=\"small\"\n      error={\"\"}\n      value={field.value}\n      autoHighlight={true}\n      getOptionLabel={getName}\n      onChange={(_, value) => {\n        if (sortKey) {\n          const sortBy = {};\n          sortBy[sortKey] = value;\n          sortOrders(sortBy);\n        }\n\n        if (label === \"Замовник\") {\n          dispatch(SELECT_CUSTOMER(value));\n        }\n\n        setFieldValue(name, value);\n        validator(name);\n      }}\n      renderInput={(props) => (\n        <TextField {...props} error={!!error} label={label} variant=\"outlined\" />\n      )}\n    />\n  );\n}\n\nexport default ComboBox;\n","import React from \"react\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { fieldToTextField } from \"formik-material-ui\";\n\nconst useStyles = makeStyles(() => ({\n  datepicker: {\n    margin: 0,\n  },\n}));\n\nfunction DatePicker({ label, ...props }) {\n  const classes = useStyles();\n  const {\n    form: { setFieldValue },\n  } = props;\n  const { ...field } = fieldToTextField(props);\n  const { name } = field;\n\n  return (\n    <KeyboardDatePicker\n      {...props}\n      {...field}\n      autoOk={true}\n      autoComplete=\"off\"\n      helperText={\"\"}\n      className={classes.datepicker}\n      inputVariant=\"outlined\"\n      variant=\"inline\"\n      format=\"dd/MM/yyyy\"\n      margin=\"normal\"\n      id=\"date-picker-inline\"\n      label={label}\n      onChange={(value) => setFieldValue(name, value)}\n      KeyboardButtonProps={{\n        \"aria-label\": \"change date\",\n      }}\n    />\n  );\n}\n\nexport default DatePicker;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport {\n  Button,\n  InputAdornment,\n  Link,\n  OutlinedInput,\n  Typography,\n} from \"@material-ui/core\";\nimport { Field, Form, Formik } from \"formik\";\nimport InputField from \"./InputField\";\nimport { queryCache } from \"react-query\";\nimport ComboBox from \"./ComboBox\";\nimport * as yup from \"yup\";\nimport DatePicker from \"./DatePicker\";\nimport useUpdateOrder from \"./hooks/useUpdateOrder\";\nimport ToolTip from \"./ToolTip\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"4px\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4),\n    width: \"55%\",\n  },\n  link: {\n    cursor: \"pointer\",\n    color: theme.palette.primary.main,\n  },\n  h2: {\n    top: \"-.9rem\",\n    position: \"relative\",\n    marginTop: 0,\n    textAlign: \"center\",\n    fontWeight: \"400\",\n    gridColumnEnd: 4,\n    gridColumnStart: 2,\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  clearButton: {\n    backgroundColor: \"rgb(210,0,10)\",\n    color: \"white\",\n    marginRight: \"1rem\",\n\n    \"&:hover\": {\n      backgroundColor: \"rgb(190,0,10)\",\n    },\n  },\n  billNo: {\n    gridColumn: 4,\n  },\n  auxiliaryRow: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n    margin: \"2rem auto 1rem auto\",\n    \"& .MuiButtonBase-root\": {\n      padding: \"2px !important\",\n    },\n\n    \"& .MuiOutlinedInput-adornedEnd\": {\n      paddingRight: \"3px\",\n    },\n\n    \"& #date-picker-inline-label\": {\n      transform: \"translate(14px, 10px) scale(1)\",\n    },\n  },\n}));\n\nconst validationSchema = yup.object({\n  entrepreneur: yup.object().required(),\n  customer: yup.object().required(),\n  date: yup.date().required(),\n  orderType: yup.object().required(),\n  orderKind: yup.object().required(),\n  billNo: yup.number().lessThan(2000000000).positive().min(0),\n  width: yup.number().lessThan(2000000000).positive().min(0).required(),\n  height: yup.number().lessThan(2000000000).positive().min(0).required(),\n  amount: yup.number().lessThan(2000000000).positive().min(0).required(),\n  price: yup.number().lessThan(2000000000).positive().min(0).required(),\n  fees: yup.number().lessThan(2000000000).positive().min(0).required(),\n  finalSum: yup.number().lessThan(2000000000).positive().min(0).required(),\n  comment: yup.string().trim().max(255).required(),\n});\n\nexport default function EditForm({ order }) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [updateOrder, updateOrderInfo] = useUpdateOrder();\n\n  const toggle = () => setOpen(!open);\n\n  return (\n    <div>\n      <ToolTip title={order.employee.name}>\n        <Link className={classes.link} onClick={toggle}>\n          <b>{order.orderId}</b>\n        </Link>\n      </ToolTip>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={toggle}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <Formik\n              validateOnChange={true}\n              validateOnMount={false}\n              validateOnBlur={false}\n              initialValues={order}\n              onSubmit={(order) => {\n                updateOrder({ order: order, toggleModal: toggle });\n              }}\n              validationSchema={validationSchema}\n            >\n              {({ values, errors, validateField }) => (\n                <Form>\n                  <div className={classes.auxiliaryRow}>\n                    <Field\n                      component={DatePicker}\n                      label=\"Дата\"\n                      name=\"date\"\n                      error={errors?.date}\n                      validator={validateField}\n                      disabled={updateOrderInfo.isLoading}\n                    />\n                    <Typography className={classes.h2} component=\"h2\" variant=\"h5\">\n                      Замовленя № <b>{order.orderId}</b>\n                    </Typography>\n                    <Field\n                      className={classes.billNo}\n                      name=\"billNo\"\n                      label=\"№ Рахунку\"\n                      error={errors?.billNo}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderInfo.isLoading}\n                    />\n                  </div>\n\n                  <div className=\"row__one\">\n                    <Field\n                      name=\"entrepreneur\"\n                      label=\"Підприємець\"\n                      error={errors?.entrepreneur}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderInfo.isLoading}\n                      getName={(option) => option.fullName || \"\"}\n                      loading={queryCache.getQuery(\"entrepreneurs\").state.isLoading}\n                      options={queryCache.getQuery(\"entrepreneurs\").state.data}\n                    />\n                    <Field\n                      name=\"customer\"\n                      label=\"Замовник\"\n                      error={errors?.customer}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderInfo.isLoading}\n                      getName={(option) => option.customerName || \"\"}\n                      loading={queryCache.getQuery(\"customers\").state.isLoading}\n                      options={queryCache.getQuery(\"customers\").state.data}\n                    />\n                    <Field\n                      name=\"orderType\"\n                      label=\"Вид\"\n                      error={errors?.orderType}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderInfo.isLoading}\n                      getName={(option) => option.orderType || \"\"}\n                      loading={queryCache.getQuery(\"orderTypes\").state.isLoading}\n                      options={queryCache.getQuery(\"orderTypes\").state.data}\n                    />\n                    <Field\n                      name=\"orderKind\"\n                      label=\"Тип\"\n                      error={errors?.orderKind}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderInfo.isLoading}\n                      getName={(option) => option.orderKind || \"\"}\n                      loading={queryCache.getQuery(\"orderTypes\").state.isLoading}\n                      options={values.orderType?.orderKinds || []}\n                    />\n                  </div>\n\n                  <div className=\"row__two\">\n                    <Field\n                      name=\"width\"\n                      label=\"Ширина\"\n                      error={errors?.width}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderInfo.isLoading}\n                    />\n                    <Field\n                      name=\"height\"\n                      label=\"Висота\"\n                      error={errors?.height}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderInfo.isLoading}\n                    />\n                    <Field\n                      name=\"amount\"\n                      label=\"Кількість\"\n                      error={errors?.amount}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderInfo.isLoading}\n                    />\n                    <OutlinedInput\n                      id=\"metrics\"\n                      size=\"small\"\n                      variant=\"outlined\"\n                      value={\n                        (\n                          ((values.width * values.height) / 1000000) *\n                          values.amount\n                        ).toFixed(3) || 0.0\n                      }\n                      endAdornment={\n                        <InputAdornment position=\"end\">м²</InputAdornment>\n                      }\n                      disabled\n                    />\n                    <Field\n                      name=\"price\"\n                      label=\"Ціна\"\n                      error={errors?.price}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderInfo.isLoading}\n                    />\n                    <Field\n                      name=\"fees\"\n                      label=\"Послуги\"\n                      error={errors?.fees}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderInfo.isLoading}\n                    />\n                    <Field\n                      name=\"finalSum\"\n                      label=\"Сума\"\n                      error={errors?.finalSum}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderInfo.isLoading}\n                    />\n                  </div>\n\n                  <div className=\"row__three\">\n                    <Field\n                      name=\"comment\"\n                      label=\"Опис замовлення\"\n                      error={errors?.comment}\n                      validator={validateField}\n                      numeric={false}\n                      component={InputField}\n                      disabled={updateOrderInfo.isLoading}\n                    />\n                  </div>\n\n                  <div className=\"row__three\">\n                    <Field\n                      name=\"payLog\"\n                      label=\"Історія оплат\"\n                      error={errors?.payLog}\n                      validator={validateField}\n                      numeric={false}\n                      multiline={true}\n                      component={InputField}\n                      readonly={true}\n                      disabled={updateOrderInfo.isLoading}\n                    />\n                  </div>\n\n                  <div className={classes.buttons}>\n                    <Button\n                      className={classes.clearButton}\n                      disabled={updateOrderInfo.isLoading}\n                      variant=\"contained\"\n                      type=\"button\"\n                    >\n                      Видалити\n                    </Button>\n                    <Button\n                      color=\"primary\"\n                      variant=\"contained\"\n                      className={classes.button}\n                      disabled={updateOrderInfo.isLoading}\n                      type=\"submit\"\n                    >\n                      Зберегти замовлення\n                    </Button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import Axios from \"axios\";\nimport { queryCache, useMutation } from \"react-query\";\n\nexport default function useUpdateOrder() {\n  let backupOrder = null;\n\n  return useMutation(\n    (updateObject) => Axios.put(\"/api/orders/\", updateObject.order),\n    {\n      onMutate: (mutationObject) => {\n        queryCache.setQueryData(\n          [\"orders\", 1],\n          queryCache.getQueryData([\"orders\", 1]).map((cachedOrder) => {\n            if (cachedOrder.orderId === mutationObject.order.orderId) {\n              backupOrder = cachedOrder;\n              return mutationObject.order;\n            } else return cachedOrder;\n          })\n        );\n      },\n      onError: (_error) => {\n        queryCache.setQueryData(\n          [\"orders\", 1],\n          queryCache.getQueryData([\"orders\", 1]).map((cachedOrder) => {\n            if (cachedOrder.orderId === backupOrder.orderId) return backupOrder;\n            else return cachedOrder;\n          })\n        );\n      },\n      onSuccess: (_, updateObject) => {\n        queryCache.invalidateQueries([\"orders\"]);\n        updateObject.toggleModal();\n      },\n    }\n  );\n}\n","import React from \"react\";\nimport { XGrid } from \"@material-ui/x-grid\";\nimport { Paper } from \"@material-ui/core\";\nimport ToolTip from \"./ToolTip\";\nimport StatusPopper from \"./StatusPopper\";\nimport useOrders from \"./hooks/useOrders\";\nimport EditForm from \"./EditForm\";\nimport { useSelector } from \"react-redux\";\nimport \"./Table.css\";\n\nconst percentToPixels = (percentage) => {\n  return (window.innerWidth * percentage) / 100;\n};\n\nfunction strcmp(a, b) {\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\nconst columns = [\n  {\n    field: \"orderId\",\n    type: \"number\",\n    headerName: \"№\",\n    width: percentToPixels(4),\n    renderCell: (params) => <EditForm order={params.row} />,\n  },\n  {\n    field: \"billNo\",\n    type: \"number\",\n    headerName: \"Рах\",\n    width: percentToPixels(3.5),\n  },\n  {\n    field: \"customer\",\n    headerName: \"Замовник\",\n    width: percentToPixels(8),\n    sortComparator: (c1, c2) => strcmp(c1.customerName, c2.customerName),\n    valueFormatter: (param) => param.value.customerName,\n    renderCell: (params) =>\n      params.value.info ? (\n        <ToolTip title={params.value.info}>{params.value.customerName}</ToolTip>\n      ) : (\n        <div>{params.value.customerName}</div>\n      ),\n  },\n  {\n    field: \"date\",\n    type: \"dateTime\",\n    headerName: \"Дата\",\n    width: percentToPixels(6),\n  },\n  {\n    field: \"width\",\n    type: \"number\",\n    headerName: \"Ширина\",\n    width: percentToPixels(5),\n  },\n  {\n    field: \"height\",\n    type: \"number\",\n    headerName: \"Висота\",\n    width: percentToPixels(5),\n  },\n  {\n    field: \"amount\",\n    type: \"number\",\n    headerName: \"К-сть\",\n    width: percentToPixels(5),\n  },\n  { field: \"m2\", type: \"number\", headerName: \"М2\", width: percentToPixels(4) },\n  {\n    field: \"price\",\n    type: \"number\",\n    headerName: \"Ціна\",\n    width: percentToPixels(5),\n  },\n  {\n    field: \"fees\",\n    type: \"number\",\n    headerName: \"Послуги\",\n    width: percentToPixels(5),\n  },\n  {\n    field: \"finalSum\",\n    type: \"number\",\n    headerName: \"Сума\",\n    width: percentToPixels(5),\n    renderCell: (params) => <b> {params.value} </b>,\n  },\n  {\n    field: \"paid\",\n    headerName: \"Оплата\",\n    sortable: false,\n    width: percentToPixels(5),\n    cellClassName: \"centered\",\n    renderCell: (params) => {\n      if (params.row.paySum === params.row.finalSum) {\n        return (\n          <ToolTip title={new Date(params.row.payDate).toLocaleDateString()} arrow>\n            <img src=\"img/completed.svg\" width=\"19\" alt=\"paid\" />\n          </ToolTip>\n        );\n      } else if (params.row.paySum > 0)\n        return (\n          <ToolTip\n            title={\n              params.row.paySum +\n              \" грн, \" +\n              new Date(params.row.payDate).toLocaleDateString()\n            }\n            arrow\n          >\n            <img src=\"img/partly_paid.svg\" width=\"19\" alt=\"partly__paid\" />\n          </ToolTip>\n        );\n    },\n  },\n  {\n    field: \"status.ds\",\n    headerName: \"Статус\",\n    width: percentToPixels(5),\n    cellClassName: \"centered\",\n    renderCell: (params) => (\n      <StatusPopper orderId={params.row.orderId} status={params.row.status.id} />\n    ),\n  },\n  {\n    field: \"orderType\",\n    headerName: \"Вид\",\n    width: percentToPixels(10),\n    valueFormatter: (param) => param.value.orderType,\n  },\n  {\n    field: \"orderKind\",\n    headerName: \"Тип\",\n    width: percentToPixels(10),\n    valueFormatter: (param) => param.value.orderKind,\n  },\n  {\n    field: \"comment\",\n    headerName: \"Опис замовлення\",\n    width: percentToPixels(12.7),\n  },\n];\n\nexport default function Table({ tableID }) {\n  const ordersQuery = useOrders(tableID);\n  const sortState = useSelector((state) => state.sort);\n\n  const calculateDebt = () => {\n    const ordersDiff = ordersQuery.data.reduce(\n      (a, b) => (a += b.finalSum - b.paySum),\n      0\n    );\n\n    if (sortState.selectedCustomer)\n      return ordersDiff - sortState.selectedCustomer.money;\n\n    return ordersDiff;\n  };\n\n  return (\n    <Paper elevation={4} className=\"x-grid\">\n      <div className=\"action__bar__stat\">\n        <label>\n          Сума боргу : <b>{calculateDebt()}</b> грн\n        </label>\n      </div>\n      <div className=\"frame\">\n        <div className=\"grid-holder\">\n          <XGrid\n            rows={ordersQuery.data}\n            columns={columns}\n            sortModel={[{ field: \"orderId\", sort: \"desc\" }]}\n            loading={ordersQuery.isLoading}\n            rowHeight={35}\n            headerHeight={35}\n            pagination={true}\n            disableSelectionOnClick={true}\n          />\n        </div>\n      </div>\n    </Paper>\n  );\n}\n","import { useQuery } from \"react-query\";\nimport * as OrderService from \".././services/orders-service\";\n\nexport default function useOrders(tableID) {\n  return useQuery([\"orders\", tableID], OrderService.fetchRecentOrders, {\n    initialData: [],\n    initialStale: true,\n    staleTime: 43200000,\n    refetchOnWindowFocus: false,\n    refetchOnMount: false,\n  });\n}\n","export const EmptyOrder = {\n  orderId: 0,\n  billNo: 0,\n  date: \"\",\n  employee: { userID: 60 },\n  entrepreneur: null,\n  customer: null,\n  orderType: null,\n  orderKind: null,\n  width: \"\",\n  height: \"\",\n  amount: \"\",\n  m2: 0.0,\n  price: \"\",\n  fees: \"\",\n  finalSum: \"\",\n  paid: 0,\n  status: { id: 1 },\n  comment: \"\",\n};\n","import { FormControlLabel, Switch } from \"@material-ui/core\";\nimport { useField } from \"formik\";\nimport React from \"react\";\n\nconst SwitchControl = ({ label, isChecked, ...props }) => {\n  const [field] = useField(props);\n  return (\n    <FormControlLabel\n      control={<Switch {...props} {...field} checked={isChecked} color=\"primary\" />}\n      label={label}\n    />\n  );\n};\n\nexport default SwitchControl;\n","import { Button } from \"@material-ui/core\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Field, Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { queryCache } from \"react-query\";\nimport * as yup from \"yup\";\nimport ComboBox from \"./ComboBox\";\nimport useSaveOrder from \"./hooks/useSaveOrder\";\nimport InputField from \"./InputField\";\nimport { EmptyOrder } from \"./models/OrderObject\";\nimport SwitchControl from \"./SwitchControl\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport \"./AddOrderForm.css\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    margin: \"0 auto\",\n    width: \"55%\",\n  },\n  button: {\n    width: \"17rem\",\n  },\n  clear: {\n    backgroundColor: \"#fff\",\n    minWidth: 0,\n    justifySelf: \"flex-end\",\n    margin: \"0px 0px 1px 0\",\n    width: \"2.4rem\",\n  },\n}));\n\nconst validationSchema = yup.object({\n  order: yup.object({\n    entrepreneur: yup.object().required(),\n    customer: yup.object().required(),\n    orderType: yup.object().required(),\n    orderKind: yup.object().required(),\n    width: yup.number().lessThan(2000000000).positive().min(0).required(),\n    height: yup.number().lessThan(2000000000).positive().min(0).required(),\n    amount: yup.number().lessThan(2000000000).positive().min(0).required(),\n    price: yup.number().lessThan(2000000000).positive().min(0).required(),\n    fees: yup.number().lessThan(2000000000).positive().min(0).required(),\n    finalSum: yup.number().lessThan(2000000000).positive().min(0).required(),\n    comment: yup.string().trim().max(255).required(),\n  }),\n});\n\nexport default function AddOrderForm() {\n  const classes = useStyles();\n  const [saveNewOrder, saveNewOrderInfo] = useSaveOrder();\n\n  const clearAndUnsort = (e, resetForm) => {\n    queryCache.invalidateQueries([\"orders\", 1]);\n    resetForm(e);\n  };\n\n  const onFormSubmit = (form, resetForm) => {\n    if (form.isUrgently) {\n      if (form.order.finalSum * 0.15 < 10) {\n        form.order.finalSum = +form.order.finalSum + 10;\n      } else {\n        form.order.finalSum = Math.ceil(form.order.finalSum * 1.15);\n      }\n      form.order.comment = \"(Терміново) \" + form.order.comment;\n    }\n\n    form.onAcceptance ? (form.order.status.id = 1) : (form.order.status.id = 2);\n\n    saveNewOrder({ newOrder: form.order, resetForm: resetForm });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik\n        validateOnChange={false}\n        validateOnMount={false}\n        validateOnBlur={false}\n        initialValues={{\n          order: EmptyOrder,\n          onAcceptance: true,\n          clearFields: true,\n          isUrgently: false,\n        }}\n        onSubmit={(form, { resetForm }) => onFormSubmit(form, resetForm)}\n        validationSchema={validationSchema}\n      >\n        {({ values, errors, validateField, handleReset }) => (\n          <Form>\n            <div className=\"row__one\">\n              <Field\n                name=\"order.entrepreneur\"\n                label=\"Підприємець\"\n                error={errors?.order?.entrepreneur}\n                validator={validateField}\n                component={ComboBox}\n                disabled={saveNewOrderInfo.isLoading}\n                getName={(option) => option.fullName || \"\"}\n                loading={queryCache.getQuery(\"entrepreneurs\").state.isLoading}\n                options={queryCache.getQuery(\"entrepreneurs\").state.data || []}\n              />\n              <Field\n                name=\"order.customer\"\n                label=\"Замовник\"\n                error={errors?.order?.customer}\n                validator={validateField}\n                component={ComboBox}\n                disabled={saveNewOrderInfo.isLoading}\n                sortKey=\"selectedCustomer\"\n                getName={(option) => option.customerName || \"\"}\n                loading={queryCache.getQuery(\"customers\").state.isLoading}\n                options={queryCache.getQuery(\"customers\").state.data || []}\n              />\n              <Field\n                name=\"order.orderType\"\n                label=\"Вид\"\n                error={errors?.order?.orderType}\n                validator={validateField}\n                component={ComboBox}\n                disabled={saveNewOrderInfo.isLoading}\n                getName={(option) => option.orderType || \"\"}\n                loading={queryCache.getQuery(\"orderTypes\").state.isLoading}\n                options={queryCache.getQuery(\"orderTypes\").state.data || []}\n              />\n              <Field\n                name=\"order.orderKind\"\n                label=\"Тип\"\n                error={errors?.order?.orderKind}\n                validator={validateField}\n                component={ComboBox}\n                disabled={saveNewOrderInfo.isLoading}\n                getName={(option) => option.orderKind || \"\"}\n                loading={queryCache.getQuery(\"orderTypes\").state.isLoading}\n                options={values.order.orderType?.orderKinds || []}\n              />\n            </div>\n\n            <div className=\"row__two\">\n              <Field\n                name=\"order.width\"\n                label=\"Ширина\"\n                error={errors?.order?.width}\n                validator={validateField}\n                component={InputField}\n                disabled={saveNewOrderInfo.isLoading}\n              />\n              <Field\n                name=\"order.height\"\n                label=\"Висота\"\n                error={errors?.order?.height}\n                validator={validateField}\n                component={InputField}\n                disabled={saveNewOrderInfo.isLoading}\n              />\n              <Field\n                name=\"order.amount\"\n                label=\"Кількість\"\n                error={errors?.order?.amount}\n                validator={validateField}\n                component={InputField}\n                disabled={saveNewOrderInfo.isLoading}\n              />\n              <OutlinedInput\n                id=\"metrics\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={\n                  (\n                    ((values.order.width * values.order.height) / 1000000) *\n                    values.order.amount\n                  ).toFixed(3) || 0.0\n                }\n                endAdornment={<InputAdornment position=\"end\">м²</InputAdornment>}\n                disabled\n              />\n              <Field\n                name=\"order.price\"\n                label=\"Ціна\"\n                error={errors?.order?.price}\n                validator={validateField}\n                component={InputField}\n                disabled={saveNewOrderInfo.isLoading}\n              />\n              <Field\n                name=\"order.fees\"\n                label=\"Послуги\"\n                error={errors?.order?.fees}\n                validator={validateField}\n                component={InputField}\n                disabled={saveNewOrderInfo.isLoading}\n              />\n              <Field\n                name=\"order.finalSum\"\n                label=\"Сума\"\n                error={errors?.order?.finalSum}\n                validator={validateField}\n                component={InputField}\n                disabled={saveNewOrderInfo.isLoading}\n              />\n            </div>\n\n            <div className=\"row__three\">\n              <Field\n                name=\"order.comment\"\n                label=\"Опис замовлення\"\n                error={errors?.order?.comment}\n                validator={validateField}\n                numeric={false}\n                component={InputField}\n                disabled={saveNewOrderInfo.isLoading}\n              />\n            </div>\n\n            <div className=\"row__four\">\n              <div className=\"controls\">\n                <SwitchControl\n                  name=\"onAcceptance\"\n                  isChecked={values.onAcceptance}\n                  label=\"На погодженні\"\n                  disabled={saveNewOrderInfo.isLoading}\n                />\n                <SwitchControl\n                  name=\"clearFields\"\n                  isChecked={values.clearFields}\n                  label=\"Очищати поля\"\n                  disabled={saveNewOrderInfo.isLoading}\n                />\n                <SwitchControl\n                  name=\"isUrgently\"\n                  isChecked={values.isUrgently}\n                  label=\"Терміново\"\n                  disabled={saveNewOrderInfo.isLoading}\n                />\n              </div>\n\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                className={classes.button}\n                disabled={saveNewOrderInfo.isLoading}\n                type=\"submit\"\n              >\n                Зберегти замовлення\n              </Button>\n\n              <Button\n                className={classes.clear}\n                onClick={(e) => clearAndUnsort(e, handleReset)}\n                disabled={saveNewOrderInfo.isLoading}\n                variant=\"contained\"\n                type=\"button\"\n              >\n                <RefreshIcon></RefreshIcon>\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n","import Axios from \"axios\";\nimport { queryCache, useMutation } from \"react-query\";\n\nexport default function useSaveOrder() {\n  return useMutation((params) => Axios.post(\"/api/orders/\", params.newOrder), {\n    onSuccess: (_, passedParams) => {\n      queryCache.invalidateQueries(\"orders\");\n      passedParams.resetForm();\n    },\n  });\n}\n","import Axios from \"axios\";\n\nexport const fetchCustomers = async () => {\n  const res = await Axios.get(\"/api/customers/\");\n  return res.data;\n};\n\nexport const fetchEntrepreneurs = async () => {\n  const res = await Axios.get(\"/api/entrepreneurs/\");\n  return res.data;\n};\n\nexport const fetchOrderTypes = async () => {\n  const res = await Axios.get(\"/api/order-types/\");\n  return res.data;\n};\n\nexport const fetchOrderKinds = async () => {\n  const res = await Axios.get(\"/api/order-kinds/\");\n  return res.data;\n};\n\nexport const fetchStatuses = async () => {\n  const res = await Axios.get(\"/api/orders/status/\");\n  return res.data;\n};\n","export const EmptySort = {\n  selectedCustomer: null,\n  selectedStatus: null,\n  selectedDateFrom: null,\n  selectedDateTill: null,\n  selectedKind: null,\n  selectedType: null,\n  selectedEmployee: null,\n  selectedDetails: \"\",\n};\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Field, Form, Formik } from \"formik\";\nimport { queryCache } from \"react-query\";\nimport ComboBox from \"./ComboBox\";\nimport DatePicker from \"./DatePicker\";\nimport InputField from \"./InputField\";\nimport { EmptySort } from \"./models/SortObject\";\nimport SwitchControl from \"./SwitchControl\";\nimport * as yup from \"yup\";\nimport useSort from \"./hooks/useSort\";\nimport { useSelector } from \"react-redux\";\nimport \"./SortForm.css\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    margin: \"0 auto\",\n    width: \"55%\",\n  },\n  button: {\n    width: \"16rem\",\n  },\n  clear: {\n    width: \"60%\",\n    justifySelf: \"flex-end\",\n    margin: \"4px 0px\",\n  },\n}));\n\nconst validationSchema = yup.object({\n  sort: yup.object({\n    selectedCustomer: yup.object().nullable(),\n    selectedStatus: yup.object().nullable(),\n    selectedDateFrom: yup.date().nullable(),\n    selectedDateTill: yup.date().nullable(),\n    selectedKind: yup.object().nullable(),\n    selectedType: yup.object().nullable(),\n    selectedDetails: yup.string().trim().max(255).nullable(),\n  }),\n});\n\nfunction SortForm() {\n  const classes = useStyles();\n  const authState = useSelector((state) => state.auth);\n  const [sortOrders, sortOrdersInfo] = useSort();\n\n  const clearAndUnsort = (e, resetForm) => {\n    sortOrders({});\n    resetForm(e);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik\n        validateOnChange={false}\n        validateOnMount={false}\n        validateOnBlur={false}\n        initialValues={{ sort: EmptySort, showUserOrders: false }}\n        onSubmit={(form) => {\n          form.showUserOrders\n            ? (form.sort.selectedEmployee = authState.loggedUser)\n            : (form.sort.selectedEmployee = null);\n          sortOrders(form.sort);\n        }}\n        validationSchema={validationSchema}\n      >\n        {({ values, errors, handleReset, validateField }) => (\n          <Form>\n            <div className=\"sort__row__one\">\n              <Field\n                name=\"sort.selectedCustomer\"\n                label=\"Замовник\"\n                error={errors?.customer}\n                component={ComboBox}\n                validator={validateField}\n                disabled={sortOrdersInfo.isLoading}\n                getName={(option) => option.customerName || \"\"}\n                options={queryCache.getQuery(\"customers\").state.data || []}\n                loading={queryCache.getQuery(\"customers\").state.isLoading}\n              />\n              <Field\n                name=\"sort.selectedType\"\n                label=\"Вид\"\n                error={errors?.orderType}\n                component={ComboBox}\n                validator={validateField}\n                disabled={sortOrdersInfo.isLoading}\n                getName={(option) => option.orderType || \"\"}\n                options={queryCache.getQuery(\"orderTypes\").state.data || []}\n                loading={queryCache.getQuery(\"orderTypes\").state.isLoading}\n              />\n              <Field\n                name=\"sort.selectedKind\"\n                label=\"Тип\"\n                error={errors?.orderKind}\n                component={ComboBox}\n                validator={validateField}\n                disabled={sortOrdersInfo.isLoading}\n                getName={(option) => option.orderKind || \"\"}\n                loading={queryCache.getQuery(\"orderTypes\").state.isLoading}\n                options={values.sort.selectedType?.orderKinds || []}\n              />\n            </div>\n\n            <div className=\"sort__row__two\">\n              <div className=\"datepickers\">\n                <Field\n                  component={DatePicker}\n                  label=\"Від\"\n                  name=\"sort.selectedDateFrom\"\n                  disabled={sortOrdersInfo.isLoading}\n                />\n                <Field\n                  component={DatePicker}\n                  label=\"До\"\n                  name=\"sort.selectedDateTill\"\n                  disabled={sortOrdersInfo.isLoading}\n                />\n              </div>\n              <Field\n                name=\"sort.selectedStatus\"\n                label=\"Статус\"\n                error={errors?.selectedStatus}\n                component={ComboBox}\n                validator={validateField}\n                disabled={sortOrdersInfo.isLoading}\n                getName={(option) => option.name || \"\"}\n                options={queryCache.getQuery(\"statuses\").state.data || []}\n                loading={queryCache.getQuery(\"statuses\").state.isLoading}\n              />\n              <Field\n                name=\"sort.selectedDetails\"\n                label=\"Опис замовлення\"\n                error={errors?.selectedDetails}\n                numeric={false}\n                disabled={sortOrdersInfo.isLoading}\n                component={InputField}\n                validator={validateField}\n              />\n            </div>\n\n            <div className=\"sort__row__three\">\n              <SwitchControl\n                name=\"showUserOrders\"\n                disabled={sortOrdersInfo.isLoading}\n                isChecked={values.showUserOrders}\n                label=\"Лише мої замовлення\"\n              />\n\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={sortOrdersInfo.isLoading}\n                className={classes.button}\n                type=\"submit\"\n              >\n                Сортувати\n              </Button>\n\n              <Button\n                className={classes.clear}\n                onClick={(e) => clearAndUnsort(e, handleReset)}\n                disabled={sortOrdersInfo.isLoading}\n                variant=\"contained\"\n                type=\"button\"\n              >\n                Очистити все\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default SortForm;\n","import Axios from \"axios\";\nimport { queryCache, useMutation } from \"react-query\";\nimport * as OrderService from \".././services/orders-service\";\n\nexport default function useSort() {\n  return useMutation((selections) => Axios.post(\"/api/sort/\", selections), {\n    onSuccess: (data) => {\n      queryCache.setQueryData([\"orders\", 1], OrderService.fixOrders(data.data));\n    },\n  });\n}\n","import { Button, Collapse, Paper } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport AddOrderForm from \"./AddOrderForm\";\nimport useCustomers from \"./hooks/useCustomers\";\nimport useEntrepreneurs from \"./hooks/useEntrepreneurs\";\nimport useOrderTypes from \"./hooks/useOrderTypes\";\nimport useStatuses from \"./hooks/useStatuses\";\nimport SortForm from \"./SortForm\";\nimport \"./ActionBar.css\";\n\nexport default function ActionBar() {\n  const [currentTab, setTab] = useState(0);\n\n  const toggle = (id) => (currentTab === id ? setTab(0) : setTab(id));\n\n  useCustomers();\n  useEntrepreneurs();\n  useOrderTypes();\n  useStatuses();\n\n  return (\n    <Paper elevation={2}>\n      <div className=\"action_bar_container\">\n        <div className=\"action__bar\">\n          <div className=\"action__bar__button\">\n            <Button variant=\"contained\" color=\"primary\" onClick={() => toggle(1)}>\n              Додати замовлення\n            </Button>\n            <Button\n              style={{ marginLeft: \".5rem\" }}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => toggle(2)}\n            >\n              Сортування\n            </Button>\n          </div>\n        </div>\n\n        <Collapse in={currentTab === 1} timeout=\"auto\">\n          <AddOrderForm />\n        </Collapse>\n\n        <Collapse in={currentTab === 2} timeout=\"auto\">\n          <SortForm />\n        </Collapse>\n      </div>\n    </Paper>\n  );\n}\n","import { useQuery } from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useCustomers() {\n  return useQuery(\"customers\", CustomerService.fetchCustomers);\n}\n","import { useQuery } from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useEntrepreneurs() {\n  return useQuery(\"entrepreneurs\", CustomerService.fetchEntrepreneurs);\n}\n","import { useQuery } from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useOrderTypes() {\n  return useQuery(\"orderTypes\", CustomerService.fetchOrderTypes);\n}\n","import { useQuery } from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useStatuses() {\n  return useQuery(\"statuses\", CustomerService.fetchStatuses);\n}\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { SET_AUTHENTICATED } from \"./context/actions\";\nimport * as AuthService from \"./services/auth-service\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://psdruk.com.ua/\">\n        psdruk.com.ua\n      </Link>\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [form, setForm] = useState({ username: \"\", password: \"\" });\n\n  const setUsername = (e) => setForm({ ...form, username: e.target.value });\n  const setPassword = (e) => setForm({ ...form, password: e.target.value });\n\n  const submitCredentials = (e) => {\n    e.preventDefault();\n\n    AuthService.authorize(form).then((data) => {\n      dispatch(SET_AUTHENTICATED(data.accessToken, data.employee));\n      history.push(\"/\");\n    });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Вхід\n        </Typography>\n        <form className={classes.form} onSubmit={submitCredentials}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            onChange={setUsername}\n            label=\"Логін\"\n            name=\"email\"\n            autoComplete=\"off\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Пароль\"\n            type=\"password\"\n            id=\"password\"\n            onChange={setPassword}\n            autoComplete=\"off\"\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Вхід\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Забули пароль?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Зареєструватись\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import \"./App.css\";\nimport Header from \"./Header\";\nimport Table from \"./Table\";\nimport ActionBar from \"./ActionBar\";\nimport Login from \"./Login\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/\">\n            <Header />\n            <ActionBar />\n            <Table tableID={1} />\n          </Route>\n          <Route path=\"/sort\">\n            <Header />\n            <Table tableID={2} />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { Redirect, Route } from \"react-router-dom\";\nimport { SET_AUTHENTICATED } from \"./context/actions\";\nimport store from \"./context/store\";\nimport { useSelector } from \"react-redux\";\n\nexport const ProtectedRoute = ({ component: Component, ...props }) => {\n  const authState = useSelector((store) => store.auth);\n  const authToken = localStorage.getItem(\"token\");\n  const loggedUser = JSON.parse(localStorage.getItem(\"loggedUser\"));\n\n  return (\n    <Route\n      {...props}\n      render={(props) => {\n        if (authState.isAuthenticated) {\n          return <Component {...props} />;\n        } else if (authToken) {\n          store.dispatch(SET_AUTHENTICATED(authToken, loggedUser));\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\n          );\n        }\n      }}\n    />\n  );\n};\n","import { Box, Paper, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport \"./NotFound.css\";\n\nfunction NotFound() {\n  return (\n    <Paper elevation={3} className=\"blue-holder\">\n      <Paper elevation={3} className=\"info\">\n        <div className=\"blank-page\">\n          <Typography variant=\"h4\" component=\"h3\">\n            Сторінка не знайдена\n          </Typography>{\" \"}\n          <Typography variant=\"h2\" component=\"h3\">\n            404\n          </Typography>\n        </div>\n        <Box mt={8}>\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {\"Copyright © \"}\n            <Link color=\"inherit\" href=\"https://psdruk.com.ua/\">\n              psdruk.com.ua\n            </Link>{\" \"}\n            {new Date().getFullYear()}\n            {\".\"}\n          </Typography>\n        </Box>\n      </Paper>\n    </Paper>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./context/store\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { uk } from \"date-fns/locale\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport App from \"./App\";\nimport { ukUA } from \"@material-ui/core/locale\";\nimport Login from \"./Login\";\nimport { ProtectedRoute } from \"./ProtectedRoute\";\nimport NotFound from \"./NotFound\";\nimport { ReactQueryDevtools } from \"react-query-devtools\";\n\nconst theme = createMuiTheme(\n  {\n    palette: {\n      primary: {\n        light: \"#fff\",\n        main: \"rgba(0, 60, 170, 0.95)\",\n        dark: \"rgba(0, 40, 170, 0.95)\",\n      },\n      secondary: {\n        main: \"#f44336\",\n      },\n    },\n    typography: {\n      useNextVariants: true,\n      fontSize: 11,\n      htmlFontSize: 15,\n    },\n  },\n  ukUA\n);\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={uk}>\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <Route path=\"/login\" component={Login} />\n            <ProtectedRoute exact path=\"/\" component={App} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </Router>\n      </Provider>\n    </MuiPickersUtilsProvider>\n    <ReactQueryDevtools />\n  </MuiThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}