{"version":3,"sources":["context/actionTypes.js","context/order-reducer.js","context/actions.js","services/utils.js","ComboBox.js","services/auth-service.js","context/auth-reducer.js","models/SortObject.js","context/sort-reducer.js","models/CustomerObject.js","context/customerModal-reducer.js","context/store.js","InfoMessage.js","InputField.js","models/OrderKindObject.js","models/OrderObject.js","models/OrderTypeObject.js","SwitchControl.js","AddOrderForm.js","hooks/useSaveOrder.js","hooks/useSaveCELink.js","hooks/useSaveCPLink.js","hooks/useSaveOrderKind.js","hooks/useSaveOrderType.js","hooks/useSaveDimensions.js","DatePicker.js","DependentInput.js","services/customer-service.js","models/PaymentObject.js","PaymentForm.js","hooks/useMakePayment.js","hooks/usePaymentMethods.js","hooks/useUpdatePaymentMethod.js","SortForm.js","ActionBar.js","ClientsTable.js","hooks/useExportCustomers.js","CustomerForm.js","hooks/useSaveCustomer.js","Header.js","Login.js","ToolTip.js","EditForm.js","hooks/useDeleteOrder.js","hooks/useUpdateOrder.js","services/orders-service.js","StatusPopper.js","hooks/useSetStatus.js","Table.js","hooks/useOrders.js","hooks/useExportOrders.js","App.js","hooks/useCustomers.js","hooks/useEntrepreneurs.js","hooks/useOrderTypes.js","hooks/useStatuses.js","hooks/useCELinks.js","hooks/useCPLinks.js","NotFound.js","ProtectedRoute.js","index.js"],"names":["ADD_ORDER","LOAD_ORDERS","SET_AUTHENTICATED","SET_UNAUTHENTICATED","SELECT_CUSTOMER","UNSELECT_CUSTOMER","SET_ACTIVE_SORTING","UPDATE_MAIN_SORTING","UPDATE_SORT_SORTING","UPDATE_PAYMENT_SORTING","ADD_MAIN_SORTING","ADD_SORT_SORTING","ADD_PAYMENT_SORTING","SHOW_CUSTOMER_MODAL","CLOSE_CUSTOMER_MODAL","initialState","mainPageOrderList","sortPageOrderList","isLoading","orderReducer","state","action","type","ActionTypes","payload","token","employee","username","roles","UPDATE_SORTING","selections","sortPage","customer","checkPriceShrink","form","shrinkStatus","setShrinkStatus","price","shrink","fixCustomers","data","id","map","row","orderId","customerId","calculateSum","order","m2","Math","ceil","fees","amount","NoPaddingAutocomplete","withStyles","root","transform","top","right","inputRoot","padding","paddingRight","input","Autocomplete","ComboBox","label","getName","sortKey","error","validator","kindNameSetter","typeNameSetter","setEntrepreneur","setDimensions","setPrice","props","textFieldProps","setFieldValue","useFormikContext","values","fieldToTextField","field","name","dispatch","useDispatch","queryClient","useQueryClient","size","value","autoHighlight","getOptionLabel","onKeyPress","e","key","preventDefault","onChange","_","sortBy","selection","ADD_SORTING_BY","entrepreneur","getQueryData","find","link","orderKindId","orderKind","kindId","sum","width","height","renderInput","TextField","target","variant","authorize","credentials","a","Axios","post","response","unauthorize","store","isAuthenticated","loggedUser","authReducer","localStorage","setItem","JSON","stringify","defaults","headers","common","interceptors","use","status","AuthService","console","removeItem","EmptySort","dateFrom","dateTill","orderType","details","active","main","sort","payment","sortReducer","CustomerObject","customerName","customerGroup","money","payLog","debtor","city","info","firstPerson","firstPhone","firstEmail","secondPerson","secondPhone","secondEmail","thirdPerson","thirdPhone","thirdEmail","show","customerModalReducer","require","createStore","combineReducers","auth","orders","default","sortSelections","showCustomerModal","InfoMessage","open","onClose","message","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","CustomTextField","InputField","readonly","disableCalculation","numeric","phone","autoComplete","InputProps","readOnly","match","length","onKeyUp","toFixed","EmptyOrderKind","typeId","kindName","EmptyOrder","billNo","date","userID","finalSum","paySum","comment","EmptyOrderType","typeName","SwitchControl","isChecked","useField","FormControlLabel","control","Switch","checked","color","useStyles","makeStyles","display","flexWrap","borderRadius","backgroundColor","margin","lock","minWidth","svg","fill","clear","justifySelf","validationSchema","yup","required","lessThan","positive","min","trim","max","AddOrderForm","classes","newOrderQuery","useMutation","params","newOrder","onSuccess","passedParams","setStatus","success","invalidateQueries","resetForm","onError","useSaveOrder","newCELinkQuery","get","entrepreneurId","useSaveCELink","newCPLinkQuery","useSaveCPLink","saveOrderKindQuery","orderKinds","push","useSaveOrderKind","saveOrderTypeQuery","useSaveOrderType","saveDimensionsQuery","put","useSaveDimensions","useState","showOrderInfo","setShowOrderInfo","showCELinkInfo","setShowCELinkInfo","showDimensionsInfo","setShowDimensionsInfo","showPriceInfo","setShowPriceInfo","showOrderTypeInfo","setShowOrderTypeInfo","showOrderKindInfo","setShowOrderKindInfo","orderKindName","setOrderKindName","orderTypeName","setOrderTypeName","handleClose","onAddCustomer","onAddOrderType","mutate","onFormSubmit","isUrgently","onAcceptance","setAcceptance","clearFields","keepFields","className","validateOnChange","validateOnMount","validateOnBlur","initialValues","parse","getItem","onSubmit","errors","validateField","handleReset","component","disabled","isFetching","option","fullName","options","Button","tabIndex","disableRipple","onClick","LastPageOutlined","LinkOutlined","OutlinedInput","endAdornment","InputAdornment","position","InputLabelProps","LockOpenOutlined","clearAndUnsort","datepicker","marginLeft","justifyContent","DatePicker","onTouch","autoOk","helperText","inputVariant","format","KeyboardButtonProps","DependentInput","React","useEffect","paymentType","paymentPercentage","fetchCustomers","source","CancelToken","cancelToken","res","cancel","fetchEntrepreneurs","fetchOrderTypes","fetchStatuses","fetchPaymentMethods","fetchCELinks","fetchCPLinks","EmptyPayment","paymentDate","percentage","receiver","row__one","gridColumnGap","gridTemplateColumns","row__two","gridTemplateRows","button","gridColumn","successInfo","successText","errorInfo","errorText","errorSvg","fontSize","successSvg","nullable","PaymentForm","makePaymentQuery","useMakePayment","paymentMethods","useQuery","DataService","initialData","initialStale","keepPreviousData","updatePaymentMethodQuery","paymentMethod","useUpdatePaymentMethod","showPaymentInfo","setShowPaymentInfo","showPercentageLinkInfo","setShowPercentageLinkInfo","Date","currentTime","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setCurrentTime","style","SortForm","authState","useSelector","showUserOrders","ActionBar","sortState","currentTab","setTab","tabId","hideFor","some","role","includes","setSortView","sorting","Typography","src","alt","showCustomerInfo","Collapse","in","timeout","onEntered","unmountOnExit","columns","headerName","flex","renderCell","Link","cellClassName","ClientsTable","exportQuery","customers","responseType","val","blob","Blob","window","navigator","msSaveOrOpenBlob","URL","createObjectURL","document","createElement","href","download","dispatchEvent","MouseEvent","bubbles","cancelable","view","q","setQ","filter","rows","toString","toLowerCase","indexOf","placeholder","sortModel","loading","rowHeight","headerHeight","pagination","disableSelectionOnClick","theme","modal","alignItems","paper","palette","background","boxShadow","shadows","spacing","cursor","primary","h2","textAlign","fontWeight","marginBottom","buttons","clearButton","marginRight","rowOne","gridRowGap","rowTwo","longTextField","gridColumnStart","gridColumnEnd","switchHolder","auxiliaryRow","email","CustomerForm","customerModalState","saveCustomerQuery","log","useSaveCustomer","showSavedInfo","setShowSavedInfo","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","flexGrow","logoutButton","logoutHolder","whiteSpace","tabs","Header","radius","history","useHistory","setValue","borderBottomLeftRadius","borderBottomRightRadius","Toolbar","Tabs","_e","newValue","TabIndicatorProps","indicatorColor","aria-label","Tab","Copyright","align","getFullYear","marginTop","flexDirection","avatar","secondary","submit","Login","password","setForm","showNotYetVerified","setShowNotYetVerified","showWrongCredentials","setShowWrongCredentials","isDisabled","setIsDisabled","Container","maxWidth","CssBaseline","Avatar","then","catch","fullWidth","autoFocus","Grid","container","item","xs","Box","mt","useStylesTooltip","arrow","tooltip","ToolTip","title","placement","children","Tooltip","lineHeight","EditForm","user","deleteQuery","delete","setShowModal","useDeleteOrder","updateOrderQuery","backupOrder","updateObject","onMutate","mutationObject","getQueryCache","findAll","forEach","query","setQueryData","queryKey","cachedOrder","_error","toggleModal","useUpdateOrder","setOpen","showDeleteError","setShowDeleteError","showSaveError","setShowSaveError","showConfirmation","setShowConfirmation","toggle","isNotMyOrder","employeeID","amI","isDisabledFor","multiline","Dialog","fullScreen","DialogTitle","DialogContent","DialogContentText","DialogActions","fixOrders","sortOrders","payDateFrom","payDateTill","sendForm","sources","acceptanceButton","border","borderColor","inWorkButton","readyButton","completedButton","popper","zIndex","left","borderWidth","content","borderStyle","StatusPopper","statusQuery","statusId","useSetStatus","anchorRef","useRef","arrowRef","setArrowRef","prevOpen","img","ref","Popper","anchorEl","current","disablePortal","modifiers","flip","enabled","preventOverflow","boundariesElement","element","o","strcmp","b","localeCompare","formatDate","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","Table","tableID","sortOrder","setSortOrder","ordersQuery","OrderService","useOrders","customerInfo","c","reduce","calculateDebt","orderBy","sortComparator","c1","c2","valueFormatter","param","Number","parseFloat","sortable","payDate","Object","keys","column","sortDirection","onSortModelChange","App","tableHeight","setTableHeight","CustomerService","refetchOnWindowFocus","innerHeight","getElementsByClassName","clientHeight","path","exact","NotFound","Paper","elevation","ProtectedRoute","Component","authToken","render","to","pathname","from","location","oldTheme","createMuiTheme","light","dark","typography","useNextVariants","htmlFontSize","ukUA","breakpoints","overrides","MuiInputLabel","up","down","MuiInputAdornment","MuiInputBase","MuiTypography","subtitle1","body1","MuiButton","MuiTab","MuiSvgIcon","prototype","toISOString","formatISO","this","substr","queryCache","QueryCache","QueryClient","ReactDOM","QueryClientProvider","client","utils","DateFnsUtils","locale","uk","getElementById"],"mappings":"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","file":"static/js/main.63a34a64.chunk.js","sourcesContent":["export const ADD_ORDER = \"ADD_ORDER\";\nexport const LOAD_ORDERS = \"LOAD_ORDERS\";\n\nexport const SET_AUTHENTICATED = \"SET_AUTHENTICATED\";\nexport const SET_UNAUTHENTICATED = \"SET_UNAUTHENTICATED\";\n\nexport const SELECT_CUSTOMER = \"SELECT_CUSTOMER\";\nexport const UNSELECT_CUSTOMER = \"UNSELECT_CUSTOMER\";\n\nexport const SET_ACTIVE_SORTING = \"SET_ACTIVE_SORTING\";\nexport const UPDATE_MAIN_SORTING = \"UPDATE_MAIN_SORTING\";\nexport const UPDATE_SORT_SORTING = \"UPDATE_SORT_SORTING\";\nexport const UPDATE_PAYMENT_SORTING = \"UPDATE_PAYMENT_SORTING\";\nexport const ADD_MAIN_SORTING = \"ADD_MAIN_SORTING\";\nexport const ADD_SORT_SORTING = \"ADD_SORT_SORTING\";\nexport const ADD_PAYMENT_SORTING = \"ADD_PAYMENT_SORTING\";\n\nexport const SHOW_CUSTOMER_MODAL = \"SHOW_CUSTOMER_MODAL\";\nexport const CLOSE_CUSTOMER_MODAL = \"CLOSE_CUSTOMER_MODAL\";\n","import * as ActionTypes from \"./actionTypes\";\n\nconst initialState = {\n  mainPageOrderList: [],\n  sortPageOrderList: [],\n  isLoading: true,\n};\n\nfunction orderReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.ADD_ORDER:\n      return {\n        ...state,\n        mainPageOrderList: [...state.mainPageOrderList, action.payload],\n        sortPageOrderList: [...state.sortPageOrderList, action.payload],\n      };\n    case ActionTypes.LOAD_ORDERS:\n      if (!action.payload) return state;\n      return {\n        ...state,\n        mainPageOrderList: action.payload,\n        sortPageOrderList: action.payload,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default orderReducer;\n","import * as ActionTypes from \"./actionTypes\";\n\nexport const NEW_ORDER = (newOrder) => ({\n  type: ActionTypes.ADD_ORDER,\n  payload: newOrder,\n});\n\nexport const LOAD_ORDERS = (orders) => ({\n  type: ActionTypes.LOAD_ORDERS,\n  payload: orders,\n});\n\nexport const SET_AUTHENTICATED = (token, employee, username, roles) => ({\n  type: ActionTypes.SET_AUTHENTICATED,\n  payload: {\n    token,\n    employee,\n    username,\n    roles,\n  },\n});\n\nexport const SET_UNAUTHENTICATED = () => ({\n  type: ActionTypes.SET_UNAUTHENTICATED,\n});\n\nexport const SELECT_CUSTOMER = (customer) => ({\n  type: ActionTypes.SELECT_CUSTOMER,\n  payload: customer,\n});\n\nexport const DESELECT_CUSTOMER = () => ({\n  type: ActionTypes.UNSELECT_CUSTOMER,\n});\n\nexport const SET_ACTIVE_SORTING = (sorting) => ({\n  type: ActionTypes.SET_ACTIVE_SORTING,\n  payload: sorting,\n});\n\nexport const ADD_SORTING_BY = (selection, type) => {\n  let sortPage;\n  switch (type) {\n    case \"main\":\n      sortPage = ActionTypes.ADD_MAIN_SORTING;\n      break;\n    case \"sort\":\n      sortPage = ActionTypes.ADD_SORT_SORTING;\n      break;\n    case \"payment\":\n      sortPage = ActionTypes.ADD_PAYMENT_SORTING;\n      break;\n    default:\n      break;\n  }\n  return {\n    type: sortPage,\n    payload: selection,\n  };\n};\n\nexport const UPDATE_SORTING = (selections, type) => {\n  let sortPage;\n  switch (type) {\n    case \"main\":\n      sortPage = ActionTypes.UPDATE_MAIN_SORTING;\n      break;\n    case \"sort\":\n      sortPage = ActionTypes.UPDATE_SORT_SORTING;\n      break;\n    case \"payment\":\n      sortPage = ActionTypes.UPDATE_PAYMENT_SORTING;\n      break;\n    default:\n      break;\n  }\n  return {\n    type: sortPage,\n    payload: selections,\n  };\n};\n\nexport const SHOW_CUSTOMER_MODAL = (customer = {}) => {\n  return {\n    type: ActionTypes.SHOW_CUSTOMER_MODAL,\n    payload: customer,\n  };\n};\n\nexport const CLOSE_CUSTOMER_MODAL = () => ({\n  type: ActionTypes.CLOSE_CUSTOMER_MODAL,\n});\n","export function calculateM2(order) {\n  order.m2 =\n    (((order.width * order.height) / 1000000) * order.amount).toFixed(3) || 0.0;\n}\n\nexport const checkPriceShrink = (form, shrinkStatus, setShrinkStatus) => {\n  if (form.price >= 0) {\n    if (!shrinkStatus.shrink) {\n      setShrinkStatus({\n        shrink: true,\n      });\n    }\n  } else if (shrinkStatus.shrink) {\n    setShrinkStatus({\n      shrink: false,\n    });\n  }\n};\n\nexport const fixCustomers = (data, id = 0) => {\n  return data.map((row) => {\n    if (row.orderId === 0) {\n      row.id = id;\n      row.customerId = id;\n    } else {\n      row.id = row.customerId;\n    }\n    return row;\n  });\n};\n\nexport const setCurrentTime = (date) => {\n  const currentTime = new Date();\n  date.setHours(currentTime.getHours());\n  date.setMinutes(currentTime.getMinutes());\n  date.setSeconds(currentTime.getSeconds());\n};\n\nexport const calculateSum = (order) => {\n  return order.m2 > 0\n    ? Math.ceil(+(order.m2 * order.price) + +order.fees)\n    : Math.ceil(order.price * order.amount + +order.fees);\n};\n","import {TextField, withStyles} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {useFormikContext} from \"formik\";\nimport {fieldToTextField} from \"formik-material-ui\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useDispatch} from \"react-redux\";\nimport {ADD_SORTING_BY} from \"./context/actions\";\nimport {calculateSum} from \"./services/utils\";\n\nconst NoPaddingAutocomplete = withStyles({\n  root: {\n    \"& .MuiInputLabel-marginDense\": {\n      transform: \"translate(14px, 9px) scale(1)\",\n    },\n\n    \"& .MuiInputLabel-shrink\": {\n      transform: \"translate(14px, -4px) scale(0.75)\",\n    },\n\n    \"& .MuiAutocomplete-endAdornment\": {\n      top: \"inherit\",\n    },\n\n    \"& .MuiAutocomplete-inputRoot[class*='MuiOutlinedInput-root'] .MuiAutocomplete-endAdornment\": {\n      right: 5,\n    },\n  },\n  inputRoot: {\n    '&&[class*=\"MuiOutlinedInput-root\"] $input': {\n      padding: 2,\n    },\n    '&&[class*=\"MuiOutlinedInput-root\"]': {\n      paddingRight: \"40px!important\",\n    },\n  },\n  input: {},\n})(Autocomplete);\n\nfunction ComboBox({\n  label,\n  getName,\n  sortKey,\n  error,\n  validator,\n  kindNameSetter = false,\n  typeNameSetter = false,\n  setEntrepreneur = false,\n  setDimensions = false,\n  setPrice = false,\n  action = false,\n  sortPage = \"\",\n  textFieldProps,\n  ...props\n}) {\n  const {\n    form: {setFieldValue},\n  } = props;\n  const {\n    values: {order},\n  } = useFormikContext();\n  const {...field} = fieldToTextField(props);\n  const {name} = field;\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n\n  return (\n    <NoPaddingAutocomplete\n      {...props}\n      size=\"small\"\n      error={\"\"}\n      value={field.value}\n      autoHighlight={true}\n      getOptionLabel={getName}\n      onKeyPress={(e) => {\n        if (e.key === \"=\" || e.key === \"+\") {\n          e.preventDefault();\n          if (action) action();\n        }\n      }}\n      onChange={(_, value) => {\n        if (sortKey) {\n          const sortBy = {};\n          sortBy[sortKey] = value;\n          dispatch(ADD_SORTING_BY(sortBy, sortPage));\n        }\n\n        if (setEntrepreneur) {\n          const entrepreneur =\n            queryClient\n              .getQueryData(\"ce-links\")\n              .find((link) => link.customer.customerId === value?.customerId)?.entrepreneur ||\n            null;\n          setFieldValue(\"order.entrepreneur\", entrepreneur);\n        }\n\n        setFieldValue(name, value);\n\n        if (setPrice) {\n          if (!value) return;\n          let customerId;\n          let orderKindId;\n          if (value.customerId) {\n            customerId = value.customerId;\n            orderKindId = order.orderKind?.kindId;\n          } else {\n            customerId = order.customer?.customerId;\n            orderKindId = value.kindId;\n          }\n          if (!customerId || !orderKindId) return;\n          const price =\n            queryClient\n              .getQueryData(\"cp-links\")\n              .find(\n                (link) =>\n                  link.customer?.customerId === customerId &&\n                  link.orderKind?.kindId === orderKindId\n              )?.price || 0;\n          setFieldValue(\"order.price\", price);\n\n          const sum = calculateSum({\n            ...order,\n            price: price,\n          });\n          if (sum) setFieldValue(\"order.finalSum\", sum);\n        }\n\n        if (setDimensions && value && value.width && value.height) {\n          setFieldValue(\"order.width\", value.width);\n          setFieldValue(\"order.height\", value.height);\n        }\n\n        validator(name);\n      }}\n      renderInput={(props) => (\n        <TextField\n          {...props}\n          error={!!error}\n          onChange={(e) => {\n            if (typeNameSetter) {\n              typeNameSetter(e.target.value);\n            } else if (kindNameSetter) {\n              kindNameSetter(e.target.value);\n            }\n          }}\n          label={label}\n          variant=\"outlined\"\n        />\n      )}\n    />\n  );\n}\n\nexport default ComboBox;\n","import Axios from \"axios\";\nimport { SET_UNAUTHENTICATED } from \"../context/actions\";\nimport store from \"../context/store\";\n\nexport const authorize = async (credentials) => {\n  const response = await Axios.post(\"/api/auth/signin\", credentials);\n  const data = response.data;\n  return data;\n};\n\nexport const unauthorize = () => {\n  store.dispatch(SET_UNAUTHENTICATED());\n};\n","import Axios from \"axios\";\nimport * as AuthService from \"../services/auth-service\";\nimport * as ActionTypes from \"./actionTypes\";\n\nconst initialState = {\n  isAuthenticated: false,\n  loggedUser: null,\n  roles: [],\n};\n\nfunction authReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.SET_AUTHENTICATED:\n      localStorage.setItem(\"token\", action.payload.token);\n      localStorage.setItem(\"username\", action.payload.username);\n      localStorage.setItem(\"roles\", action.payload.roles);\n      localStorage.setItem(\"loggedUser\", JSON.stringify(action.payload.employee));\n\n      Axios.defaults.headers.common[\n        \"Authorization\"\n      ] = `Bearer ${action.payload.token}`;\n\n      Axios.interceptors.response.use(\n        (response) => response,\n        (error) => {\n          error.response?.status === 401\n            ? AuthService.unauthorize()\n            : console.error(error);\n          throw error;\n        }\n      );\n      return {\n        isAuthenticated: true,\n        loggedUser: action.payload.employee,\n        roles: action.payload.roles,\n      };\n    case ActionTypes.SET_UNAUTHENTICATED:\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"username\");\n      localStorage.removeItem(\"roles\");\n      localStorage.removeItem(\"loggedUser\");\n      return {isAuthenticated: false, loggedUser: null};\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;\n","export const EmptySort = {\n  customer: null,\n  status: null,\n  dateFrom: null,\n  dateTill: null,\n  orderKind: null,\n  orderType: null,\n  employee: null,\n  details: \"\",\n};\n","import * as ActionTypes from \"./actionTypes\";\nimport {EmptySort} from \"../models/SortObject\";\n\nconst initialState = {\n  active: \"main\",\n  main: EmptySort,\n  sort: EmptySort,\n  payment: EmptySort,\n};\n\nfunction sortReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.SET_ACTIVE_SORTING:\n      return {...state, active: action.payload};\n    case ActionTypes.ADD_MAIN_SORTING:\n      return {...state, main: {...state.main, ...action.payload}};\n    case ActionTypes.ADD_SORT_SORTING:\n      return {...state, sort: {...state.sort, ...action.payload}};\n    case ActionTypes.ADD_PAYMENT_SORTING:\n      return {...state, payment: {...state.payment, ...action.payload}};\n    case ActionTypes.UPDATE_MAIN_SORTING:\n      return {...state, main: action.payload};\n    case ActionTypes.UPDATE_SORT_SORTING:\n      return {...state, sort: action.payload};\n    case ActionTypes.UPDATE_PAYMENT_SORTING:\n      return {...state, payment: action.payload};\n    default:\n      return state;\n  }\n}\n\nexport default sortReducer;\n","export const CustomerObject = {\n  customerId: 0,\n  customerName: \"\",\n  customerGroup: \"\",\n  money: 0,\n  payLog: \"\",\n  debtor: false,\n  city: \"\",\n  info: \"\",\n  firstPerson: \"\",\n  firstPhone: \"\",\n  firstEmail: \"\",\n  secondPerson: \"\",\n  secondPhone: \"\",\n  secondEmail: \"\",\n  thirdPerson: \"\",\n  thirdPhone: \"\",\n  thirdEmail: \"\",\n};\n","import {CustomerObject} from \"../models/CustomerObject\";\nimport * as ActionTypes from \"./actionTypes\";\n\nconst initialState = {\n  show: false,\n  customer: CustomerObject,\n};\n\nfunction customerModalReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.SHOW_CUSTOMER_MODAL:\n      return {show: true, customer: action.payload};\n    case ActionTypes.CLOSE_CUSTOMER_MODAL:\n      return {show: false, customer: {}};\n    default:\n      return state;\n  }\n}\n\nexport default customerModalReducer;\n","import authReducer from \"./auth-reducer\";\nimport sortReducer from \"./sort-reducer\";\nimport customerModalReducer from \"./customerModal-reducer\";\n\nconst {createStore, combineReducers} = require(\"redux\");\nconst {default: orderReducer} = require(\"./order-reducer\");\n\nconst store = createStore(\n  combineReducers({\n    auth: authReducer,\n    orders: orderReducer,\n    sortSelections: sortReducer,\n    showCustomerModal: customerModalReducer,\n  })\n);\n\nexport default store;\n","import {Snackbar} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport React from \"react\";\n\nfunction InfoMessage({open, onClose, message, type}) {\n  if (type === \"success\") {\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={onClose}\n      >\n        <Alert onClose={onClose} variant=\"filled\" severity=\"success\">\n          {message}\n        </Alert>\n      </Snackbar>\n    );\n  } else {\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={onClose}\n      >\n        <Alert onClose={onClose} variant=\"filled\" severity=\"error\">\n          {message}\n        </Alert>\n      </Snackbar>\n    );\n  }\n}\n\nexport default InfoMessage;\n","import {TextField, withStyles} from \"@material-ui/core\";\nimport {useFormikContext} from \"formik\";\nimport React from \"react\";\nimport {calculateM2, calculateSum} from \"./services/utils\";\n\nconst CustomTextField = withStyles({\n  root: {\n    \"& .MuiInputLabel-marginDense\": {\n      transform: \"translate(14px, 9px) scale(1)\",\n    },\n\n    \"& .MuiOutlinedInput-input\": {\n      padding: 8,\n    },\n\n    \"& .MuiInputLabel-shrink\": {\n      transform: \"translate(14px, -4px) scale(0.75)\",\n    },\n  },\n})(TextField);\n\nconst InputField = ({\n  label,\n  field,\n  error,\n  readonly = false,\n  validator,\n  disableCalculation = false,\n  numeric = true,\n  phone = false,\n  ...props\n}) => {\n  const {\n    form: {setFieldValue},\n  } = props;\n  const {values: form} = useFormikContext();\n  const {onChange, name} = field;\n  return (\n    <CustomTextField\n      {...props}\n      {...field}\n      error={!!error}\n      size=\"small\"\n      variant=\"outlined\"\n      autoComplete=\"off\"\n      label={label}\n      InputProps={{readOnly: readonly}}\n      onChange={(e) => {\n        if (!numeric) onChange(e);\n        if (e.target.value.match(/^\\d*\\.?\\d*$/) || e.target.value.length === 0) {\n          onChange(e);\n        }\n        validator(name);\n      }}\n      onKeyUp={(_) => {\n        if (!numeric || phone || !form.order || disableCalculation) return;\n        calculateM2(form.order);\n        const sum = calculateSum(form.order);\n        if (sum) setFieldValue(\"order.finalSum\", sum);\n      }}\n    />\n  );\n};\n\nexport default InputField;\n","export const EmptyOrderKind = {\n  kindId: 0,\n  typeId: 0,\n  kindName: \"\",\n  width: 0,\n  height: 0,\n};\n","export const EmptyOrder = {\n  orderId: 0,\n  billNo: 0,\n  date: \"\",\n  employee: {userID: 60},\n  entrepreneur: null,\n  customer: null,\n  orderType: null,\n  orderKind: null,\n  width: 0,\n  height: 0,\n  amount: 0,\n  m2: 0.0,\n  price: 0,\n  fees: 0,\n  finalSum: 0,\n  paySum: 0,\n  status: {id: 1},\n  comment: \"\",\n};\n","export const EmptyOrderType = {\n  typeId: 0,\n  typeName: \"\",\n};\n","import { FormControlLabel, Switch } from \"@material-ui/core\";\nimport { useField } from \"formik\";\nimport React from \"react\";\n\nconst SwitchControl = ({ label, isChecked, ...props }) => {\n  const [field] = useField(props);\n  return (\n    <FormControlLabel\n      control={<Switch {...props} {...field} checked={isChecked} color=\"primary\" />}\n      label={label}\n    />\n  );\n};\n\nexport default SwitchControl;\n","import {Button} from \"@material-ui/core\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {LastPageOutlined, LinkOutlined, LockOpenOutlined} from \"@material-ui/icons\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {Field, Form, Formik} from \"formik\";\nimport React, {useState} from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useDispatch} from \"react-redux\";\nimport * as yup from \"yup\";\nimport \"./AddOrderForm.css\";\nimport ComboBox from \"./ComboBox\";\nimport {SHOW_CUSTOMER_MODAL, UPDATE_SORTING} from \"./context/actions\";\nimport store from \"./context/store\";\nimport useSaveCELink from \"./hooks/useSaveCELink\";\nimport useSaveCPLink from \"./hooks/useSaveCPLink\";\nimport useSaveDimensions from \"./hooks/useSaveDimensions\";\nimport useSaveOrder from \"./hooks/useSaveOrder\";\nimport useSaveOrderKind from \"./hooks/useSaveOrderKind\";\nimport useSaveOrderType from \"./hooks/useSaveOrderType\";\nimport InfoMessage from \"./InfoMessage\";\nimport InputField from \"./InputField\";\nimport {CustomerObject} from \"./models/CustomerObject\";\nimport {EmptyOrderKind} from \"./models/OrderKindObject\";\nimport {EmptyOrder} from \"./models/OrderObject\";\nimport {EmptyOrderType} from \"./models/OrderTypeObject\";\nimport {EmptySort} from \"./models/SortObject\";\nimport {checkPriceShrink} from \"./services/utils\";\nimport SwitchControl from \"./SwitchControl\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    margin: \"0 auto\",\n    width: \"52%\",\n  },\n  lock: {\n    padding: 0,\n    width: \"5px\",\n    backgroundColor: \"white !important\",\n    minWidth: 0,\n\n    \"&:hover\": {\n      backgroundColor: \"white\",\n    },\n  },\n  svg: {\n    fill: \"rgba(0, 0, 0, 0.23)\",\n\n    \"&:hover\": {\n      fill: \"black\",\n    },\n  },\n  clear: {\n    backgroundColor: \"#fff\",\n    minWidth: 0,\n    justifySelf: \"flex-end\",\n    margin: \"0px 0px 1px 0\",\n    width: \"2.4rem\",\n  },\n}));\n\nconst validationSchema = yup.object({\n  order: yup.object({\n    entrepreneur: yup.object().required(),\n    customer: yup.object().required(),\n    orderType: yup.object().required(),\n    orderKind: yup.object().required(),\n    width: yup.number().lessThan(2000000000).positive().min(0).required(),\n    height: yup.number().lessThan(2000000000).positive().min(0).required(),\n    amount: yup.number().lessThan(2000000000).positive().min(0).required(),\n    price: yup.number().lessThan(2000000000).positive().min(0).required(),\n    fees: yup.number().lessThan(2000000000).positive().min(0).required(),\n    finalSum: yup.number().lessThan(2000000000).positive().min(0).required(),\n    comment: yup.string().trim().max(255).required(),\n  }),\n});\n\nexport default function AddOrderForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n  const newOrderQuery = useSaveOrder();\n  const newCELinkQuery = useSaveCELink();\n  const newCPLinkQuery = useSaveCPLink();\n  const saveOrderKindQuery = useSaveOrderKind();\n  const saveOrderTypeQuery = useSaveOrderType();\n  const saveDimensionsQuery = useSaveDimensions();\n  const [shrinkStatus, setShrinkStatus] = useState({});\n  const [showOrderInfo, setShowOrderInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [showCELinkInfo, setShowCELinkInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [showDimensionsInfo, setShowDimensionsInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [showPriceInfo, setShowPriceInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [showOrderTypeInfo, setShowOrderTypeInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [showOrderKindInfo, setShowOrderKindInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [orderKindName, setOrderKindName] = useState(\"\");\n  const [orderTypeName, setOrderTypeName] = useState(\"\");\n\n  const handleClose = () => {\n    setShowOrderInfo({success: false, error: false});\n    setShowCELinkInfo({success: false, error: false});\n    setShowDimensionsInfo({success: false, error: false});\n    setShowPriceInfo({success: false, error: false});\n    setShowOrderKindInfo({success: false, error: false});\n    setShowOrderTypeInfo({success: false, error: false});\n  };\n\n  const clearAndUnsort = (e, resetForm) => {\n    queryClient.invalidateQueries(\"customers\");\n    queryClient.invalidateQueries(\"ce-links\");\n    queryClient.invalidateQueries(\"cp-links\");\n    store.dispatch(UPDATE_SORTING({...EmptySort}, \"main\"));\n    resetForm(e);\n  };\n\n  const onAddCustomer = () => {\n    dispatch(SHOW_CUSTOMER_MODAL({...CustomerObject}));\n  };\n\n  const onAddOrderType = () => {\n    if (orderTypeName.trim().length === 0) {\n      setShowOrderTypeInfo({success: false, error: true});\n      return;\n    }\n    saveOrderTypeQuery.mutate({\n      orderType: {\n        ...EmptyOrderType,\n        typeName: orderTypeName,\n      },\n      setStatus: setShowOrderTypeInfo,\n    });\n  };\n\n  const onAddOrderKind = (orderType) => {\n    if (orderKindName.trim().length === 0 || !orderType) {\n      setShowOrderKindInfo({success: false, error: true});\n      return;\n    }\n    saveOrderKindQuery.mutate({\n      orderType: orderType,\n      orderKind: {\n        ...EmptyOrderKind,\n        typeId: orderType.typeId,\n        kindName: orderKindName,\n      },\n      setStatus: setShowOrderKindInfo,\n    });\n  };\n\n  const linkCustomer = (customer, entrepreneur) => {\n    if (!customer || !entrepreneur) {\n      setShowCELinkInfo({success: false, error: true});\n      return;\n    }\n    newCELinkQuery.mutate({\n      customerId: customer.customerId,\n      entrepreneurId: entrepreneur.entrepreneurId,\n      setStatus: setShowCELinkInfo,\n    });\n  };\n\n  const linkDimensions = (orderKind, width, height) => {\n    if (!orderKind || !width || !height) {\n      setShowDimensionsInfo({success: false, error: true});\n      return;\n    }\n    orderKind.width = width;\n    orderKind.height = height;\n    saveDimensionsQuery.mutate({\n      orderKind: orderKind,\n      setStatus: setShowDimensionsInfo,\n    });\n  };\n\n  const linkPrice = (customer, orderKind, price) => {\n    if (!customer || !orderKind || !price) {\n      setShowPriceInfo({success: false, error: true});\n      return;\n    }\n    newCPLinkQuery.mutate({\n      customerId: customer.customerId,\n      orderKindId: orderKind.kindId,\n      price: price,\n      setStatus: setShowPriceInfo,\n    });\n  };\n\n  const setUrgence = (isUrgently, order) => {\n    if (isUrgently) {\n      if (order.finalSum * 0.15 < 10) {\n        order.finalSum = +order.finalSum + 10;\n      } else {\n        order.finalSum = Math.ceil(order.finalSum * 1.15);\n      }\n      order.comment = \"(Терміново) \" + order.comment;\n    }\n  };\n\n  const setAcceptance = (onAcceptance, order) => {\n    onAcceptance\n      ? (order.status = queryClient.getQueryData(\"statuses\").find((status) => status.id === 1))\n      : (order.status = queryClient\n          .getQueryData(\"statuses\")\n          .find((status) => status.id === 2));\n  };\n\n  const onFormSubmit = (form, resetForm, setFieldValue) => {\n    setUrgence(form.isUrgently, form.order);\n    setAcceptance(form.onAcceptance, form.order);\n    newOrderQuery.mutate({\n      newOrder: form.order,\n      resetForm: form.clearFields ? resetForm : () => keepFields(form.order, setFieldValue),\n      setStatus: setShowOrderInfo,\n    });\n  };\n\n  const keepFields = (form, setFieldValue) => {\n    setFieldValue(\"order.width\", form.orderKind.width);\n    setFieldValue(\"order.height\", form.orderKind.height);\n    setFieldValue(\"order.amount\", 0);\n    const price =\n      queryClient\n        .getQueryData(\"cp-links\")\n        .find(\n          (link) =>\n            link.customer?.customerId === form.customer.customerId &&\n            link.orderKind?.kindId === form.orderKind.kindId\n        )?.price || 0;\n    setFieldValue(\"order.price\", price);\n    setFieldValue(\"order.fees\", 0);\n    setFieldValue(\"order.finalSum\", 0);\n    setFieldValue(\"order.comment\", \"\");\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik\n        validateOnChange={false}\n        validateOnMount={false}\n        validateOnBlur={false}\n        initialValues={{\n          order: {\n            ...EmptyOrder,\n            employee: JSON.parse(localStorage.getItem(\"loggedUser\")),\n          },\n          onAcceptance: false,\n          clearFields: true,\n          isUrgently: false,\n        }}\n        onSubmit={(form, {resetForm, setFieldValue}) =>\n          onFormSubmit(form, resetForm, setFieldValue)\n        }\n        validationSchema={validationSchema}\n      >\n        {({values, errors, validateField, handleReset}) => (\n          <Form>\n            {checkPriceShrink(values.order, shrinkStatus, setShrinkStatus)}\n            <div className=\"row__one\">\n              <Field\n                name=\"order.entrepreneur\"\n                label=\"Підприємець\"\n                error={errors?.order?.entrepreneur}\n                validator={validateField}\n                component={ComboBox}\n                disabled={newOrderQuery.isFetching}\n                getName={(option) => option.fullName || \"\"}\n                options={queryClient.getQueryData(\"entrepreneurs\") || []}\n              />\n              <Button\n                tabIndex={-1}\n                className={classes.lock}\n                disableRipple={true}\n                onClick={() => linkCustomer(values.order.customer, values.order.entrepreneur)}\n              >\n                <LastPageOutlined className={classes.svg} />\n              </Button>\n              <Field\n                name=\"order.customer\"\n                label=\"Замовник\"\n                error={errors?.order?.customer}\n                validator={validateField}\n                component={ComboBox}\n                setEntrepreneur={true}\n                setPrice={true}\n                sortKey=\"customer\"\n                sortPage=\"main\"\n                action={onAddCustomer}\n                disabled={newOrderQuery.isFetching}\n                getName={(option) => option.customerName || \"\"}\n                options={queryClient.getQueryData(\"customers\") || []}\n              />\n              <Field\n                name=\"order.orderType\"\n                label=\"Вид\"\n                error={errors?.order?.orderType}\n                validator={validateField}\n                component={ComboBox}\n                typeNameSetter={setOrderTypeName}\n                action={onAddOrderType}\n                disabled={newOrderQuery.isFetching}\n                getName={(option) => option.typeName || \"\"}\n                options={queryClient.getQueryData(\"orderTypes\") || []}\n              />\n\n              <Field\n                name=\"order.orderKind\"\n                label=\"Тип\"\n                error={errors?.order?.orderKind}\n                validator={validateField}\n                component={ComboBox}\n                setPrice={true}\n                setDimensions={true}\n                action={() => onAddOrderKind(values.order.orderType)}\n                kindNameSetter={setOrderKindName}\n                disabled={newOrderQuery.isFetching}\n                getName={(option) => option.kindName || \"\"}\n                options={values.order.orderType?.orderKinds || []}\n              />\n            </div>\n\n            <div className=\"row__two\">\n              <Field\n                name=\"order.width\"\n                label=\"Ширина\"\n                error={errors?.order?.width}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <Button\n                tabIndex={-1}\n                className={classes.lock}\n                disableRipple={true}\n                onClick={() =>\n                  linkDimensions(\n                    values.order.orderKind,\n                    values.order.width,\n                    values.order.height\n                  )\n                }\n              >\n                <LinkOutlined className={classes.svg} />\n              </Button>\n              <Field\n                name=\"order.height\"\n                label=\"Висота\"\n                error={errors?.order?.height}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <Field\n                name=\"order.amount\"\n                label=\"Кількість\"\n                error={errors?.order?.amount}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <OutlinedInput\n                id=\"outlined\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={\n                  (\n                    ((values.order.width * values.order.height) / 1000000) *\n                    values.order.amount\n                  ).toFixed(3) || 0.0\n                }\n                endAdornment={<InputAdornment position=\"end\">м²</InputAdornment>}\n                disabled\n              />\n\n              <Field\n                name=\"order.price\"\n                label=\"Ціна\"\n                error={errors?.order?.price}\n                validator={validateField}\n                InputLabelProps={shrinkStatus}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <Button\n                tabIndex={-1}\n                className={classes.lock}\n                disableRipple={true}\n                onClick={() =>\n                  linkPrice(values.order.customer, values.order.orderKind, values.order.price)\n                }\n              >\n                <LockOpenOutlined className={classes.svg} />\n              </Button>\n\n              <Field\n                name=\"order.fees\"\n                label=\"Послуги\"\n                error={errors?.order?.fees}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <Field\n                name=\"order.finalSum\"\n                label=\"Сума\"\n                error={errors?.order?.finalSum}\n                validator={validateField}\n                component={InputField}\n                disableCalculation={true}\n                disabled={newOrderQuery.isFetching}\n              />\n            </div>\n\n            <div className=\"row__three\">\n              <Field\n                name=\"order.comment\"\n                label=\"Опис замовлення\"\n                error={errors?.order?.comment}\n                validator={validateField}\n                numeric={false}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n            </div>\n\n            <div className=\"row__four\">\n              <div className=\"controls\">\n                <SwitchControl\n                  name=\"onAcceptance\"\n                  isChecked={values.onAcceptance}\n                  label=\"На погодженні\"\n                  disabled={newOrderQuery.isFetching}\n                />\n                <SwitchControl\n                  name=\"clearFields\"\n                  isChecked={values.clearFields}\n                  label=\"Очищати поля\"\n                  disabled={newOrderQuery.isFetching}\n                />\n                <SwitchControl\n                  name=\"isUrgently\"\n                  isChecked={values.isUrgently}\n                  label=\"Терміново\"\n                  disabled={newOrderQuery.isFetching}\n                />\n              </div>\n\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={newOrderQuery.isFetching}\n                type=\"submit\"\n              >\n                Зберегти замовлення\n              </Button>\n\n              <Button\n                className={classes.clear}\n                onClick={(e) => clearAndUnsort(e, handleReset)}\n                disabled={newOrderQuery.isFetching}\n                variant=\"contained\"\n                type=\"button\"\n              >\n                <RefreshIcon></RefreshIcon>\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n      <InfoMessage\n        type=\"success\"\n        open={showOrderInfo.success}\n        onClose={handleClose}\n        message=\"Замовлення успішно додано.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showOrderInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при додаванні замовлення.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showCELinkInfo.success}\n        onClose={handleClose}\n        message=\"Зв'язок збережено.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showCELinkInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні зв'язку.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showDimensionsInfo.success}\n        onClose={handleClose}\n        message=\"Розміри збережено.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showDimensionsInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні розмірів.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showPriceInfo.success}\n        onClose={handleClose}\n        message=\"Ціна прив'язана.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showPriceInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні ціни.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showOrderKindInfo.success}\n        onClose={handleClose}\n        message=\"Тип успішно створений.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showOrderKindInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при створенні типу. Можливо не вибраний вид.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showOrderTypeInfo.success}\n        onClose={handleClose}\n        message=\"Вид успішно створений.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showOrderTypeInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при створенні виду.\"\n      />\n    </div>\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\nimport {UPDATE_SORTING} from \"../context/actions\";\nimport store from \"../context/store\";\nimport {EmptySort} from \"../models/SortObject\";\n\nexport default function useSaveOrder() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.post(\"/api/orders/\", params.newOrder), {\n    onSuccess: (_, passedParams) => {\n      passedParams.setStatus({success: true, error: false});\n      queryClient.invalidateQueries([\"customers\"]);\n      store.dispatch(UPDATE_SORTING({...EmptySort}, \"main\"));\n      passedParams.resetForm();\n    },\n    onError: (_, passedParams) => {\n      passedParams.setStatus({success: false, error: true});\n    },\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveCELink() {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (params) =>\n      Axios.get(\"/api/ce-links/\" + params.customerId + \"/\" + params.entrepreneurId),\n    {\n      onSuccess: (_, passedParams) => {\n        queryClient.invalidateQueries(\"ce-links\");\n        passedParams.setStatus({success: true, error: false});\n      },\n      onError: (_, passedParams) => {\n        passedParams.setStatus({success: false, error: true});\n      },\n    }\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveCELink() {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (params) =>\n      Axios.get(\n        \"/api/cp-links/\" +\n          params.customerId +\n          \"/\" +\n          params.orderKindId +\n          \"/\" +\n          params.price\n      ),\n    {\n      onSuccess: (_, passedParams) => {\n        queryClient.invalidateQueries(\"cp-links\");\n        passedParams.setStatus({success: true, error: false});\n      },\n      onError: (_, passedParams) => {\n        passedParams.setStatus({success: false, error: true});\n      },\n    }\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveOrderKind() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.post(\"/api/order-kinds/\", params.orderKind), {\n    onError: (_, params) => {\n      params.setStatus({success: false, error: true});\n    },\n    onSuccess: (response, params) => {\n      params.orderType.orderKinds.push(response.data);\n      queryClient.invalidateQueries([\"orderTypes\"]);\n      params.setStatus({success: true, error: false});\n    },\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveOrderType() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.post(\"/api/order-types/\", params.orderType), {\n    onError: (_, params) => {\n      params.setStatus({success: false, error: true});\n    },\n    onSuccess: (_, params) => {\n      queryClient.invalidateQueries([\"orderTypes\"]);\n      params.setStatus({success: true, error: false});\n    },\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveDimensions() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.put(\"/api/order-kinds/\", params.orderKind), {\n    onSuccess: (_, passedParams) => {\n      queryClient.invalidateQueries(\"orderTypes\");\n      passedParams.setStatus({success: true, error: false});\n    },\n    onError: (_, passedParams) => {\n      passedParams.setStatus({success: false, error: true});\n    },\n  });\n}\n","import {makeStyles} from \"@material-ui/core\";\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\nimport {fieldToTextField} from \"formik-material-ui\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(() => ({\n  datepicker: {\n    margin: 0,\n\n    \"& .MuiButtonBase-root\": {\n      padding: 2,\n    },\n\n    \"& .MuiOutlinedInput-input\": {\n      padding: 8,\n    },\n\n    \"& .MuiInputLabel-outlined\": {\n      transform: \"translate(14px, 10px) scale(1)\",\n    },\n\n    \"& .MuiInputLabel-shrink\": {\n      transform: \"translate(14px, -4px) scale(0.75)\",\n    },\n\n    \"& .MuiOutlinedInput-adornedEnd\": {\n      paddingRight: 3,\n    },\n\n    \"& .MuiInputAdornment-root\": {\n      width: \"25%\",\n      marginLeft: 0,\n      justifyContent: \"flex-end\",\n    },\n  },\n}));\n\nfunction DatePicker({label, validator, onTouch = false, ...props}) {\n  const classes = useStyles();\n  const {\n    form: {setFieldValue},\n  } = props;\n  const {...field} = fieldToTextField(props);\n  const {name} = field;\n\n  return (\n    <KeyboardDatePicker\n      {...props}\n      {...field}\n      autoOk={true}\n      autoComplete=\"off\"\n      helperText={\"\"}\n      className={classes.datepicker}\n      inputVariant=\"outlined\"\n      variant=\"inline\"\n      format=\"dd/MM/yyyy\"\n      margin=\"normal\"\n      label={label}\n      onChange={(value) => {\n        setFieldValue(name, value);\n\n        if (onTouch) {\n          onTouch(true);\n        }\n\n        if (validator) {\n          validator(name);\n        }\n      }}\n      KeyboardButtonProps={{\n        \"aria-label\": \"change date\",\n      }}\n    />\n  );\n}\n\nexport default DatePicker;\n","import {TextField, withStyles} from \"@material-ui/core\";\nimport {useFormikContext} from \"formik\";\nimport React from \"react\";\n\nconst CustomTextField = withStyles({\n  root: {\n    \"& .MuiInputLabel-marginDense\": {\n      transform: \"translate(14px, 9px) scale(1)\",\n    },\n\n    \"& .MuiInputLabel-shrink\": {\n      transform: \"translate(14px, -4px) scale(0.75)\",\n    },\n  },\n})(TextField);\n\nconst DependentInput = ({name, label, field, error, validator, value, ...props}) => {\n  const {onChange} = field;\n  const {\n    values: {payment},\n    setFieldValue,\n  } = useFormikContext();\n\n  React.useEffect(() => {\n    if (payment.paymentType) {\n      setFieldValue(\"payment.percentage\", payment.paymentType?.paymentPercentage);\n    } else {\n      setFieldValue(\"payment.percentage\", 0);\n    }\n  }, [payment.paymentType, setFieldValue]);\n\n  return (\n    <CustomTextField\n      {...props}\n      {...field}\n      error={!!error}\n      id=\"metrics\"\n      size=\"small\"\n      variant=\"outlined\"\n      autoComplete=\"off\"\n      label={label}\n      onChange={(e) => {\n        if (e.target.value.match(/^\\d*\\.?\\d*$/) || e.target.value.length === 0) {\n          setFieldValue(\"payment.percentage\", e.target.value);\n          onChange(e);\n        }\n        validator(name);\n      }}\n    />\n  );\n};\n\nexport default DependentInput;\n","import Axios, {CancelToken} from \"axios\";\n\nexport const fetchCustomers = async () => {\n  const source = CancelToken.source();\n  const res = await Axios.get(\"/api/customers/\", {\n    cancelToken: source.token,\n  });\n  res.cancel = () => source.cancel(\"Query was cancelled by React Query\");\n  return res.data;\n};\n\nexport const fetchEntrepreneurs = async () => {\n  const res = await Axios.get(\"/api/entrepreneurs/\");\n  return res.data;\n};\n\nexport const fetchOrderTypes = async () => {\n  const res = await Axios.get(\"/api/order-types/\");\n  return res.data;\n};\n\nexport const fetchOrderKinds = async () => {\n  const res = await Axios.get(\"/api/order-kinds/\");\n  return res.data;\n};\n\nexport const fetchStatuses = async () => {\n  const res = await Axios.get(\"/api/orders/statuses/\");\n  return res.data;\n};\n\nexport const fetchPaymentMethods = async () => {\n  const res = await Axios.get(\"/api/payments/\");\n  return res.data;\n};\n\nexport const fetchCELinks = async () => {\n  const source = CancelToken.source();\n  const res = await Axios.get(\"/api/ce-links/\", {\n    cancelToken: source.token,\n  });\n  res.cancel = () => source.cancel(\"Query was cancelled by React Query\");\n  return res.data;\n};\n\nexport const fetchCPLinks = async () => {\n  const source = CancelToken.source();\n  const res = await Axios.get(\"/api/cp-links/\", {\n    cancelToken: source.token,\n  });\n  res.cancel = () => source.cancel(\"Query was cancelled by React Query\");\n  return res.data;\n};\n","export const EmptyPayment = {\n  entrepreneur: null,\n  customer: null,\n  paymentDate: null,\n  sum: 0,\n  percentage: 0,\n  paymentType: null,\n  receiver: \"\",\n};\n","import {Button} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {LinkOutlined} from \"@material-ui/icons\";\nimport {Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport * as yup from \"yup\";\nimport ComboBox from \"./ComboBox\";\nimport {UPDATE_SORTING} from \"./context/actions\";\nimport store from \"./context/store\";\nimport DatePicker from \"./DatePicker\";\nimport DependentInput from \"./DependentInput\";\nimport useMakePayment from \"./hooks/useMakePayment\";\nimport usePaymentMethods from \"./hooks/usePaymentMethods\";\nimport useUpdatePaymentMethod from \"./hooks/useUpdatePaymentMethod\";\nimport InfoMessage from \"./InfoMessage\";\nimport InputField from \"./InputField\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {EmptyPayment} from \"./models/PaymentObject\";\nimport {EmptySort} from \"./models/SortObject\";\nimport {setCurrentTime} from \"./services/utils\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    margin: \"0 auto\",\n    width: \"52%\",\n  },\n  row__one: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"1fr 2fr\",\n    margin: \".5rem auto 1rem auto\",\n  },\n  row__two: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"1fr 1fr 0.05fr 1fr 1fr\",\n    margin: \"1rem auto\",\n\n    \"& .MuiOutlinedInput-input\": {\n      padding: \"8px 8px\",\n    },\n  },\n  button: {\n    gridColumn: 2,\n    width: \"16rem\",\n    height: \"2.375rem\",\n    justifySelf: \"center\",\n  },\n  clear: {\n    backgroundColor: \"#fff\",\n    minWidth: 0,\n    justifySelf: \"flex-end\",\n    margin: \"0px 0px 1px 0\",\n    width: \"2.4rem\",\n  },\n  lock: {\n    padding: 0,\n    width: \"100%\",\n    backgroundColor: \"white !important\",\n    minWidth: 0,\n\n    \"&:hover\": {\n      backgroundColor: \"white\",\n    },\n  },\n  svg: {\n    fill: \"rgba(0, 0, 0, 0.23)\",\n\n    \"&:hover\": {\n      fill: \"black\",\n    },\n  },\n  successInfo: {\n    display: \"flex\",\n  },\n  successText: {\n    margin: \"auto .5rem\",\n    color: \"#27A637\",\n  },\n  errorInfo: {\n    display: \"flex\",\n  },\n  errorText: {\n    margin: \"auto .5rem\",\n    color: \"#d2000a\",\n  },\n  errorSvg: {\n    fontSize: \"2.54rem\",\n    fill: \"#d2000a\",\n  },\n  successSvg: {\n    fontSize: \"2.54rem\",\n    fill: \"#27A637\",\n  },\n}));\n\nconst validationSchema = yup.object({\n  payment: yup.object({\n    entrepreneur: yup.object().nullable(),\n    customer: yup.object().required(),\n    paymentDate: yup.date().required(),\n    sum: yup.number().lessThan(2000000000).positive().required(),\n    percentage: yup.number().lessThan(2000000000).positive().min(0).required(),\n    paymentType: yup.object().required(),\n  }),\n});\n\nfunction PaymentForm() {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const makePaymentQuery = useMakePayment();\n  const paymentMethods = usePaymentMethods();\n  const updatePaymentMethodQuery = useUpdatePaymentMethod();\n  const [showPaymentInfo, setShowPaymentInfo] = React.useState({\n    success: false,\n    error: false,\n  });\n  const [showPercentageLinkInfo, setShowPercentageLinkInfo] = React.useState({\n    success: false,\n    error: false,\n  });\n\n  const handleClose = () => {\n    setShowPaymentInfo({success: false, error: false});\n    setShowPercentageLinkInfo({success: false, error: false});\n  };\n\n  const linkPercentage = (paymentMethod, percentage) => {\n    paymentMethod.paymentPercentage = percentage;\n    updatePaymentMethodQuery.mutate({\n      paymentMethod: paymentMethod,\n      setStatus: setShowPercentageLinkInfo,\n    });\n  };\n\n  const clearAndUnsort = (e, resetForm) => {\n    queryClient.invalidateQueries(\"customers\");\n    store.dispatch(UPDATE_SORTING({...EmptySort}, \"payment\"));\n    resetForm(e);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik\n        validateOnChange={false}\n        validateOnMount={false}\n        validateOnBlur={false}\n        initialValues={{payment: {...EmptyPayment, paymentDate: new Date()}}}\n        validationSchema={validationSchema}\n        onSubmit={(form) => {\n          setCurrentTime(form.payment.paymentDate);\n          form.payment.receiver = form.payment.paymentType.typeName;\n          makePaymentQuery.mutate({\n            payment: form.payment,\n            setStatus: setShowPaymentInfo,\n          });\n        }}\n      >\n        {({values, errors, handleReset, validateField}) => (\n          <Form style={{margin: \"0 auto\"}}>\n            <div className={classes.row__one}>\n              <Field\n                name=\"payment.entrepreneur\"\n                label=\"Підприємець\"\n                error={errors?.payment?.entrepreneur}\n                validator={validateField}\n                component={ComboBox}\n                sortKey=\"entrepreneur\"\n                sortPage=\"payment\"\n                disabled={makePaymentQuery.isLoading}\n                getName={(option) => option.fullName || \"\"}\n                options={queryClient.getQueryData(\"entrepreneurs\") || []}\n              />\n              <Field\n                name=\"payment.customer\"\n                label=\"Замовник\"\n                error={errors?.payment?.customer}\n                component={ComboBox}\n                validator={validateField}\n                sortKey=\"customer\"\n                sortPage=\"payment\"\n                disabled={makePaymentQuery.isLoading}\n                getName={(option) => option.customerName || \"\"}\n                options={queryClient.getQueryData(\"customers\") || []}\n              />\n            </div>\n\n            <div className={classes.row__two}>\n              <Field\n                component={DatePicker}\n                label=\"Дата\"\n                name=\"payment.paymentDate\"\n                validator={validateField}\n                disabled={makePaymentQuery.isLoading}\n              />\n\n              <Field\n                name=\"payment.paymentType\"\n                label=\"Тип оплати\"\n                error={errors?.payment?.paymentType}\n                component={ComboBox}\n                validator={validateField}\n                disabled={makePaymentQuery.isLoading}\n                getName={(option) => option.typeName || \"\"}\n                options={paymentMethods?.data || []}\n              />\n              <Button\n                className={classes.lock}\n                disableRipple={true}\n                onClick={() =>\n                  linkPercentage(values.payment.paymentType, values.payment.percentage)\n                }\n              >\n                <LinkOutlined className={classes.svg} />\n              </Button>\n              <Field\n                name=\"payment.percentage\"\n                label=\"Відсоток\"\n                error={errors?.payment?.percentage}\n                validator={validateField}\n                component={DependentInput}\n                disabled={makePaymentQuery.isLoading}\n              />\n              <Field\n                name=\"payment.sum\"\n                label=\"Сума\"\n                error={errors?.payment?.sum}\n                validator={validateField}\n                component={InputField}\n                disabled={makePaymentQuery.isLoading}\n              />\n            </div>\n\n            <div className=\"sort__row__three\">\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={makePaymentQuery.isLoading}\n                className={classes.button}\n                type=\"submit\"\n              >\n                Оплатити\n              </Button>\n\n              <Button\n                className={classes.clear}\n                onClick={(e) => clearAndUnsort(e, handleReset)}\n                disabled={makePaymentQuery.isLoading}\n                variant=\"contained\"\n                type=\"button\"\n              >\n                <RefreshIcon></RefreshIcon>\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n      <InfoMessage\n        type=\"success\"\n        open={showPaymentInfo.success}\n        onClose={handleClose}\n        message=\"Оплата успішно внесена.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showPaymentInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при внесенні оплати.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showPercentageLinkInfo.success}\n        onClose={handleClose}\n        message=\"Зв'язок успішно збережений.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showPercentageLinkInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні зв'язку.\"\n      />\n    </div>\n  );\n}\n\nexport default PaymentForm;\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useMakePayment() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.post(\"/api/payments/\", params.payment), {\n    onError: (_, params) => {\n      params.setStatus({success: false, error: true});\n    },\n    onSuccess: (_, params) => {\n      params.setStatus({success: true, error: false});\n      queryClient.invalidateQueries([\"customers\"]);\n      queryClient.invalidateQueries([\"orders\"]);\n      params.payment.sum = 0;\n    },\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as DataService from \"../services/customer-service\";\n\nexport default function usePaymentMethods() {\n  return useQuery(\"paymentMethods\", DataService.fetchPaymentMethods, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useUpdatePaymentMethod() {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (params) => Axios.put(\"/api/payments/types/\", params.paymentMethod),\n    {\n      onSuccess: (_, passedParams) => {\n        queryClient.invalidateQueries(\"paymentMethods\");\n        passedParams.setStatus({success: true, error: false});\n      },\n      onError: (_, passedParams) => {\n        passedParams.setStatus({success: false, error: true});\n      },\n    }\n  );\n}\n","import {Button} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as yup from \"yup\";\nimport ComboBox from \"./ComboBox\";\nimport {UPDATE_SORTING} from \"./context/actions\";\nimport DatePicker from \"./DatePicker\";\nimport InputField from \"./InputField\";\nimport {EmptySort} from \"./models/SortObject\";\nimport \"./SortForm.css\";\nimport SwitchControl from \"./SwitchControl\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    margin: \"0 auto\",\n    width: \"52%\",\n  },\n  button: {\n    width: \"16rem\",\n    justifySelf: \"center\",\n  },\n  clear: {\n    backgroundColor: \"#fff\",\n    minWidth: 0,\n    justifySelf: \"flex-end\",\n    margin: \"0px 0px 1px 0\",\n    width: \"2.4rem\",\n  },\n}));\n\nconst validationSchema = yup.object({\n  sort: yup.object({\n    customer: yup.object().nullable(),\n    status: yup.object().nullable(),\n    dateFrom: yup.date().nullable(),\n    dateTill: yup.date().nullable(),\n    orderKind: yup.object().nullable(),\n    orderType: yup.object().nullable(),\n    details: yup.string().trim().max(255).nullable(),\n  }),\n});\n\nfunction SortForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n  const authState = useSelector((state) => state.auth);\n\n  const clearAndUnsort = (e, resetForm) => {\n    queryClient.invalidateQueries(\"customers\");\n    dispatch(UPDATE_SORTING({...EmptySort}, \"sort\"));\n    resetForm(e);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik\n        validateOnChange={false}\n        validateOnMount={false}\n        validateOnBlur={false}\n        initialValues={{sort: EmptySort, showUserOrders: false}}\n        onSubmit={(form) => {\n          form.showUserOrders\n            ? (form.sort.employee = authState.loggedUser)\n            : (form.sort.employee = null);\n          form.sort.details = form.sort.details.trim();\n          dispatch(UPDATE_SORTING(form.sort, \"sort\"));\n        }}\n        validationSchema={validationSchema}\n      >\n        {({values, errors, handleReset, validateField}) => (\n          <Form>\n            <div className=\"sort__row__one\">\n              <Field\n                name=\"sort.customer\"\n                label=\"Замовник\"\n                error={errors?.sort?.customer}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.customerName || \"\"}\n                options={queryClient.getQueryData(\"customers\") || []}\n              />\n              <Field\n                name=\"sort.orderType\"\n                label=\"Вид\"\n                error={errors?.sort?.orderType}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.typeName || \"\"}\n                options={queryClient.getQueryData(\"orderTypes\") || []}\n              />\n              <Field\n                name=\"sort.orderKind\"\n                label=\"Тип\"\n                error={errors?.sort?.orderKind}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.kindName || \"\"}\n                options={values.sort.orderType?.orderKinds || []}\n              />\n            </div>\n\n            <div className=\"sort__row__two\">\n              <div className=\"datepickers\">\n                <Field\n                  component={DatePicker}\n                  disabled={false}\n                  label=\"Від\"\n                  name=\"sort.dateFrom\"\n                />\n                <Field\n                  component={DatePicker}\n                  disabled={false}\n                  label=\"До\"\n                  name=\"sort.dateTill\"\n                />\n              </div>\n              <Field\n                name=\"sort.status\"\n                label=\"Статус\"\n                error={errors?.sort?.status}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.name || \"\"}\n                options={queryClient.getQueryData(\"statuses\") || []}\n              />\n              <Field\n                name=\"sort.details\"\n                label=\"Опис замовлення\"\n                error={errors?.sort?.details}\n                numeric={false}\n                component={InputField}\n                validator={validateField}\n              />\n            </div>\n\n            <div className=\"sort__row__three\">\n              <SwitchControl\n                name=\"showUserOrders\"\n                isChecked={values.showUserOrders}\n                label=\"Лише мої замовлення\"\n              />\n\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                className={classes.button}\n                type=\"submit\"\n              >\n                Сортувати\n              </Button>\n\n              <Button\n                className={classes.clear}\n                onClick={(e) => clearAndUnsort(e, handleReset)}\n                variant=\"contained\"\n                type=\"button\"\n              >\n                <RefreshIcon></RefreshIcon>\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default SortForm;\n","import {Button, Collapse, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport \"./ActionBar.css\";\nimport AddOrderForm from \"./AddOrderForm\";\nimport {SET_ACTIVE_SORTING} from \"./context/actions\";\nimport PaymentForm from \"./PaymentForm\";\nimport SortForm from \"./SortForm\";\n\nexport default function ActionBar() {\n  const dispatch = useDispatch();\n  const authState = useSelector((store) => store.auth);\n  const sortState = useSelector((state) => state.sortSelections);\n  const [currentTab, setTab] = useState(0);\n\n  const open = (tabId) => (currentTab === tabId ? setTab(0) : setTab(tabId));\n\n  const hideFor = (roles) => !roles.some((role) => authState.roles.includes(role));\n\n  const setSortView = (type) => {\n    if (sortState.active === type) return;\n    dispatch(SET_ACTIVE_SORTING(type));\n  };\n\n  const showCustomerInfo = () => {\n    if (!sortState[sortState.active].customer) return;\n    return (\n      <Typography variant=\"subtitle1\">\n        {sortState[sortState.active].customer?.debtor && (\n          <img\n            className=\"debtor-mark\"\n            src=\"img/Blackmark.svg\"\n            width=\"19\"\n            height=\"19\"\n            alt=\"blackmark\"\n          />\n        )}\n        <strong>{sortState[sortState.active].customer?.customerName}</strong>{\" \"}\n        {sortState[sortState.active].customer?.customerGroup}:{\" \"}\n        {sortState[sortState.active].customer?.info}\n      </Typography>\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"action_bar_container\">\n        <div className=\"action__bar\">\n          <div className=\"action__bar__info\">{showCustomerInfo()}</div>\n          <div className=\"action__bar__button\">\n            {hideFor([\"ROLE_GROUNDFLOOR\", \"ROLE_UVPRINT\"]) && (\n              <Button variant=\"contained\" color=\"primary\" onClick={() => open(1)}>\n                Додати замовлення\n              </Button>\n            )}\n            <Button\n              style={{marginLeft: \".5rem\"}}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => open(2)}\n            >\n              Сортування\n            </Button>\n            {hideFor([\"ROLE_GROUNDFLOOR\", \"ROLE_UVPRINT\"]) && (\n              <Button\n                style={{marginLeft: \".5rem\"}}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => open(3)}\n              >\n                Внести оплату\n              </Button>\n            )}\n          </div>\n        </div>\n\n        <Collapse\n          in={currentTab === 1}\n          timeout={300}\n          onEntered={() => setSortView(\"main\")}\n          unmountOnExit\n        >\n          <AddOrderForm />\n        </Collapse>\n\n        <Collapse\n          in={currentTab === 2}\n          timeout={300}\n          onEntered={() => setSortView(\"sort\")}\n          unmountOnExit\n        >\n          <SortForm />\n        </Collapse>\n\n        <Collapse\n          in={currentTab === 3}\n          timeout={300}\n          onEntered={() => setSortView(\"payment\")}\n          unmountOnExit\n        >\n          <PaymentForm />\n        </Collapse>\n      </div>\n    </div>\n  );\n}\n","import {Button, Link, TextField} from \"@material-ui/core\";\nimport {XGrid} from \"@material-ui/x-grid\";\nimport React, {useState} from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useSelector} from \"react-redux\";\nimport \"./ClientTable.css\";\nimport {SHOW_CUSTOMER_MODAL} from \"./context/actions\";\nimport store from \"./context/store\";\nimport useExportCustomers from \"./hooks/useExportCustomers\";\nimport {fixCustomers} from \"./services/utils\";\n\nconst columns = [\n  {\n    field: \"customerName\",\n    headerName: \"Назва замовника\",\n    flex: 3,\n    renderCell: (params) => (\n      <Link\n        className=\"name-link\"\n        onClick={() => store.dispatch(SHOW_CUSTOMER_MODAL(params.row))}\n      >\n        <b>{params.value}</b>\n      </Link>\n    ),\n  },\n  {\n    field: \"debtor\",\n    headerName: \"Боржник\",\n    flex: 1.4,\n    cellClassName: \"centered\",\n    renderCell: (params) => {\n      if (params.value) {\n        return (\n          <img src=\"img/Blackmark.svg\" width=\"19\" height=\"19\" alt=\"blackmark\" />\n        );\n      } else return <div></div>;\n    },\n  },\n  {\n    field: \"customerGroup\",\n    headerName: \"Група\",\n    flex: 5,\n  },\n  {\n    field: \"firstPerson\",\n    headerName: \"Особа 1\",\n    flex: 2,\n  },\n  {\n    field: \"firstPhone\",\n    headerName: \"Телефон 1\",\n    flex: 2.5,\n  },\n  {\n    field: \"firstEmail\",\n    headerName: \"Email 1\",\n    flex: 4,\n  },\n  {\n    field: \"city\",\n    headerName: \"Місто\",\n    flex: 1.3,\n  },\n  {\n    field: \"info\",\n    headerName: \"Інформація\",\n    flex: 6,\n  },\n];\n\nexport default function ClientsTable() {\n  const queryClient = useQueryClient();\n  const exportQuery = useExportCustomers();\n  const authState = useSelector((state) => state.auth);\n  const [q, setQ] = useState(\"\");\n\n  const filter = (rows) => {\n    return rows.filter(\n      (row) =>\n        row.customerName?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.customerGroup?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.firstPerson?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.firstPhone?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.firstEmail?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.city?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.info?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1\n    );\n  };\n\n  return (\n    <>\n      <TextField\n        variant=\"outlined\"\n        size=\"small\"\n        placeholder=\"Швидкий пошук\"\n        onChange={(e) => setQ(e.target.value)}\n        InputProps={{\n          endAdornment: authState.roles.includes(\"ADMIN\") && (\n            <Button\n              className=\"export-btn\"\n              variant=\"outlined\"\n              onClick={() =>\n                exportQuery.mutate(\n                  filter(fixCustomers(queryClient.getQueryData(\"customers\") || []))\n                )\n              }\n            >\n              Експорт\n            </Button>\n          ),\n        }}\n      />\n      <div className=\"x-grid\">\n        <div className=\"frame\">\n          <div className=\"grid-holder\">\n            <XGrid\n              className=\"customers-grid\"\n              rows={filter(\n                fixCustomers(queryClient.getQueryData(\"customers\") || [])\n              )}\n              columns={columns}\n              sortModel={[{field: \"customerName\", sort: \"asc\"}]}\n              loading={queryClient.isFetching(\"customers\")}\n              rowHeight={35}\n              headerHeight={35}\n              pagination={true}\n              disableSelectionOnClick={true}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation} from \"react-query\";\n\nexport default function useExportCustomers() {\n  return useMutation(\n    (customers) =>\n      Axios.post(\n        \"api/customers/export/\",\n        {customers: customers},\n        {\n          responseType: \"arraybuffer\",\n        }\n      ),\n    {\n      onError: (_, params) => {\n        params.setStatus({success: false, error: true});\n      },\n      onSuccess: (val, _) => {\n        const blob = new Blob([val.data], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        });\n\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n          window.navigator.msSaveOrOpenBlob(blob);\n          return;\n        }\n        const data = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = data;\n        link.download = \"Клієнти.xlsx\";\n        link.dispatchEvent(\n          new MouseEvent(\"click\", {bubbles: true, cancelable: true, view: window})\n        );\n      },\n    }\n  );\n}\n","import {Button, Typography} from \"@material-ui/core\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Modal from \"@material-ui/core/Modal\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as yup from \"yup\";\nimport {CLOSE_CUSTOMER_MODAL} from \"./context/actions\";\nimport useSaveCustomer from \"./hooks/useSaveCustomer\";\nimport InfoMessage from \"./InfoMessage\";\nimport InputField from \"./InputField\";\nimport SwitchControl from \"./SwitchControl\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"4px\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4),\n    width: \"40%\",\n\n    \"& .MuiOutlinedInput-inputMarginDense\": {\n      padding: \"8px !important\",\n    },\n  },\n  link: {\n    cursor: \"pointer\",\n    color: theme.palette.primary.main,\n  },\n  h2: {\n    textAlign: \"center\",\n    fontWeight: \"400\",\n    marginBottom: \"1rem\",\n  },\n  buttons: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n  },\n  clearButton: {\n    backgroundColor: \"rgb(210,0,10)\",\n    color: \"white\",\n    marginRight: \"1rem\",\n\n    \"&:hover\": {\n      backgroundColor: \"rgb(190,0,10)\",\n    },\n  },\n  rowOne: {\n    gridTemplateRows: \"1fr 1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    gridColumnGap: \"15px\",\n    gridRowGap: \"10px\",\n  },\n  rowTwo: {\n    gridTemplateRows: \"1fr 1fr 1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    gridRowGap: \"10px\",\n  },\n  longTextField: {\n    gridColumnStart: 1,\n    gridColumnEnd: 3,\n  },\n  billNo: {\n    gridColumn: 4,\n  },\n  switchHolder: {\n    gridColumn: 3,\n    justifySelf: \"end\",\n\n    \"& .MuiFormControlLabel-root\": {\n      margin: 0,\n    },\n  },\n  auxiliaryRow: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n    margin: \"2rem auto 1rem auto\",\n\n    \"& .MuiOutlinedInput-input\": {\n      padding: \"8px\",\n    },\n\n    \"& .MuiButtonBase-root\": {\n      padding: \"2px !important\",\n    },\n\n    \"& .MuiOutlinedInput-adornedEnd\": {\n      paddingRight: \"3px\",\n    },\n\n    \"& #date-picker-inline-label\": {\n      transform: \"translate(14px, 10px) scale(1)\",\n    },\n  },\n}));\n\nconst validationSchema = yup.object({\n  customer: yup.object({\n    customerName: yup.string().required(),\n    customerGroup: yup.string().nullable(),\n    city: yup.string().nullable(),\n    info: yup.string().nullable(),\n    firstPerson: yup.string().trim().max(25).nullable(),\n    firstPhone: yup.string().max(10).min(10).nullable(),\n    firstEmail: yup.string().email().nullable(),\n    secondPerson: yup.string().trim().max(25).nullable(),\n    secondPhone: yup.string().max(10).min(10).nullable(),\n    secondEmail: yup.string().email().nullable(),\n    thirdPerson: yup.string().trim().max(25).nullable(),\n    thirdPhone: yup.string().max(10).min(10).nullable(),\n    thirdEmail: yup.string().email().nullable(),\n  }),\n});\n\nexport default function CustomerForm() {\n  const classes = useStyles();\n  const customerModalState = useSelector((store) => store.showCustomerModal);\n  const saveCustomerQuery = useSaveCustomer();\n  const dispatch = useDispatch();\n  const [showSavedInfo, setShowSavedInfo] = React.useState({\n    success: false,\n    error: false,\n  });\n\n  const handleClose = () => {\n    setShowSavedInfo({success: false, error: false});\n  };\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={customerModalState.show}\n        onClose={() => dispatch(CLOSE_CUSTOMER_MODAL())}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={customerModalState.show}>\n          <div className={classes.paper}>\n            <Formik\n              validateOnChange={false}\n              validateOnMount={false}\n              validateOnBlur={false}\n              initialValues={{customer: customerModalState.customer}}\n              onSubmit={(form) => {\n                saveCustomerQuery.mutate({\n                  customer: form.customer,\n                  setStatus: setShowSavedInfo,\n                });\n              }}\n              validationSchema={validationSchema}\n            >\n              {({values, errors, validateField}) => (\n                <Form>\n                  <Typography className={classes.h2} component=\"h2\" variant=\"h5\">\n                    {customerModalState.customer.customerName\n                      ? customerModalState.customer.customerName\n                      : \"Новий замовник\"}\n                  </Typography>\n                  <div className={`row__one ${classes.rowOne}`}>\n                    <Field\n                      className={classes.longTextField}\n                      name=\"customer.customerName\"\n                      label=\"Назва замовника\"\n                      error={errors?.customer?.customerName}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.customerGroup\"\n                      label=\"Група\"\n                      error={errors?.customer?.customerGroup}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      className={classes.longTextField}\n                      name=\"customer.info\"\n                      label=\"Примітка\"\n                      error={errors?.customer?.info}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.city\"\n                      label=\"Місто\"\n                      error={errors?.customer?.city}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                  </div>\n\n                  <div className={`${classes.rowTwo} row__two`}>\n                    <Field\n                      name=\"customer.firstPerson\"\n                      label=\"Конт. Особа 1\"\n                      error={errors?.customer?.firstPerson}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.firstPhone\"\n                      label=\"Телефон (без +38)\"\n                      error={errors?.customer?.firstPhone}\n                      validator={validateField}\n                      component={InputField}\n                      phone={true}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.firstEmail\"\n                      label=\"Email\"\n                      error={errors?.customer?.firstEmail}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n\n                    <Field\n                      name=\"customer.secondPerson\"\n                      label=\"Конт. Особа 2\"\n                      error={errors?.customer?.secondPerson}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.secondPhone\"\n                      label=\"Телефон (без +38)\"\n                      error={errors?.customer?.secondPhone}\n                      validator={validateField}\n                      component={InputField}\n                      phone={true}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.secondEmail\"\n                      label=\"Email\"\n                      error={errors?.customer?.secondEmail}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n\n                    <Field\n                      name=\"customer.thirdPerson\"\n                      label=\"Конт. Особа 3\"\n                      error={errors?.customer?.thirdPerson}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.thirdPhone\"\n                      label=\"Телефон (без +38)\"\n                      error={errors?.customer?.thirdPhone}\n                      validator={validateField}\n                      component={InputField}\n                      phone={true}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.thirdEmail\"\n                      label=\"Email\"\n                      error={errors?.customer?.thirdEmail}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                  </div>\n\n                  <div className={classes.buttons}>\n                    <Button\n                      style={{gridColumn: 2}}\n                      color=\"primary\"\n                      variant=\"contained\"\n                      className={classes.button}\n                      disabled={saveCustomerQuery.isLoading}\n                      type=\"submit\"\n                    >\n                      Зберегти замовника\n                    </Button>\n\n                    {(values.customer.customerId && (\n                      <div className={classes.switchHolder}>\n                        <SwitchControl\n                          name=\"customer.debtor\"\n                          label=\"Боржник\"\n                          isChecked={values.customer.debtor}\n                          disabled={saveCustomerQuery.isLoading}\n                        />\n                      </div>\n                    )) ||\n                      null}\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </Fade>\n      </Modal>\n      <InfoMessage\n        type=\"success\"\n        open={showSavedInfo.success}\n        onClose={handleClose}\n        message=\"Замовинка успішно збережено.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showSavedInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні замовника. Можливо клієнт зі схожою інформацією вже існує.\"\n      />\n    </div>\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\nimport {useDispatch} from \"react-redux\";\nimport {CLOSE_CUSTOMER_MODAL} from \"../context/actions\";\n\nexport default function useSaveCustomer() {\n  const queryClient = useQueryClient();\n  const dispatch = useDispatch();\n\n  return useMutation(\n    (params) =>\n      params.customer.customerId === 0\n        ? Axios.post(\"/api/customers/\", params.customer)\n        : Axios.put(\"/api/customers/\", params.customer),\n    {\n      onSuccess: (_, passedParams) => {\n        queryClient.invalidateQueries(\"customers\");\n        dispatch(CLOSE_CUSTOMER_MODAL());\n        passedParams.setStatus({success: true, error: false});\n      },\n      onError: (_, passedParams) => {\n        console.log(_);\n        passedParams.setStatus({success: false, error: true});\n      },\n    }\n  );\n}\n","import {Link, Typography} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useHistory} from \"react-router-dom\";\nimport \"./Header.css\";\nimport * as AuthService from \"./services/auth-service\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  logoutButton: {\n    padding: 0,\n  },\n  logoutHolder: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"baseline\",\n    whiteSpace: \"nowrap\",\n  },\n  tabs: {\n    margin: \"0 auto\",\n    cursor: \"pointer\",\n  },\n}));\n\nexport default function Header({radius}) {\n  const classes = useStyles();\n  const history = useHistory();\n  const queryClient = useQueryClient();\n  const [value, setValue] = React.useState(0);\n\n  const logout = () => {\n    AuthService.unauthorize();\n    history.push(\"/login\");\n  };\n\n  const changeView = (_e, newValue) => {\n    setValue(newValue);\n    switch (newValue) {\n      case 0:\n        history.push(\"/\");\n        break;\n      case 1:\n        queryClient.invalidateQueries(\"customers\");\n        history.push(\"/clients\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"header__container\">\n        <div\n          className=\"menu\"\n          style={{borderBottomLeftRadius: radius, borderBottomRightRadius: radius}}\n        >\n          <Toolbar>\n            <Link color=\"inherit\" href=\"https://psdruk.com.ua/\">\n              <img width=\"110\" height=\"50\" src=\"/img/logo.svg\" alt=\"logo\" />\n            </Link>\n            <Tabs\n              className={classes.tabs}\n              value={value}\n              onChange={changeView}\n              TabIndicatorProps={{style: {background: \"white\"}}}\n              indicatorColor=\"secondary\"\n              aria-label=\"scrollable auto tabs example\"\n            >\n              <Tab label=\"Головна\" />\n              {/* <Tab label=\"Сортування\" /> */}\n              <Tab label=\"Клієнти\" />\n            </Tabs>\n\n            <div className={classes.logoutHolder}>\n              <Typography variant=\"body1\" style={{fontWeight: 300}}>\n                Вітаємо, <b>{localStorage.getItem(\"username\")}</b>\n              </Typography>\n              <Button color=\"inherit\" onClick={logout} className={classes.logoutButton}>\n                Вийти\n              </Button>\n            </div>\n          </Toolbar>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport React, {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\";\nimport {SET_AUTHENTICATED} from \"./context/actions\";\nimport InfoMessage from \"./InfoMessage\";\nimport * as AuthService from \"./services/auth-service\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://psdruk.com.ua/\">\n        psdruk.com.ua\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [form, setForm] = useState({username: \"\", password: \"\"});\n  const [showNotYetVerified, setShowNotYetVerified] = useState(false);\n  const [showWrongCredentials, setShowWrongCredentials] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  const setUsername = (e) => setForm({...form, username: e.target.value});\n  const setPassword = (e) => setForm({...form, password: e.target.value});\n\n  const handleClose = () => {\n    setShowNotYetVerified(false);\n    setShowWrongCredentials(false);\n  };\n\n  const submitCredentials = (e) => {\n    e.preventDefault();\n    setIsDisabled(true);\n    AuthService.authorize(form)\n      .then((data) => {\n        if (data.roles.includes(\"ROLE_CUSTOMER\")) {\n          setShowNotYetVerified(true);\n        } else {\n          dispatch(\n            SET_AUTHENTICATED(data.token, data.employee, data.username, data.roles)\n          );\n          history.push(\"/\");\n        }\n      })\n      .catch(() => {\n        setIsDisabled(false);\n        setShowWrongCredentials(true);\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <form className={classes.form} onSubmit={submitCredentials}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            onChange={setUsername}\n            label=\"Логін\"\n            name=\"email\"\n            autoComplete=\"off\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Пароль\"\n            type=\"password\"\n            id=\"password\"\n            onChange={setPassword}\n            autoComplete=\"off\"\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled={isDisabled}\n          >\n            Вхід\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"http://plg-site.32server.in.ua/\" variant=\"body2\">\n                Забули пароль?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"http://plg-site.32server.in.ua/\" variant=\"body2\">\n                {\"Зареєструватись\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n      <InfoMessage\n        type=\"error\"\n        open={showNotYetVerified}\n        onClose={handleClose}\n        message=\"Аккаунт ще не пройшов перевірку.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showWrongCredentials}\n        onClose={handleClose}\n        message=\"Неправильні дані для входу.\"\n      />\n    </Container>\n  );\n}\n","import {makeStyles, Tooltip} from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStylesTooltip = makeStyles((theme) => ({\n  arrow: {\n    color: theme.palette.primary.main,\n  },\n  tooltip: {\n    fontSize: 12,\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nfunction ToolTip({title, value, placement = \"right-start\", children, ...props}) {\n  const classes = useStylesTooltip();\n\n  return (\n    <Tooltip title={title} placement={placement} arrow classes={classes} {...props}>\n      <div className=\"value\" style={{lineHeight: \"1.43\"}}>\n        {children}\n      </div>\n    </Tooltip>\n  );\n}\n\nexport default ToolTip;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  InputAdornment,\n  Link,\n  OutlinedInput,\n  Typography,\n} from \"@material-ui/core\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Modal from \"@material-ui/core/Modal\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport * as yup from \"yup\";\nimport ComboBox from \"./ComboBox\";\nimport DatePicker from \"./DatePicker\";\nimport useDeleteOrder from \"./hooks/useDeleteOrder\";\nimport useUpdateOrder from \"./hooks/useUpdateOrder\";\nimport InfoMessage from \"./InfoMessage\";\nimport InputField from \"./InputField\";\nimport ToolTip from \"./ToolTip\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"4px\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4),\n    width: \"55%\",\n  },\n  link: {\n    cursor: \"pointer\",\n    color: theme.palette.primary.main,\n  },\n  h2: {\n    top: \"-.9rem\",\n    position: \"relative\",\n    marginTop: 0,\n    textAlign: \"center\",\n    fontWeight: \"400\",\n    gridColumnEnd: 4,\n    gridColumnStart: 2,\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  clearButton: {\n    backgroundColor: \"rgb(210,0,10)\",\n    color: \"white\",\n    marginRight: \"1rem\",\n\n    \"&:hover\": {\n      backgroundColor: \"rgb(190,0,10)\",\n    },\n  },\n  rowOne: {\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n  },\n  rowTwo: {\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr\",\n  },\n  billNo: {\n    gridColumn: 4,\n  },\n  auxiliaryRow: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n    margin: \"2rem auto 1rem auto\",\n\n    \"& .MuiOutlinedInput-input\": {\n      padding: \"8px\",\n    },\n\n    \"& .MuiButtonBase-root\": {\n      padding: \"2px !important\",\n    },\n\n    \"& .MuiOutlinedInput-adornedEnd\": {\n      paddingRight: \"3px\",\n    },\n\n    \"& #date-picker-inline-label\": {\n      transform: \"translate(14px, 10px) scale(1)\",\n    },\n  },\n}));\n\nconst validationSchema = yup.object({\n  order: yup.object({\n    entrepreneur: yup.object().required(),\n    customer: yup.object().required(),\n    date: yup.date().required(),\n    orderType: yup.object().required(),\n    orderKind: yup.object().required(),\n    billNo: yup.number().lessThan(2000000000).positive().min(0),\n    width: yup.number().lessThan(2000000000).positive().min(0).required(),\n    height: yup.number().lessThan(2000000000).positive().min(0).required(),\n    amount: yup.number().lessThan(2000000000).positive().min(0).required(),\n    price: yup.number().lessThan(2000000000).positive().min(0).required(),\n    fees: yup.number().lessThan(2000000000).positive().min(0).required(),\n    finalSum: yup.number().lessThan(2000000000).positive().min(0).required(),\n    comment: yup.string().trim().max(255).required(),\n    payLog: yup.string(),\n  }),\n});\n\nexport default function EditForm({user, roles, order}) {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const deleteQuery = useDeleteOrder();\n  const updateOrderQuery = useUpdateOrder();\n  const [open, setOpen] = React.useState(false);\n  const [showDeleteError, setShowDeleteError] = React.useState(false);\n  const [showSaveError, setShowSaveError] = React.useState(false);\n  const [showConfirmation, setShowConfirmation] = React.useState(false);\n  const toggle = () => setOpen(!open);\n\n  const onDeleteOrder = (orderId) => {\n    setShowConfirmation(false);\n    deleteQuery.mutate({\n      orderId: orderId,\n      setStatus: setShowSaveError,\n      setShowModal: setOpen,\n    });\n  };\n\n  const isNotMyOrder = () => {\n    return order.employee.employeeID !== user.employeeID;\n  };\n\n  const amI = (role) => {\n    return roles.includes(role);\n  };\n\n  const isDisabledFor = (role = \"ROLE_ADMIN\") => {\n    if (amI(\"ROLE_ADMIN\")) return false;\n    return amI(role) ? false : isNotMyOrder();\n  };\n\n  return (\n    <div>\n      <ToolTip title={order.employee.name}>\n        <Link className={classes.link} onClick={toggle}>\n          <b>{order.orderId}</b>\n        </Link>\n      </ToolTip>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={toggle}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <Formik\n              validateOnChange={true}\n              validateOnMount={false}\n              validateOnBlur={false}\n              initialValues={{order: order}}\n              onSubmit={(form) => {\n                updateOrderQuery.mutate({\n                  order: form.order,\n                  toggleModal: toggle,\n                  setStatus: setShowSaveError,\n                });\n              }}\n              validationSchema={validationSchema}\n            >\n              {({values, errors, validateField}) => (\n                <Form>\n                  <InfoMessage\n                    type=\"error\"\n                    open={showDeleteError}\n                    onClose={() => setShowDeleteError(false)}\n                    message=\"Помилка при видаленні замовлення.\"\n                  />\n                  <InfoMessage\n                    type=\"error\"\n                    open={showSaveError}\n                    onClose={() => setShowSaveError(false)}\n                    message=\"Помилка при збереженні замовлення.\"\n                  />\n                  <div className={classes.auxiliaryRow}>\n                    <Field\n                      component={DatePicker}\n                      label=\"Дата\"\n                      name=\"order.date\"\n                      error={errors?.order?.date}\n                      validator={validateField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                    <Typography className={classes.h2} component=\"h2\" variant=\"h5\">\n                      Замовленя № <b>{order.orderId}</b>\n                    </Typography>\n                    <Field\n                      className={classes.billNo}\n                      name=\"order.billNo\"\n                      label=\"№ Рахунку\"\n                      disableCalculation={true}\n                      error={errors?.order?.billNo}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={\n                        updateOrderQuery.isLoading || isDisabledFor(\"ROLE_MANAGER\")\n                      }\n                    />\n                  </div>\n\n                  <div className={`${classes.rowOne} row__one`}>\n                    <Field\n                      name=\"order.entrepreneur\"\n                      label=\"Підприємець\"\n                      error={errors?.order?.entrepreneur}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                      getName={(option) => option.fullName || \"\"}\n                      options={queryClient.getQueryData(\"entrepreneurs\")}\n                    />\n                    <Field\n                      name=\"order.customer\"\n                      label=\"Замовник\"\n                      error={errors?.order?.customer}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                      getName={(option) => option.customerName || \"\"}\n                      options={queryClient.getQueryData(\"customers\")}\n                    />\n                    <Field\n                      name=\"order.orderType\"\n                      label=\"Вид\"\n                      error={errors?.order?.orderType}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                      getName={(option) => option.typeName || \"\"}\n                      options={queryClient.getQueryData(\"orderTypes\")}\n                    />\n                    <Field\n                      name=\"order.orderKind\"\n                      label=\"Тип\"\n                      error={errors?.order?.orderKind}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                      getName={(option) => option.kindName || \"\"}\n                      options={values.order?.orderType?.orderKinds || []}\n                    />\n                  </div>\n\n                  <div className={`${classes.rowTwo} row__two`}>\n                    <Field\n                      name=\"order.width\"\n                      label=\"Ширина\"\n                      error={errors?.order?.width}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                    <Field\n                      name=\"order.height\"\n                      label=\"Висота\"\n                      error={errors?.order?.height}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                    <Field\n                      name=\"order.amount\"\n                      label=\"Кількість\"\n                      error={errors?.order?.amount}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                    <OutlinedInput\n                      id=\"metrics\"\n                      size=\"small\"\n                      variant=\"outlined\"\n                      value={\n                        (\n                          ((values.order.width * values.order.height) / 1000000) *\n                          values.order.amount\n                        ).toFixed(3) || 0.0\n                      }\n                      endAdornment={\n                        <InputAdornment position=\"end\">м²</InputAdornment>\n                      }\n                      disabled\n                    />\n                    <Field\n                      name=\"order.price\"\n                      label=\"Ціна\"\n                      error={errors?.order?.price}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                    <Field\n                      name=\"order.fees\"\n                      label=\"Послуги\"\n                      error={errors?.order?.fees}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                    <Field\n                      name=\"order.finalSum\"\n                      label=\"Сума\"\n                      error={errors?.order?.finalSum}\n                      validator={validateField}\n                      component={InputField}\n                      disableCalculation={true}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                  </div>\n\n                  <div className=\"row__three\">\n                    <Field\n                      name=\"order.comment\"\n                      label=\"Опис замовлення\"\n                      error={errors?.order?.comment}\n                      validator={validateField}\n                      numeric={false}\n                      component={InputField}\n                      disabled={\n                        updateOrderQuery.isLoading || isDisabledFor(\"ROLE_MANAGER\")\n                      }\n                    />\n                  </div>\n\n                  <div className=\"row__three\">\n                    <Field\n                      name=\"order.payLog\"\n                      label=\"Історія оплат\"\n                      error={errors?.order?.payLog}\n                      validator={validateField}\n                      numeric={false}\n                      multiline={true}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                  </div>\n\n                  <div className={classes.buttons}>\n                    <Button\n                      className={classes.clearButton}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                      variant=\"contained\"\n                      type=\"button\"\n                      onClick={() => setShowConfirmation(true)}\n                    >\n                      Видалити\n                    </Button>\n                    <Button\n                      color=\"primary\"\n                      variant=\"contained\"\n                      className={classes.button}\n                      disabled={\n                        updateOrderQuery.isLoading || isDisabledFor(\"ROLE_MANAGER\")\n                      }\n                      type=\"submit\"\n                    >\n                      Зберегти замовлення\n                    </Button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </Fade>\n      </Modal>\n      <Dialog\n        fullScreen={false}\n        open={showConfirmation}\n        onClose={() => setShowConfirmation(false)}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          Ви дійсно бажаєте видалити це замовлення?\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Повернути його зміст та оплати буде неможливо. Підтвердити?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            autoFocus\n            onClick={() => setShowConfirmation(false)}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Ні\n          </Button>\n          <Button\n            onClick={() => onDeleteOrder(order.orderId)}\n            variant=\"contained\"\n            className={classes.clearButton}\n            autoFocus\n          >\n            Так\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useDeleteOrder() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.delete(\"/api/orders/\" + params.orderId), {\n    onError: (_, params) => {\n      params.setStatus(true);\n    },\n    onSuccess: (_, params) => {\n      queryClient.invalidateQueries([\"customers\"]);\n      queryClient.invalidateQueries([\"orders\"]);\n      params.setShowModal(false);\n    },\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useUpdateOrder() {\n  let backupOrder = null;\n  const queryClient = useQueryClient();\n  return useMutation(\n    (updateObject) => Axios.put(\"/api/orders/\", updateObject.order),\n    {\n      onMutate: (mutationObject) => {\n        queryClient\n          .getQueryCache()\n          .findAll([\"orders\", 1])\n          .forEach((query) => {\n            queryClient.setQueryData(\n              query.queryKey,\n              query.state.data.map((cachedOrder) => {\n                if (cachedOrder.orderId === mutationObject.order.orderId) {\n                  backupOrder = cachedOrder;\n                  return mutationObject.order;\n                } else return cachedOrder;\n              })\n            );\n          });\n      },\n      onError: (_error, params) => {\n        params.setStatus(true);\n        queryClient\n          .getQueryCache()\n          .findAll([\"orders\", 1])\n          .forEach((query) => {\n            queryClient.setQueryData(\n              query.queryKey,\n              query.state.data.map((cachedOrder) => {\n                if (cachedOrder.orderId === backupOrder.orderId) return backupOrder;\n                else return cachedOrder;\n              })\n            );\n          });\n      },\n      onSuccess: (_, updateObject) => {\n        queryClient.invalidateQueries([\"customers\"]);\n        queryClient.invalidateQueries([\"orders\"]);\n        updateObject.toggleModal();\n      },\n    }\n  );\n}\n","import Axios from \"axios\";\n\nexport const fixOrders = (data, id = 0) => {\n  return data.map((row) => {\n    if (row.orderId === 0) {\n      row.id = id;\n      row.orderId = id;\n    } else {\n      row.id = row.orderId;\n    }\n    !row.date ? (row.date = new Date()) : (row.date = new Date(row.date));\n    return row;\n  });\n};\n\nexport const fetchRecentOrders = async () => {\n  const response = await Axios.get(\"/api/orders/\");\n  const data = response.data;\n\n  if (data) return fixOrders(data);\n  return [];\n};\n\nexport const sortOrders = async (selections) => {\n  const form = {\n    orderId: null,\n    customer: null,\n    entrepreneur: null,\n    employee: null,\n    status: null,\n    dateFrom: null,\n    dateTill: null,\n    payDateFrom: null,\n    payDateTill: null,\n    receiver: null,\n    orderKind: null,\n    orderType: null,\n    details: \"\",\n  };\n\n  const sendForm = {\n    ...form,\n    orderId: selections?.orderId,\n    customer: selections?.customer,\n    entrepreneur: selections?.entrepreneur,\n    employee: selections?.employee,\n    status: selections?.status,\n    dateFrom: selections?.dateFrom,\n    dateTill: selections?.dateTill,\n    payDateFrom: selections?.payDateFrom,\n    payDateTill: selections?.payDateTill,\n    receiver: selections?.receiver,\n    orderKind: selections?.orderKind,\n    orderType: selections?.orderType,\n    details: selections?.details,\n  };\n\n  const response = await Axios.post(\"/api/orders/filter/\", sendForm);\n  const data = response.data;\n\n  if (data) return fixOrders(data);\n  return [];\n};\n","import {Button} from \"@material-ui/core\";\nimport Popper from \"@material-ui/core/Popper\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport useSetStatus from \"./hooks/useSetStatus\";\n\nconst sources = [\n  \"\",\n  \"img/on-agreement.svg\",\n  \"img/in-progress.svg\",\n  \"img/ready.svg\",\n  \"img/completed.svg\",\n];\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    backgroundColor: \"#fff\",\n    boxShadow: \"0 0 14px 2px rgba(0, 0, 0, 0.3)\",\n    borderRadius: \"4px\",\n  },\n  acceptanceButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#fff\",\n    border: \"1px solid\",\n    borderColor: \"#df16a0\",\n    color: \"#df16a0\",\n\n    \"&:hover\": {\n      color: \"#fff\",\n      backgroundColor: \"#df16a0\",\n    },\n  },\n  inWorkButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#fff\",\n    border: \"1px solid\",\n    borderColor: theme.palette.primary.main,\n    color: theme.palette.primary.main,\n\n    \"&:hover\": {\n      color: \"#fff\",\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n  readyButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#fff\",\n    border: \"1px solid\",\n    borderColor: \"#28a745\",\n    color: \"#28a745\",\n\n    \"&:hover\": {\n      color: \"#fff\",\n      backgroundColor: \"#28a745\",\n    },\n  },\n  completedButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#28a745\",\n    border: \"1px solid\",\n    borderColor: \"#28a745\",\n    color: \"#fff\",\n\n    \"&:hover\": {\n      borderColor: \"#218838\",\n      backgroundColor: \"#218838\",\n    },\n  },\n  popper: {\n    zIndex: 1,\n    marginLeft: \"0.5rem\",\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: \"-0.9em\",\n      marginTop: \"0.45rem\",\n      height: \"3em\",\n      width: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 1em 1em 0\",\n        borderColor: `transparent ${theme.palette.background.paper} transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: \"-0.9em\",\n      marginTop: \"0.45rem\",\n      height: \"3em\",\n      width: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 0 1em 1em\",\n        borderColor: `transparent transparent transparent ${theme.palette.background.paper}`,\n      },\n    },\n  },\n  arrow: {\n    position: \"absolute\",\n    fontSize: 7,\n    width: \"3em\",\n    height: \"3em\",\n    \"&::before\": {\n      content: '\"\"',\n      margin: \"auto\",\n      display: \"block\",\n      width: 0,\n      height: 0,\n      borderStyle: \"solid\",\n    },\n  },\n}));\n\nfunction StatusPopper({orderId, status}) {\n  const classes = useStyles();\n  const statusQuery = useSetStatus();\n  const anchorRef = React.useRef(null);\n  const [arrow] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const id = open ? \"scroll-playground\" : null;\n\n  const toggle = () => setOpen((prevOpen) => !prevOpen);\n\n  return (\n    <>\n      <img\n        className={classes.img}\n        ref={anchorRef}\n        src={sources[status]}\n        width=\"19\"\n        height=\"19\"\n        alt=\"on-agreement\"\n        aria-describedby={id}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={toggle}\n      />\n\n      <Popper\n        id={id}\n        open={open}\n        anchorEl={anchorRef.current}\n        placement=\"right\"\n        disablePortal={true}\n        className={classes.popper}\n        modifiers={{\n          flip: {\n            enabled: true,\n          },\n          preventOverflow: {\n            enabled: true,\n            boundariesElement: \"scrollParent\",\n          },\n          arrow: {\n            enabled: true,\n            element: arrowRef,\n          },\n        }}\n      >\n        {arrow ? <span className={classes.arrow} ref={setArrowRef} /> : null}\n        <div className={classes.container}>\n          <Button\n            className={classes.acceptanceButton}\n            onClick={() =>\n              statusQuery.mutate({orderId: orderId, statusId: 1, toggle: toggle})\n            }\n          >\n            На погодженні\n          </Button>\n          <br />\n          <Button\n            className={classes.inWorkButton}\n            onClick={() =>\n              statusQuery.mutate({orderId: orderId, statusId: 2, toggle: toggle})\n            }\n          >\n            В роботі\n          </Button>\n          <br />\n          <Button\n            className={classes.readyButton}\n            onClick={() =>\n              statusQuery.mutate({orderId: orderId, statusId: 3, toggle: toggle})\n            }\n          >\n            Готове\n          </Button>\n          <br />\n          <Button\n            className={classes.completedButton}\n            o\n            onClick={() =>\n              statusQuery.mutate({orderId: orderId, statusId: 4, toggle: toggle})\n            }\n          >\n            Віддано\n          </Button>\n        </div>\n      </Popper>\n    </>\n  );\n}\n\nexport default StatusPopper;\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSetStatus() {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (params) =>\n      Axios.get(\"/api/orders/statuses/\" + params.orderId + \"/\" + params.statusId),\n    {\n      onSuccess: (_, params) => {\n        queryClient.invalidateQueries(\"orders\");\n        params.toggle();\n      },\n    }\n  );\n}\n","import {Button, TextField} from \"@material-ui/core\";\nimport {XGrid} from \"@material-ui/x-grid\";\nimport React, {useState} from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useSelector} from \"react-redux\";\nimport EditForm from \"./EditForm\";\nimport useExportOrders from \"./hooks/useExportOrders\";\nimport useOrders from \"./hooks/useOrders\";\nimport StatusPopper from \"./StatusPopper\";\nimport \"./Table.css\";\nimport ToolTip from \"./ToolTip\";\n\nfunction strcmp(a, b) {\n  return a.localeCompare(b);\n}\n\nconst formatDate = (date) =>\n  new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: false,\n  }).format(date);\n\nexport default function Table({tableID}) {\n  const [sortOrder, setSortOrder] = useState({orderId: \"desc\"});\n  const [q, setQ] = useState(\"\");\n  const sortState = useSelector((state) => state.sortSelections);\n  const authState = useSelector((state) => state.auth);\n  const ordersQuery = useOrders(tableID, sortState[sortState.active]);\n  const queryClient = useQueryClient();\n  const exportQuery = useExportOrders();\n\n  const columns = (orderBy) => {\n    const columns = [\n      {\n        field: \"orderId\",\n        type: \"number\",\n        headerName: \"№\",\n        flex: 0.8,\n        renderCell: (params) => (\n          <EditForm user={authState.loggedUser} roles={authState.roles} order={params.row} />\n        ),\n      },\n      {\n        field: \"billNo\",\n        type: \"number\",\n        headerName: \"Рах\",\n        flex: 0.6,\n      },\n      {\n        field: \"customer\",\n        headerName: \"Замовник\",\n        flex: 2.2,\n        sortComparator: (c1, c2) => strcmp(c1.customerName, c2.customerName),\n        valueFormatter: (param) => param.value.customerName,\n        renderCell: (params) =>\n          params.value.info ? (\n            <ToolTip title={params.value.info}>\n              <b>{params.value.customerName}</b>\n            </ToolTip>\n          ) : (\n            <b>{params.value.customerName}</b>\n          ),\n      },\n      {\n        field: \"date\",\n        type: \"dateTime\",\n        headerName: \"Дата\",\n        flex: 1.2,\n        valueFormatter: (param) => formatDate(param.value),\n      },\n      {\n        field: \"width\",\n        type: \"number\",\n        headerName: \"Ширина\",\n        valueFormatter: (row) => row.value,\n        flex: 1.09,\n      },\n      {\n        field: \"height\",\n        type: \"number\",\n        headerName: \"Висота\",\n        valueFormatter: (row) => row.value,\n        flex: 1,\n      },\n      {\n        field: \"amount\",\n        type: \"number\",\n        headerName: \"К-сть\",\n        valueFormatter: (row) => row.value,\n        flex: 0.85,\n      },\n      {\n        field: \"m2\",\n        type: \"number\",\n        headerName: \"М2\",\n        valueFormatter: (row) => Number.parseFloat(row.value).toFixed(3),\n        flex: 0.9,\n      },\n      {\n        field: \"price\",\n        type: \"number\",\n        headerName: \"Ціна\",\n        valueFormatter: (row) => row.value,\n        flex: 0.8,\n      },\n      {\n        field: \"fees\",\n        type: \"number\",\n        headerName: \"Послуги\",\n        valueFormatter: (row) => row.value,\n        flex: 1,\n      },\n      {\n        field: \"finalSum\",\n        type: \"number\",\n        headerName: \"Сума\",\n        flex: 0.9,\n        renderCell: (params) => <b> {params.value} </b>,\n      },\n      {\n        field: \"paid\",\n        headerName: \"Оплата\",\n        sortable: false,\n        flex: 1.1,\n        cellClassName: \"centered\",\n        renderCell: (params) => {\n          if (params.row.paySum === params.row.finalSum) {\n            return (\n              <ToolTip title={formatDate(new Date(params.row.payDate))} arrow>\n                <img src=\"img/completed.svg\" width=\"19\" height=\"19\" alt=\"paid\" />\n              </ToolTip>\n            );\n          } else if (params.row.paySum > 0)\n            return (\n              <ToolTip\n                title={params.row.paySum + \" грн, \" + formatDate(new Date(params.row.payDate))}\n                arrow\n              >\n                <img src=\"img/partly_paid.svg\" width=\"19\" height=\"19\" alt=\"partly__paid\" />\n              </ToolTip>\n            );\n        },\n      },\n      {\n        field: \"status\",\n        headerName: \"Статус\",\n        flex: 1.1,\n        cellClassName: \"centered\",\n        sortComparator: (c1, c2) => c1.id - c2.id,\n        renderCell: (params) => (\n          <StatusPopper orderId={params.row.orderId} status={params.row.status.id} />\n        ),\n      },\n      {\n        field: \"orderType\",\n        type: \"string\",\n        headerName: \"Вид\",\n        flex: 1.8,\n        sortComparator: (c1, c2) => strcmp(c1.typeName, c2.typeName),\n        valueFormatter: (param) => param.value.typeName,\n      },\n      {\n        field: \"orderKind\",\n        headerName: \"Тип\",\n        flex: 1.8,\n        sortComparator: (c1, c2) => strcmp(c1.kindName, c2.kindName),\n        valueFormatter: (param) => param.value.kindName,\n      },\n      {\n        field: \"comment\",\n        headerName: \"Опис замовлення\",\n        flex: 6,\n        sortComparator: (c1, c2) => strcmp(c1, c2),\n        renderCell: (params) => (\n          <ToolTip title={params.value} placement=\"left-start\">\n            {params.value}\n          </ToolTip>\n        ),\n      },\n    ];\n\n    Object.keys(orderBy).forEach(\n      (key) => (columns.find((column) => column.field === key).sortDirection = orderBy[key])\n    );\n    return Object.values(columns);\n  };\n\n  const filter = (rows) => {\n    return rows.filter(\n      (row) =>\n        row.orderId?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.billNo?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.customer.customerName.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        formatDate(row.date)?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.fees?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.finalSum?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.amount?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.price?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.height?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.width?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.m2?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.orderKind.kindName?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.orderType.typeName?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.comment?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1\n    );\n  };\n\n  const calculateDebt = (customer) => {\n    const data = queryClient.getQueryData(\"customers\");\n    const customerInfo = data.find((c) => c.customerId === customer.customerId);\n    const debt = ordersQuery.data.reduce((a, b) => (a += b.finalSum - b.paySum), 0);\n    return debt - customerInfo.money;\n  };\n\n  return (\n    <>\n      <TextField\n        variant=\"outlined\"\n        size=\"small\"\n        placeholder=\"Швидкий пошук\"\n        onChange={(e) => setQ(e.target.value)}\n        InputProps={{\n          endAdornment: authState.roles.includes(\"ROLE_ORDERS_EXPORTER\") && (\n            <Button\n              className=\"export-btn\"\n              variant=\"outlined\"\n              onClick={() => exportQuery.mutate(filter(ordersQuery.data))}\n            >\n              Експорт\n            </Button>\n          ),\n        }}\n      />\n\n      <div className=\"x-grid\">\n        {sortState[sortState.active].customer && (\n          <div className=\"action__bar__stat\">\n            <label>\n              Сума боргу : <b>{calculateDebt(sortState[sortState.active].customer)}</b> грн\n            </label>\n          </div>\n        )}\n        <div className=\"frame\">\n          <div className=\"grid-holder\">\n            <XGrid\n              rows={filter(ordersQuery.data)}\n              columns={columns(sortOrder)}\n              onSortModelChange={(e) => {\n                let sortModel = {};\n                if (e.sortModel.length > 0) {\n                  sortModel[e.sortModel[0]?.field] = e.sortModel[0]?.sort;\n                } else {\n                  sortModel[\"orderId\"] = \"desc\";\n                }\n                setSortOrder(sortModel);\n              }}\n              loading={ordersQuery.isLoading}\n              rowHeight={35}\n              headerHeight={35}\n              pagination={true}\n              disableSelectionOnClick={true}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import {useQuery} from \"react-query\";\nimport * as OrderService from \".././services/orders-service\";\n\nexport default function useOrders(tableID, sortState) {\n  return useQuery(\n    [\"orders\", tableID, sortState],\n    () => OrderService.sortOrders(sortState),\n    {\n      initialData: [],\n      initialStale: true,\n      keepPreviousData: false,\n    }\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation} from \"react-query\";\n\nexport default function useExportOrders() {\n  return useMutation(\n    (orders) =>\n      Axios.post(\n        \"api/orders/export/\",\n        {orders: orders},\n        {\n          responseType: \"arraybuffer\",\n        }\n      ),\n    {\n      onError: (_, params) => {\n        params.setStatus({success: false, error: true});\n      },\n      onSuccess: (val, _) => {\n        const blob = new Blob([val.data], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        });\n\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n          window.navigator.msSaveOrOpenBlob(blob);\n          return;\n        }\n        const data = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = data;\n        link.download = \"Список замовлень.xlsx\";\n        link.dispatchEvent(\n          new MouseEvent(\"click\", {bubbles: true, cancelable: true, view: window})\n        );\n      },\n    }\n  );\n}\n","import {useEffect, useState} from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport ActionBar from \"./ActionBar\";\nimport \"./App.css\";\nimport ClientsTable from \"./ClientsTable\";\nimport CustomerForm from \"./CustomerForm\";\nimport Header from \"./Header\";\nimport useCELinks from \"./hooks/useCELinks\";\nimport useCPLinks from \"./hooks/useCPLinks\";\nimport useCustomers from \"./hooks/useCustomers\";\nimport useEntrepreneurs from \"./hooks/useEntrepreneurs\";\nimport useOrderTypes from \"./hooks/useOrderTypes\";\nimport useStatuses from \"./hooks/useStatuses\";\nimport Login from \"./Login\";\nimport Table from \"./Table\";\n\nfunction App() {\n  const [tableHeight, setTableHeight] = useState(0);\n\n  useCustomers();\n  useEntrepreneurs();\n  useOrderTypes();\n  useStatuses();\n  useCELinks();\n  useCPLinks();\n\n  useEffect(() => {\n    if (!tableHeight) {\n      setTableHeight(\n        window.innerHeight -\n          (32 +\n            document.getElementsByClassName(\"action__bar__button\")[0]?.clientHeight +\n            document.getElementsByClassName(\"main__header\")[0]?.clientHeight)\n      );\n    }\n  }, [tableHeight]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/\">\n            <div className=\"main\">\n              <div className=\"main__header\">\n                <Header radius={0} />\n                <ActionBar />\n              </div>\n              <div\n                className=\"main__table\"\n                style={{\n                  height: tableHeight,\n                }}\n              >\n                <Table tableID={1} />\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/clients\">\n            <div className=\"clients\">\n              <div className=\"clients__header\">\n                <Header radius={4} />\n              </div>\n              <div\n                className=\"clients__table\"\n                style={{\n                  height:\n                    window.innerHeight -\n                    (62 + document.getElementsByClassName(\"clients__header\")[0]?.clientHeight),\n                }}\n              >\n                <ClientsTable />\n              </div>\n            </div>\n          </Route>\n          {/* <Route path=\"/sort\">\n            <Header />\n            <Table tableID={2} />\n          </Route> */}\n        </Switch>\n      </Router>\n      <CustomerForm />\n    </div>\n  );\n}\n\nexport default App;\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useCustomers() {\n  return useQuery(\"customers\", CustomerService.fetchCustomers, {\n    refetchOnWindowFocus: false,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useEntrepreneurs() {\n  return useQuery(\"entrepreneurs\", CustomerService.fetchEntrepreneurs, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n    refetchOnWindowFocus: false,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useOrderTypes() {\n  return useQuery(\"orderTypes\", CustomerService.fetchOrderTypes, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useStatuses() {\n  return useQuery(\"statuses\", CustomerService.fetchStatuses, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n    refetchOnWindowFocus: false,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useCELinks() {\n  return useQuery(\"ce-links\", CustomerService.fetchCELinks, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useCPLinks() {\n  return useQuery(\"cp-links\", CustomerService.fetchCPLinks, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import { Box, Paper, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport \"./NotFound.css\";\n\nfunction NotFound() {\n  return (\n    <Paper elevation={3} className=\"blue-holder\">\n      <Paper elevation={3} className=\"info\">\n        <div className=\"blank-page\">\n          <Typography variant=\"h4\" component=\"h3\">\n            Сторінка не знайдена\n          </Typography>{\" \"}\n          <Typography variant=\"h2\" component=\"h3\">\n            404\n          </Typography>\n        </div>\n        <Box mt={8}>\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {\"Copyright © \"}\n            <Link color=\"inherit\" href=\"https://psdruk.com.ua/\">\n              psdruk.com.ua\n            </Link>{\" \"}\n            {new Date().getFullYear()}\n            {\".\"}\n          </Typography>\n        </Box>\n      </Paper>\n    </Paper>\n  );\n}\n\nexport default NotFound;\n","import {Redirect, Route} from \"react-router-dom\";\nimport {SET_AUTHENTICATED} from \"./context/actions\";\nimport store from \"./context/store\";\nimport {useSelector} from \"react-redux\";\n\nexport const ProtectedRoute = ({component: Component, ...props}) => {\n  const authState = useSelector((store) => store.auth);\n  const authToken = localStorage.getItem(\"token\");\n  const username = localStorage.getItem(\"username\");\n  const roles = localStorage.getItem(\"roles\");\n  const loggedUser = JSON.parse(localStorage.getItem(\"loggedUser\"));\n\n  return (\n    <Route\n      {...props}\n      render={(props) => {\n        if (authState.isAuthenticated) {\n          return <Component {...props} />;\n        } else if (authToken) {\n          store.dispatch(SET_AUTHENTICATED(authToken, loggedUser, username, roles));\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect to={{pathname: \"/login\", state: {from: props.location}}} />\n          );\n        }\n      }}\n    />\n  );\n};\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport {formatISO} from \"date-fns\";\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\nimport {ukUA} from \"@material-ui/core/locale\";\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport {uk} from \"date-fns/locale\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {QueryCache, QueryClient, QueryClientProvider} from \"react-query\";\nimport {ReactQueryDevtools} from \"react-query/devtools\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport App from \"./App\";\nimport store from \"./context/store\";\nimport \"./index.css\";\nimport Login from \"./Login\";\nimport NotFound from \"./NotFound\";\nimport {ProtectedRoute} from \"./ProtectedRoute\";\n\nconst oldTheme = createMuiTheme(\n  {\n    palette: {\n      primary: {\n        light: \"#fff\",\n        main: \"rgba(0, 60, 170, 0.95)\",\n        dark: \"rgba(0, 40, 170, 0.95)\",\n      },\n      secondary: {\n        main: \"#f44336\",\n      },\n    },\n    typography: {\n      useNextVariants: true,\n      fontSize: 11,\n      htmlFontSize: 15,\n    },\n  },\n  ukUA\n);\n\nconst {breakpoints} = oldTheme;\nconst theme = {\n  ...oldTheme,\n  overrides: {\n    MuiInputLabel: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiInputAdornment: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiInputBase: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiTypography: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n      subtitle1: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n      body1: {\n        fontSize: 12,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 12,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 10,\n        },\n      },\n      button: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiButton: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiTab: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiSvgIcon: {\n      root: {\n        [breakpoints.down(1300)]: {\n          fontSize: 15,\n        },\n      },\n    },\n  },\n};\n\n// eslint-disable-next-line no-extend-native\nDate.prototype.toISOString = function () {\n  const date = formatISO(this);\n  return date.substr(0, date.indexOf(\"+\"));\n};\n\nconst queryCache = new QueryCache();\nconst queryClient = new QueryClient({queryCache});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <QueryClientProvider client={queryClient}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={uk}>\n        <Provider store={store}>\n          <Router>\n            <Switch>\n              <Route path=\"/login\" component={Login} />\n              <ProtectedRoute path=\"/\" component={App} />\n              <Route path=\"*\" component={NotFound} />\n            </Switch>\n          </Router>\n        </Provider>\n      </MuiPickersUtilsProvider>\n      <ReactQueryDevtools />\n    </QueryClientProvider>\n  </MuiThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}