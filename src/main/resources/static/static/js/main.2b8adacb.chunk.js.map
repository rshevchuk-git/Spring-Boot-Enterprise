{"version":3,"sources":["context/actionTypes.js","context/order-reducer.js","context/actions.js","services/utils.js","ComboBox.js","services/auth-service.js","context/auth-reducer.js","models/SortObject.js","models/FilterObject.js","context/sort-reducer.js","models/CustomerObject.js","context/customerModal-reducer.js","context/store.js","InfoMessage.js","InputField.js","models/OrderKindObject.js","models/OrderObject.js","models/OrderTypeObject.js","SwitchControl.js","AddOrderForm.js","hooks/useSaveOrder.js","hooks/useSaveCELink.js","hooks/useSaveCPLink.js","hooks/useSaveOrderKind.js","hooks/useSaveOrderType.js","hooks/useSaveDimensions.js","DatePicker.js","DependentInput.js","services/customer-service.js","hooks/usePaymentMethods.js","PaymentForm.js","hooks/useMakePayment.js","hooks/useUpdatePaymentMethod.js","SortForm.js","ActionBar.js","FilterForm.js","SortActionBar.js","ClientsTable.js","hooks/useExportCustomers.js","CustomerForm.js","hooks/useSaveCustomer.js","Header.js","Login.js","ToolTip.js","EditForm.js","hooks/useDeleteOrder.js","hooks/useUpdateOrder.js","services/orders-service.js","StatusPopper.js","hooks/useSetStatus.js","Table.js","hooks/useOrders.js","hooks/useExportOrders.js","App.js","hooks/useCustomers.js","hooks/useEntrepreneurs.js","hooks/useEmployees.js","hooks/useOrderTypes.js","hooks/useStatuses.js","hooks/useCELinks.js","hooks/useCPLinks.js","NotFound.js","ProtectedRoute.js","index.js"],"names":["ADD_ORDER","LOAD_ORDERS","SET_AUTHENTICATED","SET_UNAUTHENTICATED","SELECT_CUSTOMER","UNSELECT_CUSTOMER","SET_ACTIVE_SORTING","UPDATE_MAIN_SORTING","UPDATE_SORT_SORTING","UPDATE_PAYMENT_SORTING","UPDATE_FILTER_SORTING","ADD_MAIN_SORTING","ADD_SORT_SORTING","ADD_PAYMENT_SORTING","ADD_FILTER_SORTING","SHOW_CUSTOMER_MODAL","CLOSE_CUSTOMER_MODAL","SET_MAIN_TAB","SET_FILTER_OPENED","SET_FILTER_CLOSED","initialState","mainPageOrderList","sortPageOrderList","isLoading","orderReducer","state","action","type","ActionTypes","payload","token","employee","customer","username","roles","sorting","UPDATE_SORTING","selections","sortPage","id","calculateM2","order","m2","width","height","amount","toFixed","checkPriceShrink","form","shrinkStatus","setShrinkStatus","price","shrink","fixCustomers","data","map","row","orderId","customerId","calculateSum","Math","ceil","fees","NoPaddingAutocomplete","withStyles","root","transform","top","right","inputRoot","padding","paddingRight","input","Autocomplete","ComboBox","label","getName","sortKey","error","validator","kindNameSetter","typeNameSetter","setEntrepreneur","setDimensions","setPrice","props","textFieldProps","setFieldValue","useFormikContext","values","fieldToTextField","field","name","dispatch","useDispatch","queryClient","useQueryClient","size","value","autoHighlight","getOptionLabel","onKeyPress","e","key","preventDefault","onChange","_","sortBy","selection","ADD_SORTING_BY","entrepreneur","getQueryData","find","link","orderKindId","orderKind","kindId","sum","renderInput","TextField","target","variant","authorize","credentials","a","Axios","post","response","unauthorize","store","isAuthenticated","loggedUser","authReducer","localStorage","setItem","JSON","stringify","customerName","defaults","headers","common","interceptors","use","status","AuthService","console","removeItem","EmptySort","dateFrom","dateTill","orderType","details","EmptyFilter","payDateFrom","payDateTill","receiver","active","mainTab","main","sort","payment","filter","filterTab","sortReducer","CustomerObject","customerGroup","money","payLog","debtor","city","info","firstPerson","firstPhone","firstEmail","secondPerson","secondPhone","secondEmail","thirdPerson","thirdPhone","thirdEmail","show","customerModalReducer","require","createStore","combineReducers","auth","orders","default","sortSelections","showCustomerModal","InfoMessage","open","onClose","message","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","CustomTextField","InputField","readonly","disableCalculation","numeric","phone","autoComplete","InputProps","readOnly","match","length","onKeyUp","EmptyOrderKind","typeId","kindName","EmptyOrder","billNo","date","userID","finalSum","paySum","comment","EmptyOrderType","typeName","SwitchControl","isChecked","useField","FormControlLabel","control","Switch","checked","color","useStyles","makeStyles","display","flexWrap","borderRadius","backgroundColor","margin","lock","minWidth","svg","fill","clear","justifySelf","validationSchema","yup","required","lessThan","positive","min","trim","max","AddOrderForm","classes","newOrderQuery","useMutation","params","newOrder","onSuccess","passedParams","setStatus","success","invalidateQueries","isReset","resetForm","onError","useSaveOrder","newCELinkQuery","get","entrepreneurId","useSaveCELink","newCPLinkQuery","useSaveCPLink","saveOrderKindQuery","orderKinds","push","useSaveOrderKind","saveOrderTypeQuery","useSaveOrderType","saveDimensionsQuery","put","useSaveDimensions","useState","showOrderInfo","setShowOrderInfo","showCELinkInfo","setShowCELinkInfo","showDimensionsInfo","setShowDimensionsInfo","showPriceInfo","setShowPriceInfo","showOrderTypeInfo","setShowOrderTypeInfo","showOrderKindInfo","setShowOrderKindInfo","orderKindName","setOrderKindName","orderTypeName","setOrderTypeName","handleClose","onAddCustomer","onAddOrderType","mutate","onFormSubmit","isUrgently","onAcceptance","setAcceptance","clearFields","keepFields","className","validateOnChange","validateOnMount","validateOnBlur","initialValues","parse","getItem","onSubmit","errors","validateField","handleReset","component","disabled","isFetching","option","options","Button","tabIndex","disableRipple","onClick","FirstPageOutlined","fullName","b","parseInt","substring","indexOf","LinkOutlined","OutlinedInput","endAdornment","InputAdornment","position","InputLabelProps","LockOpenOutlined","clearAndUnsort","datepicker","marginLeft","justifyContent","DatePicker","onTouch","autoOk","helperText","inputVariant","format","KeyboardButtonProps","DependentInput","React","useEffect","paymentType","paymentPercentage","fetchCustomers","includes","source","CancelToken","cancelToken","res","cancel","fetchEntrepreneurs","fetchOrderTypes","fetchStatuses","fetchEmployees","fetchPaymentMethods","fetchCELinks","fetchCPLinks","usePaymentMethods","useQuery","DataService","initialData","initialStale","keepPreviousData","row__one","gridColumnGap","gridTemplateColumns","row__two","gridTemplateRows","button","gridColumn","successInfo","successText","errorInfo","errorText","errorSvg","fontSize","successSvg","nullable","paymentDate","percentage","PaymentForm","makePaymentQuery","useMakePayment","paymentMethods","sortState","useSelector","updatePaymentMethodQuery","paymentMethod","useUpdatePaymentMethod","showPaymentInfo","setShowPaymentInfo","showPercentageLinkInfo","setShowPercentageLinkInfo","Date","currentTime","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setCurrentTime","style","SortForm","authState","showUserOrders","ActionBar","tabId","hideFor","some","role","setSortView","Typography","src","alt","showCustomerInfo","Collapse","in","timeout","onEntered","unmountOnExit","concat","method","SortActionBar","FilterForm","columns","headerName","flex","renderCell","Link","cellClassName","ClientsTable","exportQuery","customers","responseType","val","blob","Blob","window","navigator","msSaveOrOpenBlob","URL","createObjectURL","document","createElement","href","download","dispatchEvent","MouseEvent","bubbles","cancelable","view","q","setQ","rows","toString","toLowerCase","placeholder","sortModel","loading","rowHeight","headerHeight","pagination","disableSelectionOnClick","theme","modal","alignItems","paper","palette","background","boxShadow","shadows","spacing","cursor","primary","h2","textAlign","fontWeight","marginBottom","buttons","gap","clearButton","marginRight","rowOne","gridRowGap","rowTwo","longTextField","gridColumnStart","gridColumnEnd","switchHolder","auxiliaryRow","email","CustomerForm","customerModalState","saveCustomerQuery","log","useSaveCustomer","showSavedInfo","setShowSavedInfo","sortByCustomer","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","flexGrow","logoutButton","logoutHolder","whiteSpace","tabs","Header","radius","history","useHistory","setValue","borderBottomLeftRadius","borderBottomRightRadius","Toolbar","Tabs","_e","newValue","TabIndicatorProps","indicatorColor","aria-label","Tab","Copyright","align","getFullYear","marginTop","flexDirection","avatar","secondary","submit","Login","password","setForm","showNotYetVerified","setShowNotYetVerified","showWrongCredentials","setShowWrongCredentials","isDisabled","setIsDisabled","Container","maxWidth","CssBaseline","Avatar","then","catch","err","fullWidth","autoFocus","Grid","container","item","xs","Box","mt","useStylesTooltip","arrow","tooltip","ToolTip","title","placement","children","Tooltip","lineHeight","rowThree","EditForm","user","deleteQuery","delete","setShowModal","useDeleteOrder","updateOrderQuery","backupOrder","updateObject","onMutate","mutationObject","getQueryCache","findAll","forEach","query","setQueryData","queryKey","cachedOrder","_error","toggleModal","useUpdateOrder","setOpen","showDeleteError","setShowDeleteError","showSaveError","setShowSaveError","showConfirmation","setShowConfirmation","toggle","isNotMyOrder","employeeID","amI","isDisabledFor","multiline","Dialog","fullScreen","DialogTitle","DialogContent","DialogContentText","DialogActions","fixOrders","sortOrders","tableId","sendForm","listOfOrders","sources","acceptanceButton","border","borderColor","inWorkButton","readyButton","completedButton","popper","zIndex","left","borderWidth","content","borderStyle","StatusPopper","statusQuery","statusId","useSetStatus","anchorRef","useRef","arrowRef","setArrowRef","prevOpen","img","ref","Popper","anchorEl","current","disablePortal","modifiers","flip","enabled","preventOverflow","boundariesElement","element","o","strcmp","localeCompare","formatDate","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","Table","tableID","sortOrder","setSortOrder","ordersQuery","OrderService","useOrders","customerInfo","c","debt","reduce","calculateDebt","paid","orderBy","sortComparator","c1","c2","valueFormatter","param","Number","parseFloat","sortable","payDate","Object","keys","column","sortDirection","onSortModelChange","App","tableHeight","setTableHeight","CustomerService","refetchOnWindowFocus","useCustomers","useEntrepreneurs","useEmployees","useOrderTypes","useStatuses","useCELinks","useCPLinks","getElementsByClassName","innerHeight","clientHeight","path","exact","NotFound","Paper","elevation","ProtectedRoute","Component","authToken","split","render","to","pathname","from","location","oldTheme","createMuiTheme","light","dark","typography","useNextVariants","htmlFontSize","ukUA","breakpoints","overrides","MuiInputLabel","up","down","MuiInputAdornment","MuiInputBase","MuiTypography","subtitle1","body1","MuiButton","MuiTab","MuiSvgIcon","prototype","toISOString","formatISO","this","substr","queryCache","QueryCache","QueryClient","ReactDOM","QueryClientProvider","client","utils","DateFnsUtils","locale","uk","getElementById"],"mappings":"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","file":"static/js/main.2b8adacb.chunk.js","sourcesContent":["export const ADD_ORDER = \"ADD_ORDER\";\nexport const LOAD_ORDERS = \"LOAD_ORDERS\";\n\nexport const SET_AUTHENTICATED = \"SET_AUTHENTICATED\";\nexport const SET_UNAUTHENTICATED = \"SET_UNAUTHENTICATED\";\n\nexport const SELECT_CUSTOMER = \"SELECT_CUSTOMER\";\nexport const UNSELECT_CUSTOMER = \"UNSELECT_CUSTOMER\";\n\nexport const SET_ACTIVE_SORTING = \"SET_ACTIVE_SORTING\";\nexport const UPDATE_MAIN_SORTING = \"UPDATE_MAIN_SORTING\";\nexport const UPDATE_SORT_SORTING = \"UPDATE_SORT_SORTING\";\nexport const UPDATE_PAYMENT_SORTING = \"UPDATE_PAYMENT_SORTING\";\nexport const UPDATE_FILTER_SORTING = \"UPDATE_FILTER_SORTING\";\nexport const ADD_MAIN_SORTING = \"ADD_MAIN_SORTING\";\nexport const ADD_SORT_SORTING = \"ADD_SORT_SORTING\";\nexport const ADD_PAYMENT_SORTING = \"ADD_PAYMENT_SORTING\";\nexport const ADD_FILTER_SORTING = \"ADD_FILTER_SORTING\";\n\nexport const SHOW_CUSTOMER_MODAL = \"SHOW_CUSTOMER_MODAL\";\nexport const CLOSE_CUSTOMER_MODAL = \"CLOSE_CUSTOMER_MODAL\";\n\nexport const SET_MAIN_TAB = \"SET_MAIN_TAB\";\nexport const SET_FILTER_OPENED = \"SET_FILTER_OPENED\";\nexport const SET_FILTER_CLOSED = \"SET_FILTER_CLOSED\";\n","import * as ActionTypes from \"./actionTypes\";\n\nconst initialState = {\n  mainPageOrderList: [],\n  sortPageOrderList: [],\n  isLoading: true,\n};\n\nfunction orderReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.ADD_ORDER:\n      return {\n        ...state,\n        mainPageOrderList: [...state.mainPageOrderList, action.payload],\n        sortPageOrderList: [...state.sortPageOrderList, action.payload],\n      };\n    case ActionTypes.LOAD_ORDERS:\n      if (!action.payload) return state;\n      return {\n        ...state,\n        mainPageOrderList: action.payload,\n        sortPageOrderList: action.payload,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default orderReducer;\n","import * as ActionTypes from \"./actionTypes\";\n\nexport const NEW_ORDER = (newOrder) => ({\n  type: ActionTypes.ADD_ORDER,\n  payload: newOrder,\n});\n\nexport const LOAD_ORDERS = (orders) => ({\n  type: ActionTypes.LOAD_ORDERS,\n  payload: orders,\n});\n\nexport const SET_AUTHENTICATED = (token, employee, customer, username, roles) => ({\n  type: ActionTypes.SET_AUTHENTICATED,\n  payload: {\n    token,\n    employee,\n    customer,\n    username,\n    roles,\n  },\n});\n\nexport const SET_UNAUTHENTICATED = () => ({\n  type: ActionTypes.SET_UNAUTHENTICATED,\n});\n\nexport const SELECT_CUSTOMER = (customer) => ({\n  type: ActionTypes.SELECT_CUSTOMER,\n  payload: customer,\n});\n\nexport const DESELECT_CUSTOMER = () => ({\n  type: ActionTypes.UNSELECT_CUSTOMER,\n});\n\nexport const SET_ACTIVE_SORTING = (sorting) => ({\n  type: ActionTypes.SET_ACTIVE_SORTING,\n  payload: sorting,\n});\n\nexport const ADD_SORTING_BY = (selection, type) => {\n  let sortPage;\n  switch (type) {\n    case \"main\":\n      sortPage = ActionTypes.ADD_MAIN_SORTING;\n      break;\n    case \"sort\":\n      sortPage = ActionTypes.ADD_SORT_SORTING;\n      break;\n    case \"payment\":\n      sortPage = ActionTypes.ADD_PAYMENT_SORTING;\n      break;\n    case \"filter\":\n      sortPage = ActionTypes.ADD_FILTER_SORTING;\n      break;\n    default:\n      break;\n  }\n  return {\n    type: sortPage,\n    payload: selection,\n  };\n};\n\nexport const UPDATE_SORTING = (selections, type) => {\n  let sortPage;\n  switch (type) {\n    case \"main\":\n      sortPage = ActionTypes.UPDATE_MAIN_SORTING;\n      break;\n    case \"sort\":\n      sortPage = ActionTypes.UPDATE_SORT_SORTING;\n      break;\n    case \"payment\":\n      sortPage = ActionTypes.UPDATE_PAYMENT_SORTING;\n      break;\n    case \"filter\":\n      sortPage = ActionTypes.UPDATE_FILTER_SORTING;\n      break;\n    default:\n      break;\n  }\n  return {\n    type: sortPage,\n    payload: selections,\n  };\n};\n\nexport const SHOW_CUSTOMER_MODAL = (customer = {}) => {\n  return {\n    type: ActionTypes.SHOW_CUSTOMER_MODAL,\n    payload: customer,\n  };\n};\n\nexport const SET_MAIN_TAB = (id) => ({\n  type: ActionTypes.SET_MAIN_TAB,\n  payload: id,\n});\n\nexport const CLOSE_CUSTOMER_MODAL = () => ({\n  type: ActionTypes.CLOSE_CUSTOMER_MODAL,\n});\n\nexport const SET_FILTER_OPENED = () => ({\n  type: ActionTypes.SET_FILTER_OPENED,\n});\n\nexport const SET_FILTER_CLOSED = () => ({\n  type: ActionTypes.SET_FILTER_CLOSED,\n});\n","export function calculateM2(order) {\n  order.m2 = (((order.width * order.height) / 1000000) * order.amount).toFixed(3) || 0.0;\n}\n\nexport const checkPriceShrink = (form, shrinkStatus, setShrinkStatus) => {\n  if (form.price >= 0) {\n    if (!shrinkStatus.shrink) {\n      setShrinkStatus({\n        shrink: true,\n      });\n    }\n  } else if (shrinkStatus.shrink) {\n    setShrinkStatus({\n      shrink: false,\n    });\n  }\n};\n\nexport const fixCustomers = (data, id = 0) => {\n  return data.map((row) => {\n    if (row.orderId === 0) {\n      row.id = id;\n      row.customerId = id;\n    } else {\n      row.id = row.customerId;\n    }\n    return row;\n  });\n};\n\nexport const setCurrentTime = (date) => {\n  const currentTime = new Date();\n  date.setHours(currentTime.getHours());\n  date.setMinutes(currentTime.getMinutes());\n  date.setSeconds(currentTime.getSeconds());\n};\n\nexport const calculateSum = (order) => {\n  calculateM2(order);\n  return order.m2 > 0\n    ? Math.ceil(+(order.m2 * order.price) + +order.fees)\n    : Math.ceil(order.price * order.amount + +order.fees);\n};\n","import {TextField, withStyles} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {useFormikContext} from \"formik\";\nimport {fieldToTextField} from \"formik-material-ui\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useDispatch} from \"react-redux\";\nimport {ADD_SORTING_BY} from \"./context/actions\";\nimport {calculateSum} from \"./services/utils\";\n\nconst NoPaddingAutocomplete = withStyles({\n  root: {\n    \"& .MuiInputLabel-marginDense\": {\n      transform: \"translate(14px, 9px) scale(1)\",\n    },\n\n    \"& .MuiInputLabel-shrink\": {\n      transform: \"translate(14px, -4px) scale(0.75)\",\n    },\n\n    \"& .MuiAutocomplete-endAdornment\": {\n      top: \"inherit\",\n    },\n\n    \"& .MuiAutocomplete-inputRoot[class*='MuiOutlinedInput-root'] .MuiAutocomplete-endAdornment\": {\n      right: 5,\n    },\n  },\n  inputRoot: {\n    '&&[class*=\"MuiOutlinedInput-root\"] $input': {\n      padding: 2,\n    },\n    '&&[class*=\"MuiOutlinedInput-root\"]': {\n      paddingRight: \"40px!important\",\n    },\n  },\n  input: {},\n})(Autocomplete);\n\nfunction ComboBox({\n  label,\n  getName,\n  sortKey,\n  error,\n  validator,\n  kindNameSetter = false,\n  typeNameSetter = false,\n  setEntrepreneur = false,\n  setDimensions = false,\n  setPrice = false,\n  action = false,\n  sortPage = \"\",\n  textFieldProps,\n  ...props\n}) {\n  const {\n    form: {setFieldValue},\n  } = props;\n  const {\n    values: {order},\n  } = useFormikContext();\n  const {...field} = fieldToTextField(props);\n  const {name} = field;\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n\n  return (\n    <NoPaddingAutocomplete\n      {...props}\n      size=\"small\"\n      error={\"\"}\n      value={field.value}\n      autoHighlight={true}\n      getOptionLabel={getName}\n      onKeyPress={(e) => {\n        if (e.key === \"=\" || e.key === \"+\") {\n          e.preventDefault();\n          if (action) action();\n        }\n      }}\n      onChange={(_, value) => {\n        if (sortKey) {\n          const sortBy = {};\n          sortBy[sortKey] = value;\n          dispatch(ADD_SORTING_BY(sortBy, sortPage));\n        }\n\n        if (setEntrepreneur) {\n          const entrepreneur =\n            queryClient\n              .getQueryData(\"ce-links\")\n              .find((link) => link.customer.customerId === value?.customerId)?.entrepreneur ||\n            null;\n          setFieldValue(\"order.entrepreneur\", entrepreneur);\n        }\n\n        setFieldValue(name, value);\n\n        if (setPrice) {\n          if (!value) return;\n          let customerId;\n          let orderKindId;\n          let width = order.width;\n          let height = order.height;\n\n          if (value.customerId) {\n            customerId = value.customerId;\n            orderKindId = order.orderKind?.kindId;\n          } else {\n            customerId = order.customer?.customerId;\n            orderKindId = value.kindId;\n            width = value.width || width;\n            height = value.height || height;\n          }\n          if (!customerId || !orderKindId) return;\n          const price =\n            queryClient\n              .getQueryData(\"cp-links\")\n              .find(\n                (link) =>\n                  link.customer?.customerId === customerId &&\n                  link.orderKind?.kindId === orderKindId\n              )?.price || 0;\n          setFieldValue(\"order.price\", price);\n\n          const sum = calculateSum({\n            ...order,\n            price: price,\n            width: width,\n            height: height,\n          });\n          if (sum) setFieldValue(\"order.finalSum\", sum);\n        }\n\n        if (setDimensions && value && value.width && value.height) {\n          setFieldValue(\"order.width\", value.width);\n          setFieldValue(\"order.height\", value.height);\n        }\n        validator(name);\n      }}\n      renderInput={(props) => (\n        <TextField\n          {...props}\n          error={!!error}\n          onChange={(e) => {\n            if (typeNameSetter) {\n              typeNameSetter(e.target.value);\n            } else if (kindNameSetter) {\n              kindNameSetter(e.target.value);\n            }\n          }}\n          label={label}\n          variant=\"outlined\"\n        />\n      )}\n    />\n  );\n}\n\nexport default ComboBox;\n","import Axios from \"axios\";\nimport { SET_UNAUTHENTICATED } from \"../context/actions\";\nimport store from \"../context/store\";\n\nexport const authorize = async (credentials) => {\n  const response = await Axios.post(\"/api/auth/signin\", credentials);\n  const data = response.data;\n  return data;\n};\n\nexport const unauthorize = () => {\n  store.dispatch(SET_UNAUTHENTICATED());\n};\n","import Axios from \"axios\";\nimport * as AuthService from \"../services/auth-service\";\nimport * as ActionTypes from \"./actionTypes\";\n\nconst initialState = {\n  isAuthenticated: false,\n  loggedUser: null,\n  customer: null,\n  roles: [],\n};\n\nfunction authReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.SET_AUTHENTICATED:\n      localStorage.setItem(\"token\", action.payload.token);\n      localStorage.setItem(\"username\", action.payload.username);\n      localStorage.setItem(\"roles\", action.payload.roles);\n\n      if (action.payload.customer) {\n        localStorage.setItem(\n          \"customer\",\n          JSON.stringify({\n            customerId: action.payload.customer.customerId,\n            customerName: action.payload.customer.customerName,\n          })\n        );\n      } else {\n        localStorage.setItem(\"customer\", null);\n      }\n\n      localStorage.setItem(\"loggedUser\", JSON.stringify(action.payload.employee));\n\n      Axios.defaults.headers.common[\"Authorization\"] = `Bearer ${action.payload.token}`;\n      Axios.interceptors.response.use(\n        (response) => response,\n        (error) => {\n          error.response?.status === 401 ? AuthService.unauthorize() : console.error(error);\n          throw error;\n        }\n      );\n      return {\n        isAuthenticated: true,\n        loggedUser: action.payload.employee,\n        customer: action.payload.customer,\n        roles: action.payload.roles,\n      };\n    case ActionTypes.SET_UNAUTHENTICATED:\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"username\");\n      localStorage.removeItem(\"roles\");\n      localStorage.removeItem(\"customer\");\n      localStorage.removeItem(\"loggedUser\");\n      return {isAuthenticated: false, loggedUser: null};\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;\n","export const EmptySort = {\n  customer: null,\n  status: null,\n  dateFrom: null,\n  dateTill: null,\n  orderKind: null,\n  orderType: null,\n  employee: null,\n  details: \"\",\n};\n","export const EmptyFilter = {\n  entrepreneur: null,\n  customer: null,\n  status: null,\n  employee: null,\n  dateFrom: null,\n  dateTill: null,\n  payDateFrom: null,\n  payDateTill: null,\n  orderKind: null,\n  orderType: null,\n  receiver: \"\",\n};\n","import * as ActionTypes from \"./actionTypes\";\nimport {EmptySort} from \"../models/SortObject\";\nimport {EmptyFilter} from \"../models/FilterObject\";\n\nconst initialState = {\n  active: \"main\",\n  mainTab: 0,\n  main: EmptySort,\n  sort: EmptySort,\n  payment: EmptySort,\n  filter: EmptyFilter,\n  filterTab: false,\n};\n\nfunction sortReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.SET_ACTIVE_SORTING:\n      return {...state, active: action.payload};\n    case ActionTypes.ADD_MAIN_SORTING:\n      return {...state, main: {...state.main, ...action.payload}};\n    case ActionTypes.ADD_SORT_SORTING:\n      return {...state, sort: {...state.sort, ...action.payload}};\n    case ActionTypes.ADD_PAYMENT_SORTING:\n      return {...state, payment: {...state.payment, ...action.payload}};\n    case ActionTypes.ADD_FILTER_SORTING:\n      return {...state, filter: {...state.filter, ...action.payload}};\n    case ActionTypes.UPDATE_MAIN_SORTING:\n      return {...state, main: action.payload};\n    case ActionTypes.UPDATE_SORT_SORTING:\n      return {...state, sort: action.payload};\n    case ActionTypes.UPDATE_PAYMENT_SORTING:\n      return {...state, payment: action.payload};\n    case ActionTypes.UPDATE_FILTER_SORTING:\n      return {...state, filter: action.payload};\n    case ActionTypes.SET_MAIN_TAB:\n      return {...state, mainTab: action.payload};\n    case ActionTypes.SET_FILTER_OPENED:\n      return {...state, filterTab: true};\n    case ActionTypes.SET_FILTER_CLOSED:\n      return {...state, filterTab: false};\n    default:\n      return state;\n  }\n}\n\nexport default sortReducer;\n","export const CustomerObject = {\n  customerId: 0,\n  customerName: \"\",\n  customerGroup: \"\",\n  money: 0,\n  payLog: \"\",\n  debtor: false,\n  city: \"\",\n  info: \"\",\n  firstPerson: \"\",\n  firstPhone: \"\",\n  firstEmail: \"\",\n  secondPerson: \"\",\n  secondPhone: \"\",\n  secondEmail: \"\",\n  thirdPerson: \"\",\n  thirdPhone: \"\",\n  thirdEmail: \"\",\n};\n","import {CustomerObject} from \"../models/CustomerObject\";\nimport * as ActionTypes from \"./actionTypes\";\n\nconst initialState = {\n  show: false,\n  customer: CustomerObject,\n};\n\nfunction customerModalReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.SHOW_CUSTOMER_MODAL:\n      return {show: true, customer: action.payload};\n    case ActionTypes.CLOSE_CUSTOMER_MODAL:\n      return {show: false, customer: {}};\n    default:\n      return state;\n  }\n}\n\nexport default customerModalReducer;\n","import authReducer from \"./auth-reducer\";\nimport sortReducer from \"./sort-reducer\";\nimport customerModalReducer from \"./customerModal-reducer\";\n\nconst {createStore, combineReducers} = require(\"redux\");\nconst {default: orderReducer} = require(\"./order-reducer\");\n\nconst store = createStore(\n  combineReducers({\n    auth: authReducer,\n    orders: orderReducer,\n    sortSelections: sortReducer,\n    showCustomerModal: customerModalReducer,\n  })\n);\n\nexport default store;\n","import {Snackbar} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport React from \"react\";\n\nfunction InfoMessage({open, onClose, message, type}) {\n  if (type === \"success\") {\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={onClose}\n      >\n        <Alert onClose={onClose} variant=\"filled\" severity=\"success\">\n          {message}\n        </Alert>\n      </Snackbar>\n    );\n  } else {\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={onClose}\n      >\n        <Alert onClose={onClose} variant=\"filled\" severity=\"error\">\n          {message}\n        </Alert>\n      </Snackbar>\n    );\n  }\n}\n\nexport default InfoMessage;\n","import {TextField, withStyles} from \"@material-ui/core\";\nimport {useFormikContext} from \"formik\";\nimport React from \"react\";\nimport {calculateM2, calculateSum} from \"./services/utils\";\n\nconst CustomTextField = withStyles({\n  root: {\n    \"& .MuiInputLabel-marginDense\": {\n      transform: \"translate(14px, 9px) scale(1)\",\n    },\n\n    \"& .MuiOutlinedInput-input\": {\n      padding: 8,\n    },\n\n    \"& .MuiInputLabel-shrink\": {\n      transform: \"translate(14px, -4px) scale(0.75)\",\n    },\n  },\n})(TextField);\n\nconst InputField = ({\n  label,\n  field,\n  error,\n  readonly = false,\n  validator,\n  disableCalculation = false,\n  numeric = true,\n  phone = false,\n  ...props\n}) => {\n  const {\n    form: {setFieldValue},\n  } = props;\n  const {values: form} = useFormikContext();\n  const {onChange, name} = field;\n  return (\n    <CustomTextField\n      {...props}\n      {...field}\n      error={!!error}\n      size=\"small\"\n      variant=\"outlined\"\n      autoComplete=\"off\"\n      label={label}\n      InputProps={{readOnly: readonly}}\n      onChange={(e) => {\n        if (!numeric) onChange(e);\n        if (e.target.value.match(/^\\d*\\.?\\d*$/) || e.target.value.length === 0) {\n          onChange(e);\n        }\n        validator(name);\n      }}\n      onKeyUp={(_) => {\n        if (!numeric || phone || !form.order || disableCalculation) return;\n        calculateM2(form.order);\n        const sum = calculateSum(form.order);\n        if (sum) setFieldValue(\"order.finalSum\", sum);\n      }}\n    />\n  );\n};\n\nexport default InputField;\n","export const EmptyOrderKind = {\n  kindId: 0,\n  typeId: 0,\n  kindName: \"\",\n  width: 0,\n  height: 0,\n};\n","export const EmptyOrder = {\n  orderId: 0,\n  billNo: 0,\n  date: \"\",\n  employee: {userID: 60},\n  entrepreneur: null,\n  customer: null,\n  orderType: null,\n  orderKind: null,\n  width: 0,\n  height: 0,\n  amount: 0,\n  m2: 0.0,\n  price: 0,\n  fees: 0,\n  finalSum: 0,\n  paySum: 0,\n  status: {id: 1},\n  comment: \"\",\n};\n","export const EmptyOrderType = {\n  typeId: 0,\n  typeName: \"\",\n};\n","import { FormControlLabel, Switch } from \"@material-ui/core\";\nimport { useField } from \"formik\";\nimport React from \"react\";\n\nconst SwitchControl = ({ label, isChecked, ...props }) => {\n  const [field] = useField(props);\n  return (\n    <FormControlLabel\n      control={<Switch {...props} {...field} checked={isChecked} color=\"primary\" />}\n      label={label}\n    />\n  );\n};\n\nexport default SwitchControl;\n","import {Button} from \"@material-ui/core\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {FirstPageOutlined, LinkOutlined, LockOpenOutlined} from \"@material-ui/icons\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {Field, Form, Formik} from \"formik\";\nimport React, {useState} from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useDispatch} from \"react-redux\";\nimport * as yup from \"yup\";\nimport \"./AddOrderForm.css\";\nimport ComboBox from \"./ComboBox\";\nimport {SHOW_CUSTOMER_MODAL, UPDATE_SORTING} from \"./context/actions\";\nimport store from \"./context/store\";\nimport useSaveCELink from \"./hooks/useSaveCELink\";\nimport useSaveCPLink from \"./hooks/useSaveCPLink\";\nimport useSaveDimensions from \"./hooks/useSaveDimensions\";\nimport useSaveOrder from \"./hooks/useSaveOrder\";\nimport useSaveOrderKind from \"./hooks/useSaveOrderKind\";\nimport useSaveOrderType from \"./hooks/useSaveOrderType\";\nimport InfoMessage from \"./InfoMessage\";\nimport InputField from \"./InputField\";\nimport {CustomerObject} from \"./models/CustomerObject\";\nimport {EmptyOrderKind} from \"./models/OrderKindObject\";\nimport {EmptyOrder} from \"./models/OrderObject\";\nimport {EmptyOrderType} from \"./models/OrderTypeObject\";\nimport {EmptySort} from \"./models/SortObject\";\nimport {checkPriceShrink} from \"./services/utils\";\nimport SwitchControl from \"./SwitchControl\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    margin: \"0 auto\",\n    width: \"52%\",\n  },\n  lock: {\n    padding: 0,\n    width: \"5px\",\n    backgroundColor: \"white !important\",\n    minWidth: 0,\n\n    \"&:hover\": {\n      backgroundColor: \"white\",\n    },\n  },\n  svg: {\n    fill: \"rgba(0, 0, 0, 0.23)\",\n\n    \"&:hover\": {\n      fill: \"black\",\n    },\n  },\n  clear: {\n    backgroundColor: \"#fff\",\n    minWidth: 0,\n    justifySelf: \"flex-end\",\n    margin: \"0px 0px 1px 0\",\n    width: \"2.4rem\",\n  },\n}));\n\nconst validationSchema = yup.object({\n  order: yup.object({\n    entrepreneur: yup.object().required(),\n    customer: yup.object().required(),\n    orderType: yup.object().required(),\n    orderKind: yup.object().required(),\n    width: yup.number().lessThan(2000000000).positive().min(0).required(),\n    height: yup.number().lessThan(2000000000).positive().min(0).required(),\n    amount: yup.number().lessThan(2000000000).positive().min(0).required(),\n    price: yup.number().lessThan(2000000000).positive().min(0).required(),\n    fees: yup.number().lessThan(2000000000).positive().min(0).required(),\n    finalSum: yup.number().lessThan(2000000000).positive().min(0).required(),\n    comment: yup.string().trim().max(255).required(),\n  }),\n});\n\nexport default function AddOrderForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n  const newOrderQuery = useSaveOrder();\n  const newCELinkQuery = useSaveCELink();\n  const newCPLinkQuery = useSaveCPLink();\n  const saveOrderKindQuery = useSaveOrderKind();\n  const saveOrderTypeQuery = useSaveOrderType();\n  const saveDimensionsQuery = useSaveDimensions();\n  const [shrinkStatus, setShrinkStatus] = useState({});\n  const [showOrderInfo, setShowOrderInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [showCELinkInfo, setShowCELinkInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [showDimensionsInfo, setShowDimensionsInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [showPriceInfo, setShowPriceInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [showOrderTypeInfo, setShowOrderTypeInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [showOrderKindInfo, setShowOrderKindInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [orderKindName, setOrderKindName] = useState(\"\");\n  const [orderTypeName, setOrderTypeName] = useState(\"\");\n\n  const handleClose = () => {\n    setShowOrderInfo({success: false, error: false});\n    setShowCELinkInfo({success: false, error: false});\n    setShowDimensionsInfo({success: false, error: false});\n    setShowPriceInfo({success: false, error: false});\n    setShowOrderKindInfo({success: false, error: false});\n    setShowOrderTypeInfo({success: false, error: false});\n  };\n\n  const clearAndUnsort = (e, resetForm) => {\n    queryClient.invalidateQueries(\"customers\");\n    queryClient.invalidateQueries(\"ce-links\");\n    queryClient.invalidateQueries(\"cp-links\");\n    store.dispatch(UPDATE_SORTING({...EmptySort}, \"main\"));\n    resetForm(e);\n  };\n\n  const onAddCustomer = () => {\n    dispatch(SHOW_CUSTOMER_MODAL({...CustomerObject}));\n  };\n\n  const onAddOrderType = () => {\n    if (orderTypeName.trim().length === 0) {\n      setShowOrderTypeInfo({success: false, error: true});\n      return;\n    }\n    saveOrderTypeQuery.mutate({\n      orderType: {\n        ...EmptyOrderType,\n        typeName: orderTypeName,\n      },\n      setStatus: setShowOrderTypeInfo,\n    });\n  };\n\n  const onAddOrderKind = (orderType) => {\n    if (orderKindName.trim().length === 0 || !orderType) {\n      setShowOrderKindInfo({success: false, error: true});\n      return;\n    }\n    saveOrderKindQuery.mutate({\n      orderType: orderType,\n      orderKind: {\n        ...EmptyOrderKind,\n        typeId: orderType.typeId,\n        kindName: orderKindName,\n      },\n      setStatus: setShowOrderKindInfo,\n    });\n  };\n\n  const linkCustomer = (customer, entrepreneur) => {\n    if (!customer || !entrepreneur) {\n      setShowCELinkInfo({success: false, error: true});\n      return;\n    }\n    newCELinkQuery.mutate({\n      customerId: customer.customerId,\n      entrepreneurId: entrepreneur.entrepreneurId,\n      setStatus: setShowCELinkInfo,\n    });\n  };\n\n  const linkDimensions = (orderKind, width, height) => {\n    if (!orderKind || !width || !height) {\n      setShowDimensionsInfo({success: false, error: true});\n      return;\n    }\n    orderKind.width = width;\n    orderKind.height = height;\n    saveDimensionsQuery.mutate({\n      orderKind: orderKind,\n      setStatus: setShowDimensionsInfo,\n    });\n  };\n\n  const linkPrice = (customer, orderKind, price) => {\n    if (!customer || !orderKind || !price) {\n      setShowPriceInfo({success: false, error: true});\n      return;\n    }\n    newCPLinkQuery.mutate({\n      customerId: customer.customerId,\n      orderKindId: orderKind.kindId,\n      price: price,\n      setStatus: setShowPriceInfo,\n    });\n  };\n\n  const setUrgence = (isUrgently, order) => {\n    if (isUrgently) {\n      if (order.finalSum * 0.15 < 10) {\n        order.finalSum = +order.finalSum + 10;\n      } else {\n        order.finalSum = Math.ceil(order.finalSum * 1.15);\n      }\n      order.comment = \"(Терміново) \" + order.comment;\n    }\n  };\n\n  const setAcceptance = (onAcceptance, order) => {\n    onAcceptance\n      ? (order.status = queryClient.getQueryData(\"statuses\").find((status) => status.id === 1))\n      : (order.status = queryClient\n          .getQueryData(\"statuses\")\n          .find((status) => status.id === 2));\n  };\n\n  const onFormSubmit = (form, resetForm, setFieldValue) => {\n    setUrgence(form.isUrgently, form.order);\n    setAcceptance(form.onAcceptance, form.order);\n    newOrderQuery.mutate({\n      newOrder: form.order,\n      isReset: form.clearFields,\n      resetForm: form.clearFields ? resetForm : () => keepFields(form.order, setFieldValue),\n      setStatus: setShowOrderInfo,\n    });\n  };\n\n  const keepFields = (form, setFieldValue) => {\n    setFieldValue(\"order.width\", form.orderKind.width);\n    setFieldValue(\"order.height\", form.orderKind.height);\n    setFieldValue(\"order.amount\", 0);\n    const price =\n      queryClient\n        .getQueryData(\"cp-links\")\n        .find(\n          (link) =>\n            link.customer?.customerId === form.customer.customerId &&\n            link.orderKind?.kindId === form.orderKind.kindId\n        )?.price || 0;\n    setFieldValue(\"order.price\", price);\n    setFieldValue(\"order.fees\", 0);\n    setFieldValue(\"order.finalSum\", 0);\n    setFieldValue(\"order.comment\", \"\");\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik\n        validateOnChange={false}\n        validateOnMount={false}\n        validateOnBlur={false}\n        initialValues={{\n          order: {\n            ...EmptyOrder,\n            employee: JSON.parse(localStorage.getItem(\"loggedUser\")),\n          },\n          onAcceptance: false,\n          clearFields: true,\n          isUrgently: false,\n        }}\n        onSubmit={(form, {resetForm, setFieldValue}) =>\n          onFormSubmit(form, resetForm, setFieldValue)\n        }\n        validationSchema={validationSchema}\n      >\n        {({values, errors, validateField, handleReset}) => (\n          <Form>\n            {checkPriceShrink(values.order, shrinkStatus, setShrinkStatus)}\n            <div className=\"row__one\">\n              <Field\n                name=\"order.customer\"\n                label=\"Замовник\"\n                error={errors?.order?.customer}\n                validator={validateField}\n                component={ComboBox}\n                setEntrepreneur={true}\n                setPrice={true}\n                sortKey=\"customer\"\n                sortPage=\"main\"\n                action={onAddCustomer}\n                disabled={newOrderQuery.isFetching}\n                getName={(option) => option.customerName || \"\"}\n                options={queryClient.getQueryData(\"customers\") || []}\n              />\n              <Button\n                tabIndex={-1}\n                className={classes.lock}\n                disableRipple={true}\n                onClick={() => linkCustomer(values.order.customer, values.order.entrepreneur)}\n              >\n                <FirstPageOutlined className={classes.svg} />\n              </Button>\n              <Field\n                name=\"order.entrepreneur\"\n                label=\"Підприємець\"\n                error={errors?.order?.entrepreneur}\n                validator={validateField}\n                component={ComboBox}\n                disabled={newOrderQuery.isFetching}\n                getName={(option) => option.fullName || \"\"}\n                options={queryClient.getQueryData(\"entrepreneurs\") || []}\n              />\n              <Field\n                name=\"order.orderType\"\n                label=\"Вид\"\n                error={errors?.order?.orderType}\n                validator={validateField}\n                component={ComboBox}\n                typeNameSetter={setOrderTypeName}\n                action={onAddOrderType}\n                disabled={newOrderQuery.isFetching}\n                getName={(option) => option.typeName || \"\"}\n                options={queryClient.getQueryData(\"orderTypes\") || []}\n              />\n\n              <Field\n                name=\"order.orderKind\"\n                label=\"Тип\"\n                error={errors?.order?.orderKind}\n                validator={validateField}\n                component={ComboBox}\n                setPrice={true}\n                setDimensions={true}\n                action={() => onAddOrderKind(values.order.orderType)}\n                kindNameSetter={setOrderKindName}\n                disabled={newOrderQuery.isFetching}\n                getName={(option) => option.kindName || \"\"}\n                options={\n                  values.order.orderType?.typeName === \"CTP\"\n                    ? values.order.orderType?.orderKinds.sort((a, b) =>\n                        parseInt(a.kindName.substring(0, a.kindName.indexOf(\"х\")), 10) >\n                        parseInt(b.kindName.substring(0, b.kindName.indexOf(\"х\")), 10)\n                          ? 1\n                          : -1\n                      ) || []\n                    : values.order.orderType?.orderKinds\n                }\n              />\n            </div>\n\n            <div className=\"row__two\">\n              <Field\n                name=\"order.width\"\n                label=\"Ширина\"\n                error={errors?.order?.width}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <Button\n                tabIndex={-1}\n                className={classes.lock}\n                disableRipple={true}\n                onClick={() =>\n                  linkDimensions(\n                    values.order.orderKind,\n                    values.order.width,\n                    values.order.height\n                  )\n                }\n              >\n                <LinkOutlined className={classes.svg} />\n              </Button>\n              <Field\n                name=\"order.height\"\n                label=\"Висота\"\n                error={errors?.order?.height}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <Field\n                name=\"order.amount\"\n                label=\"Кількість\"\n                error={errors?.order?.amount}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <OutlinedInput\n                id=\"outlined\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={\n                  (\n                    ((values.order.width * values.order.height) / 1000000) *\n                    values.order.amount\n                  ).toFixed(3) || 0.0\n                }\n                endAdornment={<InputAdornment position=\"end\">м²</InputAdornment>}\n                disabled\n              />\n\n              <Field\n                name=\"order.price\"\n                label=\"Ціна\"\n                error={errors?.order?.price}\n                validator={validateField}\n                InputLabelProps={shrinkStatus}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <Button\n                tabIndex={-1}\n                className={classes.lock}\n                disableRipple={true}\n                onClick={() =>\n                  linkPrice(values.order.customer, values.order.orderKind, values.order.price)\n                }\n              >\n                <LockOpenOutlined className={classes.svg} />\n              </Button>\n\n              <Field\n                name=\"order.fees\"\n                label=\"Послуги\"\n                error={errors?.order?.fees}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <Field\n                name=\"order.finalSum\"\n                label=\"Сума\"\n                error={errors?.order?.finalSum}\n                validator={validateField}\n                component={InputField}\n                disableCalculation={true}\n                disabled={newOrderQuery.isFetching}\n              />\n            </div>\n\n            <div className=\"row__three\">\n              <Field\n                name=\"order.comment\"\n                label=\"Опис замовлення\"\n                error={errors?.order?.comment}\n                validator={validateField}\n                numeric={false}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n            </div>\n\n            <div className=\"row__four\">\n              <div className=\"controls\">\n                <SwitchControl\n                  name=\"onAcceptance\"\n                  isChecked={values.onAcceptance}\n                  label=\"На погодженні\"\n                  disabled={newOrderQuery.isFetching}\n                />\n                <SwitchControl\n                  name=\"clearFields\"\n                  isChecked={values.clearFields}\n                  label=\"Очищати поля\"\n                  disabled={newOrderQuery.isFetching}\n                />\n                <SwitchControl\n                  name=\"isUrgently\"\n                  isChecked={values.isUrgently}\n                  label=\"Терміново\"\n                  disabled={newOrderQuery.isFetching}\n                />\n              </div>\n\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={newOrderQuery.isFetching}\n                type=\"submit\"\n              >\n                Зберегти замовлення\n              </Button>\n\n              <Button\n                className={classes.clear}\n                onClick={(e) => clearAndUnsort(e, handleReset)}\n                disabled={newOrderQuery.isFetching}\n                variant=\"contained\"\n                type=\"button\"\n              >\n                <RefreshIcon></RefreshIcon>\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n      <InfoMessage\n        type=\"success\"\n        open={showOrderInfo.success}\n        onClose={handleClose}\n        message=\"Замовлення успішно додано.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showOrderInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при додаванні замовлення.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showCELinkInfo.success}\n        onClose={handleClose}\n        message=\"Зв'язок збережено.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showCELinkInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні зв'язку.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showDimensionsInfo.success}\n        onClose={handleClose}\n        message=\"Розміри збережено.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showDimensionsInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні розмірів.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showPriceInfo.success}\n        onClose={handleClose}\n        message=\"Ціна прив'язана.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showPriceInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні ціни.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showOrderKindInfo.success}\n        onClose={handleClose}\n        message=\"Тип успішно створений.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showOrderKindInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при створенні типу. Можливо не вибраний вид.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showOrderTypeInfo.success}\n        onClose={handleClose}\n        message=\"Вид успішно створений.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showOrderTypeInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при створенні виду.\"\n      />\n    </div>\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\nimport {UPDATE_SORTING} from \"../context/actions\";\nimport store from \"../context/store\";\nimport {EmptySort} from \"../models/SortObject\";\n\nexport default function useSaveOrder() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.post(\"/api/orders/\", params.newOrder), {\n    onSuccess: (_, passedParams) => {\n      passedParams.setStatus({success: true, error: false});\n      queryClient.invalidateQueries([\"customers\"]);\n      if (passedParams.isReset) {\n        store.dispatch(UPDATE_SORTING({...EmptySort}, \"main\"));\n      } else {\n        queryClient.invalidateQueries([\"orders\"]);\n      }\n      passedParams.resetForm();\n    },\n    onError: (_, passedParams) => {\n      passedParams.setStatus({success: false, error: true});\n    },\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveCELink() {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (params) =>\n      Axios.get(\"/api/ce-links/\" + params.customerId + \"/\" + params.entrepreneurId),\n    {\n      onSuccess: (_, passedParams) => {\n        queryClient.invalidateQueries(\"ce-links\");\n        passedParams.setStatus({success: true, error: false});\n      },\n      onError: (_, passedParams) => {\n        passedParams.setStatus({success: false, error: true});\n      },\n    }\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveCELink() {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (params) =>\n      Axios.get(\n        \"/api/cp-links/\" +\n          params.customerId +\n          \"/\" +\n          params.orderKindId +\n          \"/\" +\n          params.price\n      ),\n    {\n      onSuccess: (_, passedParams) => {\n        queryClient.invalidateQueries(\"cp-links\");\n        passedParams.setStatus({success: true, error: false});\n      },\n      onError: (_, passedParams) => {\n        passedParams.setStatus({success: false, error: true});\n      },\n    }\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveOrderKind() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.post(\"/api/order-kinds/\", params.orderKind), {\n    onError: (_, params) => {\n      params.setStatus({success: false, error: true});\n    },\n    onSuccess: (response, params) => {\n      params.orderType.orderKinds.push(response.data);\n      queryClient.invalidateQueries([\"orderTypes\"]);\n      params.setStatus({success: true, error: false});\n    },\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveOrderType() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.post(\"/api/order-types/\", params.orderType), {\n    onError: (_, params) => {\n      params.setStatus({success: false, error: true});\n    },\n    onSuccess: (_, params) => {\n      queryClient.invalidateQueries([\"orderTypes\"]);\n      params.setStatus({success: true, error: false});\n    },\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveDimensions() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.put(\"/api/order-kinds/\", params.orderKind), {\n    onSuccess: (_, passedParams) => {\n      queryClient.invalidateQueries(\"orderTypes\");\n      passedParams.setStatus({success: true, error: false});\n    },\n    onError: (_, passedParams) => {\n      passedParams.setStatus({success: false, error: true});\n    },\n  });\n}\n","import {makeStyles} from \"@material-ui/core\";\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\nimport {fieldToTextField} from \"formik-material-ui\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(() => ({\n  datepicker: {\n    margin: 0,\n\n    \"& .MuiButtonBase-root\": {\n      padding: 2,\n    },\n\n    \"& .MuiOutlinedInput-input\": {\n      padding: 8,\n    },\n\n    \"& .MuiInputLabel-outlined\": {\n      transform: \"translate(14px, 10px) scale(1)\",\n    },\n\n    \"& .MuiInputLabel-shrink\": {\n      transform: \"translate(14px, -4px) scale(0.75)\",\n    },\n\n    \"& .MuiOutlinedInput-adornedEnd\": {\n      paddingRight: 3,\n    },\n\n    \"& .MuiInputAdornment-root\": {\n      width: \"25%\",\n      marginLeft: 0,\n      justifyContent: \"flex-end\",\n    },\n  },\n}));\n\nfunction DatePicker({label, validator, onTouch = false, ...props}) {\n  const classes = useStyles();\n  const {\n    form: {setFieldValue},\n  } = props;\n  const {...field} = fieldToTextField(props);\n  const {name} = field;\n\n  return (\n    <KeyboardDatePicker\n      {...props}\n      {...field}\n      autoOk={true}\n      autoComplete=\"off\"\n      helperText={\"\"}\n      className={classes.datepicker}\n      inputVariant=\"outlined\"\n      variant=\"inline\"\n      format=\"dd/MM/yyyy\"\n      margin=\"normal\"\n      label={label}\n      onChange={(value) => {\n        setFieldValue(name, value);\n\n        if (onTouch) {\n          onTouch(true);\n        }\n\n        if (validator) {\n          validator(name);\n        }\n      }}\n      KeyboardButtonProps={{\n        \"aria-label\": \"change date\",\n      }}\n    />\n  );\n}\n\nexport default DatePicker;\n","import {TextField, withStyles} from \"@material-ui/core\";\nimport {useFormikContext} from \"formik\";\nimport React from \"react\";\n\nconst CustomTextField = withStyles({\n  root: {\n    \"& .MuiInputLabel-marginDense\": {\n      transform: \"translate(14px, 9px) scale(1)\",\n    },\n\n    \"& .MuiInputLabel-shrink\": {\n      transform: \"translate(14px, -4px) scale(0.75)\",\n    },\n  },\n})(TextField);\n\nconst DependentInput = ({name, label, field, error, validator, value, ...props}) => {\n  const {onChange} = field;\n  const {\n    values: {payment},\n    setFieldValue,\n  } = useFormikContext();\n\n  React.useEffect(() => {\n    if (payment.paymentType) {\n      setFieldValue(\"payment.percentage\", payment.paymentType?.paymentPercentage);\n    } else {\n      setFieldValue(\"payment.percentage\", 0);\n    }\n  }, [payment.paymentType, setFieldValue]);\n\n  return (\n    <CustomTextField\n      {...props}\n      {...field}\n      error={!!error}\n      id=\"metrics\"\n      size=\"small\"\n      variant=\"outlined\"\n      autoComplete=\"off\"\n      label={label}\n      onChange={(e) => {\n        if (e.target.value.match(/^\\d*\\.?\\d*$/) || e.target.value.length === 0) {\n          setFieldValue(\"payment.percentage\", e.target.value);\n          onChange(e);\n        }\n        validator(name);\n      }}\n    />\n  );\n};\n\nexport default DependentInput;\n","import Axios, {CancelToken} from \"axios\";\n\nexport const fetchCustomers = async (roles) => {\n  if (roles.includes(\"ROLE_CUSTOMER\")) return [];\n  const source = CancelToken.source();\n  const res = await Axios.get(\"/api/customers/\", {\n    cancelToken: source.token,\n  });\n  res.cancel = () => source.cancel(\"Query was cancelled by React Query\");\n  return res.data;\n};\n\nexport const fetchEntrepreneurs = async (roles) => {\n  if (roles.includes(\"ROLE_CUSTOMER\")) return [];\n  const res = await Axios.get(\"/api/entrepreneurs/\");\n  return res.data;\n};\n\nexport const fetchOrderTypes = async (roles) => {\n  if (roles.includes(\"ROLE_CUSTOMER\")) return [];\n  const res = await Axios.get(\"/api/order-types/\");\n  return res.data;\n};\n\nexport const fetchOrderKinds = async (roles) => {\n  if (roles.includes(\"ROLE_CUSTOMER\")) return [];\n  const res = await Axios.get(\"/api/order-kinds/\");\n  return res.data;\n};\n\nexport const fetchStatuses = async (roles) => {\n  if (roles.includes(\"ROLE_CUSTOMER\")) return [];\n  const res = await Axios.get(\"/api/orders/statuses/\");\n  return res.data;\n};\n\nexport const fetchEmployees = async (roles) => {\n  if (roles.includes(\"ROLE_CUSTOMER\")) return [];\n  const res = await Axios.get(\"/api/employees/\");\n  return res.data;\n};\n\nexport const fetchPaymentMethods = async () => {\n  const res = await Axios.get(\"/api/payments/\");\n  return res.data;\n};\n\nexport const fetchCELinks = async (roles) => {\n  if (roles.includes(\"ROLE_CUSTOMER\")) return [];\n  const source = CancelToken.source();\n  const res = await Axios.get(\"/api/ce-links/\", {\n    cancelToken: source.token,\n  });\n  res.cancel = () => source.cancel(\"Query was cancelled by React Query\");\n  return res.data;\n};\n\nexport const fetchCPLinks = async (roles) => {\n  if (roles.includes(\"ROLE_CUSTOMER\")) return [];\n  const source = CancelToken.source();\n  const res = await Axios.get(\"/api/cp-links/\", {\n    cancelToken: source.token,\n  });\n  res.cancel = () => source.cancel(\"Query was cancelled by React Query\");\n  return res.data;\n};\n","import {useQuery} from \"react-query\";\nimport * as DataService from \"../services/customer-service\";\n\nexport default function usePaymentMethods() {\n  return useQuery(\"paymentMethods\", DataService.fetchPaymentMethods, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import {Button} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {LinkOutlined} from \"@material-ui/icons\";\nimport {Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport * as yup from \"yup\";\nimport ComboBox from \"./ComboBox\";\nimport {UPDATE_SORTING} from \"./context/actions\";\nimport store from \"./context/store\";\nimport {useSelector} from \"react-redux\";\nimport DatePicker from \"./DatePicker\";\nimport DependentInput from \"./DependentInput\";\nimport useMakePayment from \"./hooks/useMakePayment\";\nimport usePaymentMethods from \"./hooks/usePaymentMethods\";\nimport useUpdatePaymentMethod from \"./hooks/useUpdatePaymentMethod\";\nimport InfoMessage from \"./InfoMessage\";\nimport InputField from \"./InputField\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {EmptySort} from \"./models/SortObject\";\nimport {setCurrentTime} from \"./services/utils\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    margin: \"0 auto\",\n    width: \"52%\",\n  },\n  row__one: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"2fr 1fr\",\n    margin: \".5rem auto 1rem auto\",\n  },\n  row__two: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"1fr 1fr 0.05fr 1fr 1fr\",\n    margin: \"1rem auto\",\n\n    \"& .MuiOutlinedInput-input\": {\n      padding: \"8px 8px\",\n    },\n  },\n  button: {\n    gridColumn: 2,\n    width: \"16rem\",\n    height: \"2.375rem\",\n    justifySelf: \"center\",\n  },\n  clear: {\n    backgroundColor: \"#fff\",\n    minWidth: 0,\n    justifySelf: \"flex-end\",\n    margin: \"0px 0px 1px 0\",\n    width: \"2.4rem\",\n  },\n  lock: {\n    padding: 0,\n    width: \"100%\",\n    backgroundColor: \"white !important\",\n    minWidth: 0,\n\n    \"&:hover\": {\n      backgroundColor: \"white\",\n    },\n  },\n  svg: {\n    fill: \"rgba(0, 0, 0, 0.23)\",\n\n    \"&:hover\": {\n      fill: \"black\",\n    },\n  },\n  successInfo: {\n    display: \"flex\",\n  },\n  successText: {\n    margin: \"auto .5rem\",\n    color: \"#27A637\",\n  },\n  errorInfo: {\n    display: \"flex\",\n  },\n  errorText: {\n    margin: \"auto .5rem\",\n    color: \"#d2000a\",\n  },\n  errorSvg: {\n    fontSize: \"2.54rem\",\n    fill: \"#d2000a\",\n  },\n  successSvg: {\n    fontSize: \"2.54rem\",\n    fill: \"#27A637\",\n  },\n}));\n\nconst validationSchema = yup.object({\n  payment: yup.object({\n    entrepreneur: yup.object().nullable(),\n    customer: yup.object().required(),\n    paymentDate: yup.date().required(),\n    sum: yup.number().lessThan(2000000000).positive().required(),\n    percentage: yup.number().lessThan(2000000000).positive().min(0).required(),\n    paymentType: yup.object().required(),\n  }),\n});\n\nfunction PaymentForm() {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const makePaymentQuery = useMakePayment();\n  const paymentMethods = usePaymentMethods();\n  const sortState = useSelector((state) => state.sortSelections);\n  const updatePaymentMethodQuery = useUpdatePaymentMethod();\n  const [showPaymentInfo, setShowPaymentInfo] = React.useState({\n    success: false,\n    error: false,\n  });\n  const [showPercentageLinkInfo, setShowPercentageLinkInfo] = React.useState({\n    success: false,\n    error: false,\n  });\n\n  const handleClose = () => {\n    setShowPaymentInfo({success: false, error: false});\n    setShowPercentageLinkInfo({success: false, error: false});\n  };\n\n  const linkPercentage = (paymentMethod, percentage) => {\n    paymentMethod.paymentPercentage = percentage;\n    updatePaymentMethodQuery.mutate({\n      paymentMethod: paymentMethod,\n      setStatus: setShowPercentageLinkInfo,\n    });\n  };\n\n  const clearAndUnsort = (setFieldValue) => {\n    queryClient.invalidateQueries(\"customers\");\n    store.dispatch(UPDATE_SORTING({...EmptySort}, \"payment\"));\n    setFieldValue(\"payment.customer\", null);\n    setFieldValue(\"payment.entrepreneur\", null);\n    setFieldValue(\"payment.paymentDate\", new Date());\n    setFieldValue(\"payment.paymentType\", null);\n    setFieldValue(\"payment.percentage\", 0);\n    setFieldValue(\"payment.sum\", null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik\n        validateOnChange={false}\n        validateOnMount={false}\n        validateOnBlur={false}\n        initialValues={{payment: {...sortState.payment, paymentDate: new Date()}}}\n        validationSchema={validationSchema}\n        onSubmit={(form) => {\n          setCurrentTime(form.payment.paymentDate);\n          form.payment.receiver = form.payment.paymentType.typeName;\n          makePaymentQuery.mutate({\n            payment: form.payment,\n            setStatus: setShowPaymentInfo,\n          });\n        }}\n      >\n        {({values, errors, validateField, setFieldValue}) => (\n          <Form style={{margin: \"0 auto\"}}>\n            <div className={classes.row__one}>\n              <Field\n                name=\"payment.customer\"\n                label=\"Замовник\"\n                error={errors?.payment?.customer}\n                component={ComboBox}\n                validator={validateField}\n                sortKey=\"customer\"\n                sortPage=\"payment\"\n                disabled={makePaymentQuery.isLoading}\n                getName={(option) => option.customerName || \"\"}\n                options={queryClient.getQueryData(\"customers\") || []}\n              />\n              <Field\n                name=\"payment.entrepreneur\"\n                label=\"Підприємець\"\n                error={errors?.payment?.entrepreneur}\n                validator={validateField}\n                component={ComboBox}\n                sortKey=\"entrepreneur\"\n                sortPage=\"payment\"\n                disabled={makePaymentQuery.isLoading}\n                getName={(option) => option.fullName || \"\"}\n                options={queryClient.getQueryData(\"entrepreneurs\") || []}\n              />\n            </div>\n\n            <div className={classes.row__two}>\n              <Field\n                component={DatePicker}\n                label=\"Дата\"\n                name=\"payment.paymentDate\"\n                validator={validateField}\n                disabled={makePaymentQuery.isLoading}\n              />\n\n              <Field\n                name=\"payment.paymentType\"\n                label=\"Тип оплати\"\n                error={errors?.payment?.paymentType}\n                component={ComboBox}\n                validator={validateField}\n                disabled={makePaymentQuery.isLoading}\n                getName={(option) => option.typeName || \"\"}\n                options={paymentMethods?.data || []}\n              />\n              <Button\n                className={classes.lock}\n                disableRipple={true}\n                onClick={() =>\n                  linkPercentage(values.payment.paymentType, values.payment.percentage)\n                }\n              >\n                <LinkOutlined className={classes.svg} />\n              </Button>\n              <Field\n                name=\"payment.percentage\"\n                label=\"Відсоток\"\n                error={errors?.payment?.percentage}\n                validator={validateField}\n                component={DependentInput}\n                disabled={makePaymentQuery.isLoading}\n              />\n              <Field\n                name=\"payment.sum\"\n                label=\"Сума\"\n                error={errors?.payment?.sum}\n                validator={validateField}\n                component={InputField}\n                disabled={makePaymentQuery.isLoading}\n              />\n            </div>\n\n            <div className=\"sort__row__three\">\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={makePaymentQuery.isLoading}\n                className={classes.button}\n                type=\"submit\"\n              >\n                Оплатити\n              </Button>\n\n              <Button\n                className={classes.clear}\n                onClick={(e) => clearAndUnsort(setFieldValue)}\n                disabled={makePaymentQuery.isLoading}\n                variant=\"contained\"\n                type=\"button\"\n              >\n                <RefreshIcon></RefreshIcon>\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n      <InfoMessage\n        type=\"success\"\n        open={showPaymentInfo.success}\n        onClose={handleClose}\n        message=\"Оплата успішно внесена.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showPaymentInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при внесенні оплати.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showPercentageLinkInfo.success}\n        onClose={handleClose}\n        message=\"Зв'язок успішно збережений.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showPercentageLinkInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні зв'язку.\"\n      />\n    </div>\n  );\n}\n\nexport default PaymentForm;\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useMakePayment() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.post(\"/api/payments/\", params.payment), {\n    onError: (_, params) => {\n      params.setStatus({success: false, error: true});\n    },\n    onSuccess: (_, params) => {\n      params.setStatus({success: true, error: false});\n      queryClient.invalidateQueries([\"customers\"]);\n      queryClient.invalidateQueries([\"orders\"]);\n      params.payment.sum = 0;\n    },\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useUpdatePaymentMethod() {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (params) => Axios.put(\"/api/payments/types/\", params.paymentMethod),\n    {\n      onSuccess: (_, passedParams) => {\n        queryClient.invalidateQueries(\"paymentMethods\");\n        passedParams.setStatus({success: true, error: false});\n      },\n      onError: (_, passedParams) => {\n        passedParams.setStatus({success: false, error: true});\n      },\n    }\n  );\n}\n","import {Button} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {Field, Form, Formik} from \"formik\";\nimport React, {useEffect} from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as yup from \"yup\";\nimport ComboBox from \"./ComboBox\";\nimport {SET_ACTIVE_SORTING, UPDATE_SORTING} from \"./context/actions\";\nimport DatePicker from \"./DatePicker\";\nimport InputField from \"./InputField\";\nimport {EmptySort} from \"./models/SortObject\";\nimport \"./SortForm.css\";\nimport SwitchControl from \"./SwitchControl\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    margin: \"0 auto\",\n    width: \"52%\",\n  },\n  button: {\n    width: \"16rem\",\n    justifySelf: \"center\",\n  },\n  clear: {\n    backgroundColor: \"#fff\",\n    minWidth: 0,\n    justifySelf: \"flex-end\",\n    margin: \"0px 0px 1px 0\",\n    width: \"2.4rem\",\n  },\n}));\n\nconst validationSchema = yup.object({\n  sort: yup.object({\n    customer: yup.object().nullable(),\n    status: yup.object().nullable(),\n    dateFrom: yup.date().nullable(),\n    dateTill: yup.date().nullable(),\n    orderKind: yup.object().nullable(),\n    orderType: yup.object().nullable(),\n    details: yup.string().trim().max(255).nullable(),\n  }),\n});\n\nfunction SortForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n  const authState = useSelector((state) => state.auth);\n  const sortState = useSelector((state) => state.sortSelections);\n\n  useEffect(() => {\n    if (sortState.active === \"sort\") return;\n    dispatch(SET_ACTIVE_SORTING(\"sort\"));\n    // eslint-disable-next-line\n  }, []);\n\n  const clearAndUnsort = (setFieldValue) => {\n    dispatch(UPDATE_SORTING({...EmptySort}, \"sort\"));\n    setFieldValue(\"sort.customer\", null);\n    setFieldValue(\"sort.orderType\", null);\n    setFieldValue(\"sort.orderKind\", null);\n    setFieldValue(\"sort.dateFrom\", null);\n    setFieldValue(\"sort.dateTill\", null);\n    setFieldValue(\"sort.status\", null);\n    setFieldValue(\"sort.details\", \"\");\n    setFieldValue(\"showUserOrders\", false);\n    queryClient.invalidateQueries(\"customers\");\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik\n        validateOnChange={false}\n        validateOnMount={false}\n        validateOnBlur={false}\n        initialValues={{sort: sortState.sort, showUserOrders: false}}\n        onSubmit={(form) => {\n          form.showUserOrders\n            ? (form.sort.employee = authState.loggedUser)\n            : (form.sort.employee = null);\n          form.sort.details = form.sort.details.trim();\n          dispatch(UPDATE_SORTING(form.sort, \"sort\"));\n        }}\n        validationSchema={validationSchema}\n      >\n        {({values, errors, handleReset, validateField, setFieldValue}) => (\n          <Form>\n            <div className=\"sort__row__one\">\n              <Field\n                name=\"sort.customer\"\n                label=\"Замовник\"\n                error={errors?.sort?.customer}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.customerName || \"\"}\n                options={queryClient.getQueryData(\"customers\") || []}\n              />\n              <Field\n                name=\"sort.orderType\"\n                label=\"Вид\"\n                error={errors?.sort?.orderType}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.typeName || \"\"}\n                options={queryClient.getQueryData(\"orderTypes\") || []}\n              />\n              <Field\n                name=\"sort.orderKind\"\n                label=\"Тип\"\n                error={errors?.sort?.orderKind}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.kindName || \"\"}\n                options={\n                  values.sort.orderType?.typeName === \"CTP\"\n                    ? values.sort.orderType?.orderKinds.sort((a, b) =>\n                        parseInt(a.kindName.substring(0, a.kindName.indexOf(\"х\")), 10) >\n                        parseInt(b.kindName.substring(0, b.kindName.indexOf(\"х\")), 10)\n                          ? 1\n                          : -1\n                      ) || []\n                    : values.sort.orderType?.orderKinds\n                }\n              />\n            </div>\n\n            <div className=\"sort__row__two\">\n              <div className=\"datepickers\">\n                <Field\n                  component={DatePicker}\n                  disabled={false}\n                  label=\"Від\"\n                  name=\"sort.dateFrom\"\n                />\n                <Field\n                  component={DatePicker}\n                  disabled={false}\n                  label=\"До\"\n                  name=\"sort.dateTill\"\n                />\n              </div>\n              <Field\n                name=\"sort.status\"\n                label=\"Статус\"\n                error={errors?.sort?.status}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.name || \"\"}\n                options={queryClient.getQueryData(\"statuses\") || []}\n              />\n              <Field\n                name=\"sort.details\"\n                label=\"Опис замовлення\"\n                error={errors?.sort?.details}\n                numeric={false}\n                component={InputField}\n                validator={validateField}\n              />\n            </div>\n\n            <div className=\"sort__row__three\">\n              <SwitchControl\n                name=\"showUserOrders\"\n                isChecked={values.showUserOrders}\n                label=\"Лише мої замовлення\"\n              />\n\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                className={classes.button}\n                type=\"submit\"\n              >\n                Сортувати\n              </Button>\n\n              <Button\n                className={classes.clear}\n                onClick={(e) => clearAndUnsort(setFieldValue)}\n                variant=\"contained\"\n                type=\"button\"\n              >\n                <RefreshIcon></RefreshIcon>\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default SortForm;\n","import {Button, Collapse, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport \"./ActionBar.css\";\nimport AddOrderForm from \"./AddOrderForm\";\nimport {SET_ACTIVE_SORTING, SET_MAIN_TAB} from \"./context/actions\";\nimport PaymentForm from \"./PaymentForm\";\nimport SortForm from \"./SortForm\";\n\nexport default function ActionBar() {\n  const dispatch = useDispatch();\n  const authState = useSelector((store) => store.auth);\n  const sortState = useSelector((state) => state.sortSelections);\n\n  const open = (tabId) => {\n    if (sortState.mainTab === tabId) {\n      dispatch(SET_MAIN_TAB(0));\n    } else {\n      dispatch(SET_MAIN_TAB(tabId));\n    }\n  };\n\n  const hideFor = (roles) => !roles.some((role) => authState.roles.includes(role));\n\n  const setSortView = (type) => {\n    if (sortState.active === type) return;\n    dispatch(SET_ACTIVE_SORTING(type));\n  };\n\n  const showCustomerInfo = () => {\n    if (!sortState[sortState.active].customer) return;\n    return (\n      <Typography variant=\"subtitle1\">\n        {sortState[sortState.active].customer?.debtor && (\n          <img\n            className=\"debtor-mark\"\n            src=\"img/Blackmark.svg\"\n            width=\"19\"\n            height=\"19\"\n            alt=\"blackmark\"\n          />\n        )}\n        <strong>{sortState[sortState.active].customer?.customerName}</strong>{\" \"}\n        {sortState[sortState.active].customer?.customerGroup}:{\" \"}\n        {sortState[sortState.active].customer?.info}\n      </Typography>\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"action_bar_container\">\n        <div className=\"action__bar\">\n          <div className=\"action__bar__info\">{showCustomerInfo()}</div>\n          <div className=\"action__bar__button\">\n            {hideFor([\"ROLE_GROUNDFLOOR\", \"ROLE_UVPRINT\", \"ROLE_CUSTOMER\"]) && (\n              <Button\n                variant=\"contained\"\n                color={sortState.mainTab === 1 ? \"\" : \"primary\"}\n                onClick={() => open(1)}\n              >\n                Додати замовлення\n              </Button>\n            )}\n            {hideFor([\"ROLE_CUSTOMER\"]) && (\n              <Button\n                style={{marginLeft: \".5rem\"}}\n                variant=\"contained\"\n                color={sortState.mainTab === 2 ? \"\" : \"primary\"}\n                onClick={() => open(2)}\n              >\n                Сортування\n              </Button>\n            )}\n            {hideFor([\"ROLE_GROUNDFLOOR\", \"ROLE_UVPRINT\", \"ROLE_CUSTOMER\"]) && (\n              <Button\n                style={{marginLeft: \".5rem\"}}\n                variant=\"contained\"\n                color={sortState.mainTab === 3 ? \"\" : \"primary\"}\n                onClick={() => open(3)}\n              >\n                Внести оплату\n              </Button>\n            )}\n          </div>\n        </div>\n\n        <Collapse\n          in={sortState.mainTab === 1}\n          timeout={300}\n          onEntered={() => setSortView(\"main\")}\n          unmountOnExit\n        >\n          <AddOrderForm />\n        </Collapse>\n\n        <Collapse\n          in={sortState.mainTab === 2}\n          timeout={300}\n          onEntered={() => setSortView(\"sort\")}\n          unmountOnExit\n        >\n          <SortForm />\n        </Collapse>\n\n        <Collapse\n          in={sortState.mainTab === 3}\n          timeout={300}\n          onEntered={() => setSortView(\"payment\")}\n          unmountOnExit\n        >\n          <PaymentForm />\n        </Collapse>\n      </div>\n    </div>\n  );\n}\n","import {Button} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useDispatch} from \"react-redux\";\nimport * as yup from \"yup\";\nimport ComboBox from \"./ComboBox\";\nimport {useSelector} from \"react-redux\";\nimport {UPDATE_SORTING} from \"./context/actions\";\nimport DatePicker from \"./DatePicker\";\nimport usePaymentMethods from \"./hooks/usePaymentMethods\";\nimport {EmptyFilter} from \"./models/FilterObject\";\nimport \"./SortForm.css\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    margin: \"0 auto\",\n    width: \"60%\",\n  },\n  row: {\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr\",\n  },\n  button: {\n    width: \"16rem\",\n    justifySelf: \"center\",\n    gridColumn: 2,\n  },\n  clear: {\n    backgroundColor: \"#fff\",\n    minWidth: 0,\n    justifySelf: \"flex-end\",\n    margin: \"0px 0px 1px 0\",\n    width: \"2.4rem\",\n  },\n}));\n\nconst validationSchema = yup.object({\n  sort: yup.object({\n    entrepreneur: yup.object().nullable(),\n    customer: yup.object().nullable(),\n    // status: yup.object().nullable(),\n    employee: yup.object().nullable(),\n    dateFrom: yup.date().nullable(),\n    dateTill: yup.date().nullable(),\n    orderKind: yup.object().nullable(),\n    orderType: yup.object().nullable(),\n    details: yup.string().trim().max(255).nullable(),\n    receiver: yup.string().trim().max(255).nullable(),\n  }),\n});\n\nfunction SortForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n  const paymentMethods = usePaymentMethods();\n  const sortState = useSelector((state) => state.sortSelections);\n\n  const clearAndUnsort = (setFieldValue) => {\n    dispatch(UPDATE_SORTING({...EmptyFilter}, \"filter\"));\n    setFieldValue(\"sort.customer\", null);\n    setFieldValue(\"sort.orderType\", null);\n    setFieldValue(\"sort.orderKind\", null);\n    setFieldValue(\"sort.dateFrom\", null);\n    setFieldValue(\"sort.dateTill\", null);\n    setFieldValue(\"sort.status\", null);\n    setFieldValue(\"sort.employee\", null);\n    setFieldValue(\"sort.receiver\", \"\");\n    setFieldValue(\"sort.details\", \"\");\n    setFieldValue(\"showUserOrders\", false);\n    queryClient.invalidateQueries(\"customers\");\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik\n        validateOnChange={false}\n        validateOnMount={false}\n        validateOnBlur={false}\n        initialValues={{sort: sortState.filter}}\n        onSubmit={(form) => dispatch(UPDATE_SORTING(form.sort, \"filter\"))}\n        validationSchema={validationSchema}\n      >\n        {({values, errors, validateField, setFieldValue}) => (\n          <Form>\n            <div className={`${classes.row} sort__row__one`}>\n              <Field\n                name=\"sort.customer\"\n                label=\"Замовник\"\n                error={errors?.sort?.customer}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.customerName || \"\"}\n                options={queryClient.getQueryData(\"customers\") || []}\n              />\n              <Field\n                name=\"sort.entrepreneur\"\n                label=\"Підприємець\"\n                error={errors?.sort?.entrepreneur}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.fullName || \"\"}\n                options={queryClient.getQueryData(\"entrepreneurs\") || []}\n              />\n              <Field\n                name=\"sort.orderType\"\n                label=\"Вид\"\n                error={errors?.sort?.orderType}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.typeName || \"\"}\n                options={queryClient.getQueryData(\"orderTypes\") || []}\n              />\n              <Field\n                name=\"sort.orderKind\"\n                label=\"Тип\"\n                error={errors?.sort?.orderKind}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.kindName || \"\"}\n                options={\n                  values.sort.orderType?.typeName === \"CTP\"\n                    ? values.sort.orderType?.orderKinds.sort((a, b) =>\n                        parseInt(a.kindName.substring(0, a.kindName.indexOf(\"х\")), 10) >\n                        parseInt(b.kindName.substring(0, b.kindName.indexOf(\"х\")), 10)\n                          ? 1\n                          : -1\n                      ) || []\n                    : values.sort.orderType?.orderKinds || []\n                }\n              />\n              <Field\n                name=\"sort.receiver\"\n                label=\"Отримувач\"\n                error={errors?.sort?.receiver}\n                component={ComboBox}\n                validator={validateField}\n                options={\n                  queryClient\n                    .getQueryData(\"employees\")\n                    ?.map((employee) => employee.name)\n                    .concat(paymentMethods?.data.map((method) => method.typeName)) || []\n                }\n              />\n            </div>\n\n            <div className={`${classes.row} sort__row__two`}>\n              <Field\n                component={DatePicker}\n                disabled={false}\n                label=\"Від\"\n                name=\"sort.dateFrom\"\n              />\n              <Field component={DatePicker} disabled={false} label=\"До\" name=\"sort.dateTill\" />\n\n              <Field\n                component={DatePicker}\n                disabled={false}\n                label=\"Оплата від\"\n                name=\"sort.payDateFrom\"\n              />\n              <Field\n                component={DatePicker}\n                disabled={false}\n                label=\"Оплата до\"\n                name=\"sort.payDateTill\"\n              />\n              {/* <Field\n                name=\"sort.status\"\n                label=\"Статус\"\n                error={errors?.sort?.status}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.name || \"\"}\n                options={queryClient.getQueryData(\"statuses\") || []}\n              /> */}\n\n              <Field\n                name=\"sort.employee\"\n                label=\"Оператор\"\n                error={errors?.sort?.employee}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.name || \"\"}\n                options={queryClient.getQueryData(\"employees\") || []}\n              />\n            </div>\n\n            <div className=\"sort__row__three\">\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                className={classes.button}\n                type=\"submit\"\n              >\n                Сортувати\n              </Button>\n\n              <Button\n                className={classes.clear}\n                onClick={(e) => clearAndUnsort(setFieldValue)}\n                variant=\"contained\"\n                type=\"button\"\n              >\n                <RefreshIcon></RefreshIcon>\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default SortForm;\n","import {Button, Collapse} from \"@material-ui/core\";\nimport React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport \"./ActionBar.css\";\nimport {SET_ACTIVE_SORTING, SET_FILTER_OPENED, SET_FILTER_CLOSED} from \"./context/actions\";\nimport FilterForm from \"./FilterForm\";\n\nexport default function SortActionBar() {\n  const dispatch = useDispatch();\n  const sortState = useSelector((state) => state.sortSelections);\n\n  const toggle = () =>\n    sortState.filterTab ? dispatch(SET_FILTER_CLOSED()) : dispatch(SET_FILTER_OPENED());\n\n  const setSortView = (type) => {\n    if (sortState.active === type) return;\n    dispatch(SET_ACTIVE_SORTING(type));\n  };\n\n  return (\n    <div>\n      <div className=\"action_bar_container\">\n        <div className=\"action__bar\">\n          <div className=\"action__bar__info\"></div>\n          <div className=\"action__bar__button\">\n            <Button\n              style={{marginLeft: \".5rem\"}}\n              variant=\"contained\"\n              color={sortState.filterTab ? \"\" : \"primary\"}\n              onClick={toggle}\n            >\n              Сортування\n            </Button>\n          </div>\n        </div>\n\n        <Collapse\n          in={sortState.filterTab}\n          timeout={300}\n          onEntered={() => setSortView(\"filter\")}\n          unmountOnExit\n        >\n          <FilterForm />\n        </Collapse>\n      </div>\n    </div>\n  );\n}\n","import {Button, Link, TextField} from \"@material-ui/core\";\nimport {XGrid} from \"@material-ui/x-grid\";\nimport React, {useState} from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useSelector} from \"react-redux\";\nimport \"./ClientTable.css\";\nimport {SHOW_CUSTOMER_MODAL} from \"./context/actions\";\nimport store from \"./context/store\";\nimport useExportCustomers from \"./hooks/useExportCustomers\";\nimport {fixCustomers} from \"./services/utils\";\n\nconst columns = [\n  {\n    field: \"customerName\",\n    headerName: \"Назва замовника\",\n    flex: 3,\n    renderCell: (params) => (\n      <Link\n        className=\"name-link\"\n        onClick={() => store.dispatch(SHOW_CUSTOMER_MODAL(params.row))}\n      >\n        <b>{params.value}</b>\n      </Link>\n    ),\n  },\n  {\n    field: \"debtor\",\n    headerName: \"Боржник\",\n    flex: 1.4,\n    cellClassName: \"centered\",\n    renderCell: (params) => {\n      if (params.value) {\n        return <img src=\"img/Blackmark.svg\" width=\"19\" height=\"19\" alt=\"blackmark\" />;\n      } else return <div></div>;\n    },\n  },\n  {\n    field: \"customerGroup\",\n    headerName: \"Група\",\n    flex: 5,\n  },\n  {\n    field: \"firstPerson\",\n    headerName: \"Особа 1\",\n    flex: 2,\n  },\n  {\n    field: \"firstPhone\",\n    headerName: \"Телефон 1\",\n    flex: 2.5,\n  },\n  {\n    field: \"firstEmail\",\n    headerName: \"Email 1\",\n    flex: 4,\n  },\n  {\n    field: \"city\",\n    headerName: \"Місто\",\n    flex: 1.3,\n  },\n  {\n    field: \"info\",\n    headerName: \"Інформація\",\n    flex: 6,\n  },\n];\n\nexport default function ClientsTable() {\n  const queryClient = useQueryClient();\n  const exportQuery = useExportCustomers();\n  const authState = useSelector((state) => state.auth);\n  const [q, setQ] = useState(\"\");\n\n  const filter = (rows) => {\n    return rows.filter(\n      (row) =>\n        row.customerName?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.customerGroup?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.firstPerson?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.firstPhone?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.firstEmail?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.city?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.info?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1\n    );\n  };\n\n  return (\n    <>\n      <TextField\n        variant=\"outlined\"\n        size=\"small\"\n        placeholder=\"Швидкий пошук\"\n        onChange={(e) => setQ(e.target.value)}\n        InputProps={{\n          endAdornment: authState.roles.includes(\"ROLE_ADMIN\") && (\n            <Button\n              className=\"export-btn\"\n              variant=\"outlined\"\n              onClick={() =>\n                exportQuery.mutate(\n                  filter(fixCustomers(queryClient.getQueryData(\"customers\") || []))\n                )\n              }\n            >\n              Експорт\n            </Button>\n          ),\n        }}\n      />\n      <div className=\"x-grid\">\n        <div className=\"frame\">\n          <div className=\"grid-holder\">\n            <XGrid\n              className=\"customers-grid\"\n              rows={filter(fixCustomers(queryClient.getQueryData(\"customers\") || []))}\n              columns={columns}\n              sortModel={[{field: \"customerName\", sort: \"asc\"}]}\n              loading={queryClient.isFetching(\"customers\")}\n              rowHeight={35}\n              headerHeight={35}\n              pagination={true}\n              disableSelectionOnClick={true}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation} from \"react-query\";\n\nexport default function useExportCustomers() {\n  return useMutation(\n    (customers) =>\n      Axios.post(\n        \"api/customers/export/\",\n        {customers: customers},\n        {\n          responseType: \"arraybuffer\",\n        }\n      ),\n    {\n      onError: (_, params) => {\n        params.setStatus({success: false, error: true});\n      },\n      onSuccess: (val, _) => {\n        const blob = new Blob([val.data], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        });\n\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n          window.navigator.msSaveOrOpenBlob(blob);\n          return;\n        }\n        const data = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = data;\n        link.download = \"Клієнти.xlsx\";\n        link.dispatchEvent(\n          new MouseEvent(\"click\", {bubbles: true, cancelable: true, view: window})\n        );\n      },\n    }\n  );\n}\n","import {Button, Typography} from \"@material-ui/core\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Modal from \"@material-ui/core/Modal\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as yup from \"yup\";\nimport {CLOSE_CUSTOMER_MODAL, SET_MAIN_TAB, UPDATE_SORTING} from \"./context/actions\";\nimport useSaveCustomer from \"./hooks/useSaveCustomer\";\nimport InfoMessage from \"./InfoMessage\";\nimport InputField from \"./InputField\";\nimport {EmptySort} from \"./models/SortObject\";\nimport SwitchControl from \"./SwitchControl\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"4px\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4),\n    width: \"40%\",\n\n    \"& .MuiOutlinedInput-inputMarginDense\": {\n      padding: \"8px !important\",\n    },\n  },\n  link: {\n    cursor: \"pointer\",\n    color: theme.palette.primary.main,\n  },\n  h2: {\n    textAlign: \"center\",\n    fontWeight: \"400\",\n    marginBottom: \"1rem\",\n  },\n  buttons: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 2fr 1fr\",\n    gap: \"2rem\",\n  },\n  clearButton: {\n    backgroundColor: \"rgb(210,0,10)\",\n    color: \"white\",\n    marginRight: \"1rem\",\n\n    \"&:hover\": {\n      backgroundColor: \"rgb(190,0,10)\",\n    },\n  },\n  rowOne: {\n    gridTemplateRows: \"1fr 1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    gridColumnGap: \"15px\",\n    gridRowGap: \"10px\",\n  },\n  rowTwo: {\n    gridTemplateRows: \"1fr 1fr 1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    gridRowGap: \"10px\",\n  },\n  longTextField: {\n    gridColumnStart: 1,\n    gridColumnEnd: 3,\n  },\n  billNo: {\n    gridColumn: 4,\n  },\n  switchHolder: {\n    gridColumn: 3,\n    justifySelf: \"end\",\n\n    \"& .MuiFormControlLabel-root\": {\n      margin: 0,\n    },\n  },\n  auxiliaryRow: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n    margin: \"2rem auto 1rem auto\",\n\n    \"& .MuiOutlinedInput-input\": {\n      padding: \"8px\",\n    },\n\n    \"& .MuiButtonBase-root\": {\n      padding: \"2px !important\",\n    },\n\n    \"& .MuiOutlinedInput-adornedEnd\": {\n      paddingRight: \"3px\",\n    },\n\n    \"& #date-picker-inline-label\": {\n      transform: \"translate(14px, 10px) scale(1)\",\n    },\n  },\n}));\n\nconst validationSchema = yup.object({\n  customer: yup.object({\n    customerName: yup.string().required(),\n    customerGroup: yup.string().nullable(),\n    city: yup.string().nullable(),\n    info: yup.string().nullable(),\n    firstPerson: yup.string().trim().max(25).nullable(),\n    firstPhone: yup.string().max(10).min(10).nullable(),\n    firstEmail: yup.string().email().nullable(),\n    secondPerson: yup.string().trim().max(25).nullable(),\n    secondPhone: yup.string().max(10).min(10).nullable(),\n    secondEmail: yup.string().email().nullable(),\n    thirdPerson: yup.string().trim().max(25).nullable(),\n    thirdPhone: yup.string().max(10).min(10).nullable(),\n    thirdEmail: yup.string().email().nullable(),\n  }),\n});\n\nexport default function CustomerForm() {\n  const classes = useStyles();\n  const customerModalState = useSelector((store) => store.showCustomerModal);\n  const saveCustomerQuery = useSaveCustomer();\n  const authState = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  const [showSavedInfo, setShowSavedInfo] = React.useState({\n    success: false,\n    error: false,\n  });\n\n  const handleClose = () => {\n    setShowSavedInfo({success: false, error: false});\n  };\n\n  const sortByCustomer = () => {\n    dispatch(UPDATE_SORTING({...EmptySort, customer: customerModalState.customer}, \"sort\"));\n    dispatch(SET_MAIN_TAB(2));\n    dispatch(CLOSE_CUSTOMER_MODAL());\n  };\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={customerModalState.show}\n        onClose={() => dispatch(CLOSE_CUSTOMER_MODAL())}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={customerModalState.show}>\n          <div className={classes.paper}>\n            <Formik\n              validateOnChange={false}\n              validateOnMount={false}\n              validateOnBlur={false}\n              initialValues={{customer: customerModalState.customer}}\n              onSubmit={(form) => {\n                saveCustomerQuery.mutate({\n                  customer: form.customer,\n                  setStatus: setShowSavedInfo,\n                });\n              }}\n              validationSchema={validationSchema}\n            >\n              {({values, errors, validateField}) => (\n                <Form>\n                  <Typography className={classes.h2} component=\"h2\" variant=\"h5\">\n                    {customerModalState.customer.customerName\n                      ? customerModalState.customer.customerName\n                      : \"Новий замовник\"}\n                  </Typography>\n                  <div className={`row__one ${classes.rowOne}`}>\n                    <Field\n                      className={classes.longTextField}\n                      name=\"customer.customerName\"\n                      label=\"Назва замовника\"\n                      error={errors?.customer?.customerName}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.customerGroup\"\n                      label=\"Група\"\n                      error={errors?.customer?.customerGroup}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      className={classes.longTextField}\n                      name=\"customer.info\"\n                      label=\"Примітка\"\n                      error={errors?.customer?.info}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.city\"\n                      label=\"Місто\"\n                      error={errors?.customer?.city}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                  </div>\n\n                  <div className={`${classes.rowTwo} row__two`}>\n                    <Field\n                      name=\"customer.firstPerson\"\n                      label=\"Конт. Особа 1\"\n                      error={errors?.customer?.firstPerson}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.firstPhone\"\n                      label=\"Телефон (без +38)\"\n                      error={errors?.customer?.firstPhone}\n                      validator={validateField}\n                      component={InputField}\n                      phone={true}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.firstEmail\"\n                      label=\"Email\"\n                      error={errors?.customer?.firstEmail}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n\n                    <Field\n                      name=\"customer.secondPerson\"\n                      label=\"Конт. Особа 2\"\n                      error={errors?.customer?.secondPerson}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.secondPhone\"\n                      label=\"Телефон (без +38)\"\n                      error={errors?.customer?.secondPhone}\n                      validator={validateField}\n                      component={InputField}\n                      phone={true}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.secondEmail\"\n                      label=\"Email\"\n                      error={errors?.customer?.secondEmail}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n\n                    <Field\n                      name=\"customer.thirdPerson\"\n                      label=\"Конт. Особа 3\"\n                      error={errors?.customer?.thirdPerson}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.thirdPhone\"\n                      label=\"Телефон (без +38)\"\n                      error={errors?.customer?.thirdPhone}\n                      validator={validateField}\n                      component={InputField}\n                      phone={true}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.thirdEmail\"\n                      label=\"Email\"\n                      error={errors?.customer?.thirdEmail}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                  </div>\n\n                  <div className={classes.buttons}>\n                    {(values.customer.customerId && (\n                      <Button\n                        style={{gridColumn: 1}}\n                        color=\"primary\"\n                        variant=\"contained\"\n                        className={classes.button}\n                        disabled={saveCustomerQuery.isLoading}\n                        onClick={sortByCustomer}\n                      >\n                        В сортування\n                      </Button>\n                    )) ||\n                      null}\n\n                    <Button\n                      style={{gridColumn: 2}}\n                      color=\"primary\"\n                      variant=\"contained\"\n                      className={classes.button}\n                      disabled={saveCustomerQuery.isLoading}\n                      type=\"submit\"\n                    >\n                      Зберегти замовника\n                    </Button>\n\n                    {(values.customer.customerId && authState.roles.includes(\"ROLE_ADMIN\") && (\n                      <div className={classes.switchHolder}>\n                        <SwitchControl\n                          name=\"customer.debtor\"\n                          label=\"Боржник\"\n                          isChecked={values.customer.debtor}\n                          disabled={saveCustomerQuery.isLoading}\n                        />\n                      </div>\n                    )) ||\n                      null}\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </Fade>\n      </Modal>\n      <InfoMessage\n        type=\"success\"\n        open={showSavedInfo.success}\n        onClose={handleClose}\n        message=\"Замовинка успішно збережено.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showSavedInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні замовника. Можливо клієнт зі схожою інформацією вже існує.\"\n      />\n    </div>\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\nimport {useDispatch} from \"react-redux\";\nimport {CLOSE_CUSTOMER_MODAL} from \"../context/actions\";\n\nexport default function useSaveCustomer() {\n  const queryClient = useQueryClient();\n  const dispatch = useDispatch();\n\n  return useMutation(\n    (params) =>\n      params.customer.customerId === 0\n        ? Axios.post(\"/api/customers/\", params.customer)\n        : Axios.put(\"/api/customers/\", params.customer),\n    {\n      onSuccess: (_, passedParams) => {\n        queryClient.invalidateQueries(\"customers\");\n        dispatch(CLOSE_CUSTOMER_MODAL());\n        passedParams.setStatus({success: true, error: false});\n      },\n      onError: (_, passedParams) => {\n        console.log(_);\n        passedParams.setStatus({success: false, error: true});\n      },\n    }\n  );\n}\n","import {Link, Typography} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\";\nimport {SET_ACTIVE_SORTING} from \"./context/actions\";\nimport \"./Header.css\";\nimport * as AuthService from \"./services/auth-service\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  logoutButton: {\n    padding: 0,\n  },\n  logoutHolder: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"baseline\",\n    whiteSpace: \"nowrap\",\n  },\n  tabs: {\n    margin: \"0 auto\",\n    cursor: \"pointer\",\n  },\n}));\n\nexport default function Header({radius}) {\n  const classes = useStyles();\n  const history = useHistory();\n  const authState = useSelector((state) => state.auth);\n  const queryClient = useQueryClient();\n  const dispatch = useDispatch();\n  const sortState = useSelector((state) => state.sortSelections);\n  const [value, setValue] = React.useState(0);\n\n  const logout = () => {\n    AuthService.unauthorize();\n    history.push(\"/login\");\n  };\n\n  const setSortView = (type) => {\n    if (sortState.active === type) return;\n    dispatch(SET_ACTIVE_SORTING(type));\n  };\n\n  const changeView = (_e, newValue) => {\n    setValue(newValue);\n    switch (newValue) {\n      case 0:\n        history.push(\"/\");\n        break;\n      case 1:\n        setSortView(\"filter\");\n        history.push(\"/sort\");\n        break;\n      case 2:\n        queryClient.invalidateQueries(\"customers\");\n        history.push(\"/clients\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"header__container\">\n        <div\n          className=\"menu\"\n          style={{borderBottomLeftRadius: radius, borderBottomRightRadius: radius}}\n        >\n          <Toolbar>\n            <Link color=\"inherit\" href=\"https://psdruk.com.ua/\">\n              <img width=\"110\" height=\"50\" src=\"/img/logo.svg\" alt=\"logo\" />\n            </Link>\n            {!authState.roles.includes(\"ROLE_CUSTOMER\") ? (\n              <>\n                <Tabs\n                  className={classes.tabs}\n                  value={value}\n                  onChange={changeView}\n                  TabIndicatorProps={{style: {background: \"white\"}}}\n                  indicatorColor=\"secondary\"\n                  aria-label=\"scrollable auto tabs example\"\n                >\n                  <Tab label=\"Головна\" value={0} />\n                  {authState.roles.includes(\"ROLE_ADMIN\") && (\n                    <Tab label=\"Сортування\" value={1} />\n                  )}\n                  <Tab label=\"Клієнти\" value={2} />\n                </Tabs>\n              </>\n            ) : (\n              <div className={classes.tabs}></div>\n            )}\n\n            <div className={classes.logoutHolder}>\n              <Typography variant=\"body1\" style={{fontWeight: 300}}>\n                Вітаємо, <b>{localStorage.getItem(\"username\")}</b>\n              </Typography>\n              <Button color=\"inherit\" onClick={logout} className={classes.logoutButton}>\n                Вийти\n              </Button>\n            </div>\n          </Toolbar>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport React, {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\";\nimport {SET_AUTHENTICATED} from \"./context/actions\";\nimport InfoMessage from \"./InfoMessage\";\nimport * as AuthService from \"./services/auth-service\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://psdruk.com.ua/\">\n        psdruk.com.ua\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [form, setForm] = useState({username: \"\", password: \"\"});\n  const [showNotYetVerified, setShowNotYetVerified] = useState(false);\n  const [showWrongCredentials, setShowWrongCredentials] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  const setUsername = (e) => setForm({...form, username: e.target.value});\n  const setPassword = (e) => setForm({...form, password: e.target.value});\n\n  const handleClose = () => {\n    setShowNotYetVerified(false);\n    setShowWrongCredentials(false);\n  };\n\n  const submitCredentials = (e) => {\n    e.preventDefault();\n    setIsDisabled(true);\n    AuthService.authorize(form)\n      .then((data) => {\n        if (!data.employee && !data.customer) {\n          setShowNotYetVerified(true);\n        } else {\n          dispatch(\n            SET_AUTHENTICATED(\n              data.token,\n              data.employee,\n              data.customer,\n              data.username,\n              data.roles\n            )\n          );\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsDisabled(false);\n        setShowWrongCredentials(true);\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <form className={classes.form} onSubmit={submitCredentials}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            onChange={setUsername}\n            label=\"Логін\"\n            name=\"email\"\n            autoComplete=\"off\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Пароль\"\n            type=\"password\"\n            id=\"password\"\n            onChange={setPassword}\n            autoComplete=\"off\"\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled={isDisabled}\n          >\n            Вхід\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"http://plg-site.32server.in.ua/\" variant=\"body2\">\n                Забули пароль?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"http://plg-site.32server.in.ua/\" variant=\"body2\">\n                {\"Зареєструватись\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n      <InfoMessage\n        type=\"error\"\n        open={showNotYetVerified}\n        onClose={handleClose}\n        message=\"Аккаунт ще не пройшов перевірку.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showWrongCredentials}\n        onClose={handleClose}\n        message=\"Неправильні дані для входу.\"\n      />\n    </Container>\n  );\n}\n","import {makeStyles, Tooltip} from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStylesTooltip = makeStyles((theme) => ({\n  arrow: {\n    color: theme.palette.primary.main,\n  },\n  tooltip: {\n    fontSize: 12,\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nfunction ToolTip({title, value, placement = \"right-start\", children, ...props}) {\n  const classes = useStylesTooltip();\n\n  return (\n    <Tooltip title={title} placement={placement} arrow classes={classes} {...props}>\n      <div className=\"value\" style={{lineHeight: \"1.43\"}}>\n        {children}\n      </div>\n    </Tooltip>\n  );\n}\n\nexport default ToolTip;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  InputAdornment,\n  Link,\n  OutlinedInput,\n  Typography,\n} from \"@material-ui/core\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Modal from \"@material-ui/core/Modal\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport * as yup from \"yup\";\nimport ComboBox from \"./ComboBox\";\nimport DatePicker from \"./DatePicker\";\nimport useDeleteOrder from \"./hooks/useDeleteOrder\";\nimport useUpdateOrder from \"./hooks/useUpdateOrder\";\nimport InfoMessage from \"./InfoMessage\";\nimport InputField from \"./InputField\";\nimport ToolTip from \"./ToolTip\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"4px\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4),\n    width: \"55%\",\n  },\n  link: {\n    cursor: \"pointer\",\n    color: theme.palette.primary.main,\n  },\n  h2: {\n    top: \"-.9rem\",\n    position: \"relative\",\n    marginTop: 0,\n    textAlign: \"center\",\n    fontWeight: \"400\",\n    gridColumnEnd: 4,\n    gridColumnStart: 2,\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  clearButton: {\n    backgroundColor: \"rgb(210,0,10)\",\n    color: \"white\",\n    marginRight: \"1rem\",\n\n    \"&:hover\": {\n      backgroundColor: \"rgb(190,0,10)\",\n    },\n  },\n  rowOne: {\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n  },\n  rowTwo: {\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr\",\n  },\n  rowThree: {\n    \"& .MuiInputBase-root.Mui-disabled\": {\n      color: \"black\",\n    },\n  },\n  billNo: {\n    gridColumn: 4,\n  },\n  auxiliaryRow: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n    margin: \"2rem auto 1rem auto\",\n\n    \"& .MuiOutlinedInput-input\": {\n      padding: \"8px\",\n    },\n\n    \"& .MuiButtonBase-root\": {\n      padding: \"2px !important\",\n    },\n\n    \"& .MuiOutlinedInput-adornedEnd\": {\n      paddingRight: \"3px\",\n    },\n\n    \"& #date-picker-inline-label\": {\n      transform: \"translate(14px, 10px) scale(1)\",\n    },\n  },\n}));\n\nconst validationSchema = yup.object({\n  order: yup.object({\n    entrepreneur: yup.object().required(),\n    customer: yup.object().required(),\n    date: yup.date().required(),\n    orderType: yup.object().required(),\n    orderKind: yup.object().required(),\n    billNo: yup.number().lessThan(2000000000).positive().min(0),\n    width: yup.number().lessThan(2000000000).positive().min(0).required(),\n    height: yup.number().lessThan(2000000000).positive().min(0).required(),\n    amount: yup.number().lessThan(2000000000).positive().min(0).required(),\n    price: yup.number().lessThan(2000000000).positive().min(0).required(),\n    fees: yup.number().lessThan(2000000000).positive().min(0).required(),\n    finalSum: yup.number().lessThan(2000000000).positive().min(0).required(),\n    comment: yup.string().trim().max(255).required(),\n    payLog: yup.string(),\n  }),\n});\n\nexport default function EditForm({user, roles, order}) {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const deleteQuery = useDeleteOrder();\n  const updateOrderQuery = useUpdateOrder();\n  const [open, setOpen] = React.useState(false);\n  const [showDeleteError, setShowDeleteError] = React.useState(false);\n  const [showSaveError, setShowSaveError] = React.useState(false);\n  const [showConfirmation, setShowConfirmation] = React.useState(false);\n  const toggle = () => setOpen(!open);\n\n  const onDeleteOrder = (orderId) => {\n    setShowConfirmation(false);\n    deleteQuery.mutate({\n      orderId: orderId,\n      setStatus: setShowSaveError,\n      setShowModal: setOpen,\n    });\n  };\n\n  const isNotMyOrder = () => {\n    if (!user) return false;\n    return order.employee.employeeID !== user.employeeID;\n  };\n\n  const amI = (role) => {\n    return roles.includes(role);\n  };\n\n  const isDisabledFor = (role = \"ROLE_ADMIN\") => {\n    if (!user) return true;\n    if (amI(\"ROLE_ADMIN\")) return false;\n    return amI(role) ? false : isNotMyOrder();\n  };\n\n  return (\n    <div>\n      <ToolTip title={order.employee.name}>\n        <Link className={classes.link} onClick={toggle}>\n          <b>{order.orderId}</b>\n        </Link>\n      </ToolTip>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={toggle}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <Formik\n              validateOnChange={true}\n              validateOnMount={false}\n              validateOnBlur={false}\n              initialValues={{order: order}}\n              onSubmit={(form) => {\n                updateOrderQuery.mutate({\n                  order: form.order,\n                  toggleModal: toggle,\n                  setStatus: setShowSaveError,\n                });\n              }}\n              validationSchema={validationSchema}\n            >\n              {({values, errors, validateField}) => (\n                <Form>\n                  <InfoMessage\n                    type=\"error\"\n                    open={showDeleteError}\n                    onClose={() => setShowDeleteError(false)}\n                    message=\"Помилка при видаленні замовлення.\"\n                  />\n                  <InfoMessage\n                    type=\"error\"\n                    open={showSaveError}\n                    onClose={() => setShowSaveError(false)}\n                    message=\"Помилка при збереженні замовлення.\"\n                  />\n                  <div className={classes.auxiliaryRow}>\n                    <Field\n                      component={DatePicker}\n                      label=\"Дата\"\n                      name=\"order.date\"\n                      error={errors?.order?.date}\n                      validator={validateField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                    <Typography className={classes.h2} component=\"h2\" variant=\"h5\">\n                      Замовленя № <b>{order.orderId}</b>\n                    </Typography>\n                    <Field\n                      className={classes.billNo}\n                      name=\"order.billNo\"\n                      label=\"№ Рахунку\"\n                      disableCalculation={true}\n                      error={errors?.order?.billNo}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor(\"ROLE_MANAGER\")}\n                    />\n                  </div>\n\n                  <div className={`${classes.rowOne} row__one`}>\n                    <Field\n                      name=\"order.entrepreneur\"\n                      label=\"Підприємець\"\n                      error={errors?.order?.entrepreneur}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                      getName={(option) => option.fullName || \"\"}\n                      options={queryClient.getQueryData(\"entrepreneurs\")}\n                    />\n                    <Field\n                      name=\"order.customer\"\n                      label=\"Замовник\"\n                      error={errors?.order?.customer}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                      getName={(option) => option.customerName || \"\"}\n                      options={queryClient.getQueryData(\"customers\")}\n                    />\n                    <Field\n                      name=\"order.orderType\"\n                      label=\"Вид\"\n                      error={errors?.order?.orderType}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                      getName={(option) => option.typeName || \"\"}\n                      options={queryClient.getQueryData(\"orderTypes\")}\n                    />\n                    <Field\n                      name=\"order.orderKind\"\n                      label=\"Тип\"\n                      error={errors?.order?.orderKind}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                      getName={(option) => option.kindName || \"\"}\n                      options={values.order?.orderType?.orderKinds || []}\n                    />\n                  </div>\n\n                  <div className={`${classes.rowTwo} row__two`}>\n                    <Field\n                      name=\"order.width\"\n                      label=\"Ширина\"\n                      error={errors?.order?.width}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                    <Field\n                      name=\"order.height\"\n                      label=\"Висота\"\n                      error={errors?.order?.height}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                    <Field\n                      name=\"order.amount\"\n                      label=\"Кількість\"\n                      error={errors?.order?.amount}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                    <OutlinedInput\n                      id=\"metrics\"\n                      size=\"small\"\n                      variant=\"outlined\"\n                      value={\n                        (\n                          ((values.order.width * values.order.height) / 1000000) *\n                          values.order.amount\n                        ).toFixed(3) || 0.0\n                      }\n                      endAdornment={<InputAdornment position=\"end\">м²</InputAdornment>}\n                      disabled\n                    />\n                    <Field\n                      name=\"order.price\"\n                      label=\"Ціна\"\n                      error={errors?.order?.price}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                    <Field\n                      name=\"order.fees\"\n                      label=\"Послуги\"\n                      error={errors?.order?.fees}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                    <Field\n                      name=\"order.finalSum\"\n                      label=\"Сума\"\n                      error={errors?.order?.finalSum}\n                      validator={validateField}\n                      component={InputField}\n                      disableCalculation={true}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                  </div>\n\n                  <div className=\"row__three\">\n                    <Field\n                      name=\"order.comment\"\n                      label=\"Опис замовлення\"\n                      error={errors?.order?.comment}\n                      validator={validateField}\n                      numeric={false}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor(\"ROLE_MANAGER\")}\n                    />\n                  </div>\n\n                  <div className={`${classes.rowThree} row__three`}>\n                    <Field\n                      name=\"order.payLog\"\n                      label=\"Історія оплат\"\n                      error={errors?.order?.payLog}\n                      validator={validateField}\n                      numeric={false}\n                      multiline={true}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                  </div>\n\n                  {user && (\n                    <div className={classes.buttons}>\n                      <Button\n                        className={classes.clearButton}\n                        disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                        variant=\"contained\"\n                        type=\"button\"\n                        onClick={() => setShowConfirmation(true)}\n                      >\n                        Видалити\n                      </Button>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        className={classes.button}\n                        disabled={updateOrderQuery.isLoading || isDisabledFor(\"ROLE_MANAGER\")}\n                        type=\"submit\"\n                      >\n                        Зберегти замовлення\n                      </Button>\n                    </div>\n                  )}\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </Fade>\n      </Modal>\n      <Dialog\n        fullScreen={false}\n        open={showConfirmation}\n        onClose={() => setShowConfirmation(false)}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          Ви дійсно бажаєте видалити це замовлення?\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Повернути його зміст та оплати буде неможливо. Підтвердити?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            autoFocus\n            onClick={() => setShowConfirmation(false)}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Ні\n          </Button>\n          <Button\n            onClick={() => onDeleteOrder(order.orderId)}\n            variant=\"contained\"\n            className={classes.clearButton}\n            autoFocus\n          >\n            Так\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useDeleteOrder() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.delete(\"/api/orders/\" + params.orderId), {\n    onError: (_, params) => {\n      params.setStatus(true);\n    },\n    onSuccess: (_, params) => {\n      queryClient.invalidateQueries([\"customers\"]);\n      queryClient.invalidateQueries([\"orders\"]);\n      params.setShowModal(false);\n    },\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useUpdateOrder() {\n  let backupOrder = null;\n  const queryClient = useQueryClient();\n  return useMutation(\n    (updateObject) => Axios.put(\"/api/orders/\", updateObject.order),\n    {\n      onMutate: (mutationObject) => {\n        queryClient\n          .getQueryCache()\n          .findAll([\"orders\", 1])\n          .forEach((query) => {\n            queryClient.setQueryData(\n              query.queryKey,\n              query.state.data.map((cachedOrder) => {\n                if (cachedOrder.orderId === mutationObject.order.orderId) {\n                  backupOrder = cachedOrder;\n                  return mutationObject.order;\n                } else return cachedOrder;\n              })\n            );\n          });\n      },\n      onError: (_error, params) => {\n        params.setStatus(true);\n        queryClient\n          .getQueryCache()\n          .findAll([\"orders\", 1])\n          .forEach((query) => {\n            queryClient.setQueryData(\n              query.queryKey,\n              query.state.data.map((cachedOrder) => {\n                if (cachedOrder.orderId === backupOrder.orderId) return backupOrder;\n                else return cachedOrder;\n              })\n            );\n          });\n      },\n      onSuccess: (_, updateObject) => {\n        queryClient.invalidateQueries([\"customers\"]);\n        queryClient.invalidateQueries([\"orders\"]);\n        updateObject.toggleModal();\n      },\n    }\n  );\n}\n","import Axios from \"axios\";\n\nexport const fixOrders = (data, id = 0) => {\n  return data.map((row) => {\n    if (row.orderId === 0) {\n      row.id = id;\n      row.orderId = id;\n    } else {\n      row.id = row.orderId;\n    }\n    !row.date ? (row.date = new Date()) : (row.date = new Date(row.date));\n    return row;\n  });\n};\n\nexport const fetchRecentOrders = async () => {\n  const response = await Axios.get(\"/api/orders/\");\n  const data = response.data;\n\n  if (data) return fixOrders(data);\n  return [];\n};\n\nexport const sortOrders = async (tableId, selections, customer) => {\n  const form = {\n    orderId: null,\n    customer: null,\n    entrepreneur: null,\n    employee: null,\n    status: null,\n    dateFrom: null,\n    dateTill: null,\n    payDateFrom: null,\n    payDateTill: null,\n    receiver: null,\n    orderKind: null,\n    orderType: null,\n    details: \"\",\n  };\n\n  const sendForm = {\n    ...form,\n    orderId: selections?.orderId,\n    customer: selections?.customer,\n    entrepreneur: selections?.entrepreneur,\n    employee: selections?.employee,\n    status: selections?.status,\n    dateFrom: selections?.dateFrom,\n    dateTill: selections?.dateTill,\n    payDateFrom: selections?.payDateFrom,\n    payDateTill: selections?.payDateTill,\n    receiver: selections?.receiver,\n    orderKind: selections?.orderKind,\n    orderType: selections?.orderType,\n    details: selections?.details,\n  };\n\n  let response;\n  if (customer) {\n    response = await Axios.get(\"/api/orders/\" + customer.customerId);\n  } else {\n    if (tableId === 1) {\n      response = await Axios.post(\"/api/orders/filter/\", sendForm);\n    } else if (tableId === 2) {\n      response = await Axios.post(\"/api/orders/filter?stat=true\", sendForm);\n    }\n  }\n\n  const data = response.data;\n\n  if (data && tableId === 2) {\n    return {...data, listOfOrders: fixOrders(data.listOfOrders)};\n  }\n\n  if (data) return fixOrders(data);\n  return [];\n};\n","import {Button} from \"@material-ui/core\";\nimport Popper from \"@material-ui/core/Popper\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport useSetStatus from \"./hooks/useSetStatus\";\n\nconst sources = [\n  \"\",\n  \"img/on-agreement.svg\",\n  \"img/in-progress.svg\",\n  \"img/ready.svg\",\n  \"img/completed.svg\",\n];\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    backgroundColor: \"#fff\",\n    boxShadow: \"0 0 14px 2px rgba(0, 0, 0, 0.3)\",\n    borderRadius: \"4px\",\n  },\n  acceptanceButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#fff\",\n    border: \"1px solid\",\n    borderColor: \"#df16a0\",\n    color: \"#df16a0\",\n\n    \"&:hover\": {\n      color: \"#fff\",\n      backgroundColor: \"#df16a0\",\n    },\n  },\n  inWorkButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#fff\",\n    border: \"1px solid\",\n    borderColor: theme.palette.primary.main,\n    color: theme.palette.primary.main,\n\n    \"&:hover\": {\n      color: \"#fff\",\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n  readyButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#fff\",\n    border: \"1px solid\",\n    borderColor: \"#28a745\",\n    color: \"#28a745\",\n\n    \"&:hover\": {\n      color: \"#fff\",\n      backgroundColor: \"#28a745\",\n    },\n  },\n  completedButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#28a745\",\n    border: \"1px solid\",\n    borderColor: \"#28a745\",\n    color: \"#fff\",\n\n    \"&:hover\": {\n      borderColor: \"#218838\",\n      backgroundColor: \"#218838\",\n    },\n  },\n  popper: {\n    zIndex: 1,\n    marginLeft: \"0.5rem\",\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: \"-0.9em\",\n      marginTop: \"0.45rem\",\n      height: \"3em\",\n      width: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 1em 1em 0\",\n        borderColor: `transparent ${theme.palette.background.paper} transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: \"-0.9em\",\n      marginTop: \"0.45rem\",\n      height: \"3em\",\n      width: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 0 1em 1em\",\n        borderColor: `transparent transparent transparent ${theme.palette.background.paper}`,\n      },\n    },\n  },\n  arrow: {\n    position: \"absolute\",\n    fontSize: 7,\n    width: \"3em\",\n    height: \"3em\",\n    \"&::before\": {\n      content: '\"\"',\n      margin: \"auto\",\n      display: \"block\",\n      width: 0,\n      height: 0,\n      borderStyle: \"solid\",\n    },\n  },\n}));\n\nfunction StatusPopper({orderId, status, disabled = false}) {\n  const classes = useStyles();\n  const statusQuery = useSetStatus();\n  const anchorRef = React.useRef(null);\n  const [arrow] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const id = open ? \"scroll-playground\" : null;\n\n  const toggle = () => setOpen((prevOpen) => (disabled ? null : !prevOpen));\n\n  return (\n    <>\n      <img\n        className={classes.img}\n        ref={anchorRef}\n        src={sources[status]}\n        width=\"19\"\n        height=\"19\"\n        alt=\"on-agreement\"\n        aria-describedby={id}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={toggle}\n      />\n\n      <Popper\n        id={id}\n        open={open}\n        anchorEl={anchorRef.current}\n        placement=\"right\"\n        disablePortal={true}\n        className={classes.popper}\n        modifiers={{\n          flip: {\n            enabled: true,\n          },\n          preventOverflow: {\n            enabled: true,\n            boundariesElement: \"scrollParent\",\n          },\n          arrow: {\n            enabled: true,\n            element: arrowRef,\n          },\n        }}\n      >\n        {arrow ? <span className={classes.arrow} ref={setArrowRef} /> : null}\n        <div className={classes.container}>\n          <Button\n            className={classes.acceptanceButton}\n            onClick={() => statusQuery.mutate({orderId: orderId, statusId: 1, toggle: toggle})}\n          >\n            На погодженні\n          </Button>\n          <br />\n          <Button\n            className={classes.inWorkButton}\n            onClick={() => statusQuery.mutate({orderId: orderId, statusId: 2, toggle: toggle})}\n          >\n            В роботі\n          </Button>\n          <br />\n          <Button\n            className={classes.readyButton}\n            onClick={() => statusQuery.mutate({orderId: orderId, statusId: 3, toggle: toggle})}\n          >\n            Готове\n          </Button>\n          <br />\n          <Button\n            className={classes.completedButton}\n            o\n            onClick={() => statusQuery.mutate({orderId: orderId, statusId: 4, toggle: toggle})}\n          >\n            Віддано\n          </Button>\n        </div>\n      </Popper>\n    </>\n  );\n}\n\nexport default StatusPopper;\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSetStatus() {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (params) =>\n      Axios.get(\"/api/orders/statuses/\" + params.orderId + \"/\" + params.statusId),\n    {\n      onSuccess: (_, params) => {\n        queryClient.invalidateQueries(\"orders\");\n        params.toggle();\n      },\n    }\n  );\n}\n","import {Button, TextField, Link} from \"@material-ui/core\";\nimport {XGrid} from \"@material-ui/x-grid\";\nimport React, {useState} from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useSelector} from \"react-redux\";\nimport EditForm from \"./EditForm\";\nimport useExportOrders from \"./hooks/useExportOrders\";\nimport useOrders from \"./hooks/useOrders\";\nimport StatusPopper from \"./StatusPopper\";\nimport store from \"./context/store\";\nimport \"./Table.css\";\nimport ToolTip from \"./ToolTip\";\nimport {SHOW_CUSTOMER_MODAL} from \"./context/actions\";\n\nfunction strcmp(a, b) {\n  return a.localeCompare(b);\n}\n\nconst formatDate = (date) =>\n  new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: false,\n  }).format(date);\n\nexport default function Table({tableID}) {\n  const [sortOrder, setSortOrder] = useState({orderId: \"desc\"});\n  const [q, setQ] = useState(\"\");\n  const sortState = useSelector((state) => state.sortSelections);\n  const authState = useSelector((state) => state.auth);\n  const ordersQuery = useOrders(tableID, sortState[sortState.active], authState.customer);\n  const queryClient = useQueryClient();\n  const exportQuery = useExportOrders();\n\n  const columns = (orderBy) => {\n    const columns = [\n      {\n        field: \"orderId\",\n        type: \"number\",\n        headerName: \"№\",\n        flex: 0.8,\n        renderCell: (params) => (\n          <EditForm user={authState.loggedUser} roles={authState.roles} order={params.row} />\n        ),\n      },\n      {\n        field: \"billNo\",\n        type: \"number\",\n        headerName: \"Рах\",\n        flex: 0.6,\n      },\n      {\n        field: \"customer\",\n        headerName: \"Замовник\",\n        flex: 2.2,\n        sortComparator: (c1, c2) => strcmp(c1.customerName, c2.customerName),\n        valueFormatter: (param) => param.value.customerName,\n        renderCell: (params) =>\n          authState.customer ? (\n            <b>{params.value.customerName}</b>\n          ) : (\n            <Link\n              className=\"name-link\"\n              onClick={() => store.dispatch(SHOW_CUSTOMER_MODAL(params.row.customer))}\n            >\n              {params.value.info ? (\n                <ToolTip title={params.value.info}>\n                  <b>{params.value.customerName}</b>\n                </ToolTip>\n              ) : (\n                <b>{params.value.customerName}</b>\n              )}\n            </Link>\n          ),\n      },\n      {\n        field: \"date\",\n        type: \"dateTime\",\n        headerName: \"Дата\",\n        flex: 1.2,\n        valueFormatter: (param) => formatDate(param.value),\n      },\n      {\n        field: \"width\",\n        type: \"number\",\n        headerName: \"Ширина\",\n        valueFormatter: (row) => row.value,\n        flex: 1.09,\n      },\n      {\n        field: \"height\",\n        type: \"number\",\n        headerName: \"Висота\",\n        valueFormatter: (row) => row.value,\n        flex: 1,\n      },\n      {\n        field: \"amount\",\n        type: \"number\",\n        headerName: \"К-сть\",\n        valueFormatter: (row) => row.value,\n        flex: 0.85,\n      },\n      {\n        field: \"m2\",\n        type: \"number\",\n        headerName: \"М2\",\n        valueFormatter: (row) => Number.parseFloat(row.value).toFixed(3),\n        flex: 0.9,\n      },\n      {\n        field: \"price\",\n        type: \"number\",\n        headerName: \"Ціна\",\n        valueFormatter: (row) => row.value,\n        flex: 0.8,\n      },\n      {\n        field: \"fees\",\n        type: \"number\",\n        headerName: \"Послуги\",\n        valueFormatter: (row) => row.value,\n        flex: 1,\n      },\n      {\n        field: \"finalSum\",\n        type: \"number\",\n        headerName: \"Сума\",\n        flex: 0.9,\n        renderCell: (params) => <b> {params.value} </b>,\n      },\n      {\n        field: \"paid\",\n        headerName: \"Оплата\",\n        sortable: false,\n        flex: 1.1,\n        cellClassName: \"centered\",\n        renderCell: (params) => {\n          if (params.row.paySum === params.row.finalSum) {\n            return (\n              <ToolTip title={formatDate(new Date(params.row.payDate))} arrow>\n                <img src=\"img/completed.svg\" width=\"19\" height=\"19\" alt=\"paid\" />\n              </ToolTip>\n            );\n          } else if (params.row.paySum > 0)\n            return (\n              <ToolTip\n                title={params.row.paySum + \" грн, \" + formatDate(new Date(params.row.payDate))}\n                arrow\n              >\n                <img src=\"img/partly_paid.svg\" width=\"19\" height=\"19\" alt=\"partly__paid\" />\n              </ToolTip>\n            );\n        },\n      },\n      {\n        field: \"status\",\n        headerName: \"Статус\",\n        flex: 1.1,\n        cellClassName: \"centered\",\n        sortComparator: (c1, c2) => c1.id - c2.id,\n        renderCell: (params) =>\n          authState.customer ? (\n            <ToolTip title={params.row.status.name} arrow>\n              <StatusPopper\n                orderId={params.row.orderId}\n                status={params.row.status.id}\n                disabled={true}\n              />\n            </ToolTip>\n          ) : (\n            <StatusPopper orderId={params.row.orderId} status={params.row.status.id} />\n          ),\n      },\n      {\n        field: \"orderType\",\n        type: \"string\",\n        headerName: \"Вид\",\n        flex: 1.8,\n        sortComparator: (c1, c2) => strcmp(c1.typeName, c2.typeName),\n        valueFormatter: (param) => param.value.typeName,\n      },\n      {\n        field: \"orderKind\",\n        headerName: \"Тип\",\n        flex: 1.8,\n        sortComparator: (c1, c2) => strcmp(c1.kindName, c2.kindName),\n        valueFormatter: (param) => param.value.kindName,\n      },\n      {\n        field: \"comment\",\n        headerName: \"Опис замовлення\",\n        flex: 6,\n        sortComparator: (c1, c2) => strcmp(c1, c2),\n        renderCell: (params) => (\n          <ToolTip title={params.value} placement=\"left-start\">\n            {params.value}\n          </ToolTip>\n        ),\n      },\n    ];\n\n    Object.keys(orderBy).forEach(\n      (key) => (columns.find((column) => column.field === key).sortDirection = orderBy[key])\n    );\n    return Object.values(columns);\n  };\n\n  const filter = (rows) => {\n    if (!rows) return [];\n    return rows.filter(\n      (row) =>\n        row.orderId?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.billNo?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.customer.customerName.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        formatDate(row.date)?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.fees?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.finalSum?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.amount?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.price?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.height?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.width?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.m2?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.orderKind.kindName?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.orderType.typeName?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.comment?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1\n    );\n  };\n\n  const calculateDebt = (customer) => {\n    const data = queryClient.getQueryData(\"customers\");\n    const customerInfo = data.find((c) => c.customerId === customer.customerId);\n    let debt = 0;\n    if (tableID === 2) {\n      debt = ordersQuery.data?.listOfOrders?.reduce((a, b) => (a += b.finalSum - b.paySum), 0);\n    } else {\n      debt = ordersQuery.data.reduce((a, b) => (a += b.finalSum - b.paySum), 0);\n    }\n    return debt - customerInfo.money;\n  };\n\n  return (\n    <>\n      <TextField\n        variant=\"outlined\"\n        size=\"small\"\n        placeholder=\"Швидкий пошук\"\n        onChange={(e) => setQ(e.target.value)}\n        InputProps={{\n          endAdornment: authState.roles.includes(\"ROLE_ORDERS_EXPORTER\") && (\n            <Button\n              className=\"export-btn\"\n              variant=\"outlined\"\n              onClick={() =>\n                exportQuery.mutate(\n                  filter(tableID !== 2 ? ordersQuery.data : ordersQuery.data.listOfOrders)\n                )\n              }\n            >\n              Експорт\n            </Button>\n          ),\n        }}\n      />\n\n      <div className=\"x-grid\">\n        {sortState[sortState.active].customer && (\n          <div className=\"action__bar__stat\">\n            <label>\n              Сума боргу : <b>{calculateDebt(sortState[sortState.active].customer)}</b> грн\n            </label>\n          </div>\n        )}\n        {tableID === 2 && (\n          <div className=\"action__bar__stat sort__info\">\n            <label>\n              Кількість : <b>{ordersQuery.data.amount}</b>\n            </label>\n            <label>\n              M2 : <b>{ordersQuery.data.m2}</b>\n            </label>\n            <label>\n              Послуги : <b>{ordersQuery.data.fees}</b>\n            </label>\n            <label>\n              Сума : <b>{ordersQuery.data.sum}</b>\n            </label>\n            <label>\n              Оплачено : <b>{ordersQuery.data.paid}</b>\n            </label>\n          </div>\n        )}\n        <div className=\"frame\">\n          <div className=\"grid-holder\">\n            <XGrid\n              rows={filter(tableID !== 2 ? ordersQuery.data : ordersQuery.data.listOfOrders)}\n              columns={columns(sortOrder)}\n              onSortModelChange={(e) => {\n                let sortModel = {};\n                if (e.sortModel.length > 0) {\n                  sortModel[e.sortModel[0]?.field] = e.sortModel[0]?.sort;\n                } else {\n                  sortModel[\"orderId\"] = \"desc\";\n                }\n                setSortOrder(sortModel);\n              }}\n              loading={ordersQuery.isLoading}\n              rowHeight={35}\n              headerHeight={35}\n              pagination={true}\n              disableSelectionOnClick={true}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import {useQuery} from \"react-query\";\nimport * as OrderService from \".././services/orders-service\";\n\nexport default function useOrders(tableID, sortState, customer) {\n  return useQuery(\n    [\"orders\", tableID, sortState],\n    () => OrderService.sortOrders(tableID, sortState, customer),\n    {\n      initialData: [],\n      initialStale: true,\n      keepPreviousData: false,\n    }\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation} from \"react-query\";\n\nexport default function useExportOrders() {\n  return useMutation(\n    (orders) =>\n      Axios.post(\n        \"api/orders/export/\",\n        {orders: orders},\n        {\n          responseType: \"arraybuffer\",\n        }\n      ),\n    {\n      onError: (_, params) => {\n        params.setStatus({success: false, error: true});\n      },\n      onSuccess: (val, _) => {\n        const blob = new Blob([val.data], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        });\n\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n          window.navigator.msSaveOrOpenBlob(blob);\n          return;\n        }\n        const data = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = data;\n        link.download = \"Список замовлень.xlsx\";\n        link.dispatchEvent(\n          new MouseEvent(\"click\", {bubbles: true, cancelable: true, view: window})\n        );\n      },\n    }\n  );\n}\n","import {useEffect, useState} from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport ActionBar from \"./ActionBar\";\nimport SortActionBar from \"./SortActionBar\";\nimport \"./App.css\";\nimport ClientsTable from \"./ClientsTable\";\nimport CustomerForm from \"./CustomerForm\";\nimport Header from \"./Header\";\nimport useCELinks from \"./hooks/useCELinks\";\nimport useCPLinks from \"./hooks/useCPLinks\";\nimport useCustomers from \"./hooks/useCustomers\";\nimport useEmployees from \"./hooks/useEmployees\";\nimport useEntrepreneurs from \"./hooks/useEntrepreneurs\";\nimport useOrderTypes from \"./hooks/useOrderTypes\";\nimport useStatuses from \"./hooks/useStatuses\";\nimport Login from \"./Login\";\nimport Table from \"./Table\";\n\nfunction App() {\n  const [tableHeight, setTableHeight] = useState(0);\n\n  useCustomers();\n  useEntrepreneurs();\n  useEmployees();\n  useOrderTypes();\n  useStatuses();\n  useCELinks();\n  useCPLinks();\n\n  useEffect(() => {\n    if (!tableHeight) {\n      if (document.getElementsByClassName(\"main__header\")[0]) {\n        setTableHeight(\n          window.innerHeight -\n            (32 +\n              document.getElementsByClassName(\"action__bar__button\")[0]?.clientHeight +\n              document.getElementsByClassName(\"main__header\")[0]?.clientHeight)\n        );\n      } else {\n        setTableHeight(\n          window.innerHeight -\n            (32 +\n              document.getElementsByClassName(\"action__bar__button\")[0]?.clientHeight +\n              document.getElementsByClassName(\"sort__header\")[0]?.clientHeight)\n        );\n      }\n    }\n  }, [tableHeight]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/\">\n            <div className=\"main\">\n              <div className=\"main__header\">\n                <Header radius={0} />\n                <ActionBar />\n              </div>\n              <div\n                className=\"main__table\"\n                style={{\n                  height: tableHeight,\n                }}\n              >\n                <Table tableID={1} key={1} />\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/clients\">\n            <div className=\"clients\">\n              <div className=\"clients__header\">\n                <Header radius={4} />\n              </div>\n              <div\n                className=\"clients__table\"\n                style={{\n                  height:\n                    window.innerHeight -\n                    (62 + document.getElementsByClassName(\"clients__header\")[0]?.clientHeight),\n                }}\n              >\n                <ClientsTable />\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/sort\">\n            <div className=\"sort\">\n              <div className=\"sort__header\">\n                <Header radius={0} />\n                <SortActionBar />\n              </div>\n              <div\n                className=\"sort__table\"\n                style={{\n                  height: tableHeight,\n                }}\n              >\n                <Table tableID={2} key={2} />\n              </div>\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n      <CustomerForm />\n    </div>\n  );\n}\n\nexport default App;\n","import {useQuery} from \"react-query\";\nimport {useSelector} from \"react-redux\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useCustomers() {\n  const authState = useSelector((state) => state.auth);\n  return useQuery(\"customers\", () => CustomerService.fetchCustomers(authState.roles), {\n    refetchOnWindowFocus: false,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport {useSelector} from \"react-redux\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useEntrepreneurs() {\n  const authState = useSelector((state) => state.auth);\n  return useQuery(\"entrepreneurs\", () => CustomerService.fetchEntrepreneurs(authState.roles), {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n    refetchOnWindowFocus: false,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport {useSelector} from \"react-redux\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useEmployees() {\n  const authState = useSelector((state) => state.auth);\n  return useQuery(\"employees\", () => CustomerService.fetchEmployees(authState.roles), {\n    refetchOnWindowFocus: false,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport {useSelector} from \"react-redux\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useOrderTypes() {\n  const authState = useSelector((state) => state.auth);\n  return useQuery(\"orderTypes\", () => CustomerService.fetchOrderTypes(authState.roles), {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport {useSelector} from \"react-redux\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useStatuses() {\n  const authState = useSelector((state) => state.auth);\n  return useQuery(\"statuses\", () => CustomerService.fetchStatuses(authState.roles), {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n    refetchOnWindowFocus: false,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport {useSelector} from \"react-redux\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useCELinks() {\n  const authState = useSelector((state) => state.auth);\n  return useQuery(\"ce-links\", () => CustomerService.fetchCELinks(authState.roles), {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport {useSelector} from \"react-redux\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useCPLinks() {\n  const authState = useSelector((state) => state.auth);\n  return useQuery(\"cp-links\", () => CustomerService.fetchCPLinks(authState.roles), {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import { Box, Paper, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport \"./NotFound.css\";\n\nfunction NotFound() {\n  return (\n    <Paper elevation={3} className=\"blue-holder\">\n      <Paper elevation={3} className=\"info\">\n        <div className=\"blank-page\">\n          <Typography variant=\"h4\" component=\"h3\">\n            Сторінка не знайдена\n          </Typography>{\" \"}\n          <Typography variant=\"h2\" component=\"h3\">\n            404\n          </Typography>\n        </div>\n        <Box mt={8}>\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {\"Copyright © \"}\n            <Link color=\"inherit\" href=\"https://psdruk.com.ua/\">\n              psdruk.com.ua\n            </Link>{\" \"}\n            {new Date().getFullYear()}\n            {\".\"}\n          </Typography>\n        </Box>\n      </Paper>\n    </Paper>\n  );\n}\n\nexport default NotFound;\n","import {Redirect, Route} from \"react-router-dom\";\nimport {SET_AUTHENTICATED} from \"./context/actions\";\nimport store from \"./context/store\";\nimport {useSelector} from \"react-redux\";\n\nexport const ProtectedRoute = ({component: Component, ...props}) => {\n  const authState = useSelector((store) => store.auth);\n  const authToken = localStorage.getItem(\"token\");\n  const username = localStorage.getItem(\"username\");\n  const roles = localStorage.getItem(\"roles\")?.split(\",\") || [];\n  const loggedUser = JSON.parse(localStorage.getItem(\"loggedUser\"));\n  const customer = JSON.parse(localStorage.getItem(\"customer\"));\n\n  return (\n    <Route\n      {...props}\n      render={(props) => {\n        if (authState.isAuthenticated) {\n          return <Component {...props} />;\n        } else if (authToken) {\n          store.dispatch(SET_AUTHENTICATED(authToken, loggedUser, customer, username, roles));\n          return <Component {...props} />;\n        } else {\n          return <Redirect to={{pathname: \"/login\", state: {from: props.location}}} />;\n        }\n      }}\n    />\n  );\n};\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport {formatISO} from \"date-fns\";\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\nimport {ukUA} from \"@material-ui/core/locale\";\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport {uk} from \"date-fns/locale\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {QueryCache, QueryClient, QueryClientProvider} from \"react-query\";\nimport {ReactQueryDevtools} from \"react-query/devtools\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport App from \"./App\";\nimport store from \"./context/store\";\nimport \"./index.css\";\nimport Login from \"./Login\";\nimport NotFound from \"./NotFound\";\nimport {ProtectedRoute} from \"./ProtectedRoute\";\n\nconst oldTheme = createMuiTheme(\n  {\n    palette: {\n      primary: {\n        light: \"#fff\",\n        main: \"rgba(0, 60, 170, 0.95)\",\n        dark: \"rgba(0, 40, 170, 0.95)\",\n      },\n      secondary: {\n        main: \"#f44336\",\n      },\n    },\n    typography: {\n      useNextVariants: true,\n      fontSize: 11,\n      htmlFontSize: 15,\n    },\n  },\n  ukUA\n);\n\nconst {breakpoints} = oldTheme;\nconst theme = {\n  ...oldTheme,\n  overrides: {\n    MuiInputLabel: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiInputAdornment: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiInputBase: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiTypography: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n      subtitle1: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n      body1: {\n        fontSize: 12,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 12,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 10,\n        },\n      },\n      button: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiButton: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiTab: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiSvgIcon: {\n      root: {\n        [breakpoints.down(1300)]: {\n          fontSize: 15,\n        },\n      },\n    },\n  },\n};\n\n// eslint-disable-next-line no-extend-native\nDate.prototype.toISOString = function () {\n  const date = formatISO(this);\n  return date.substr(0, date.indexOf(\"+\"));\n};\n\nconst queryCache = new QueryCache();\nconst queryClient = new QueryClient({queryCache});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <QueryClientProvider client={queryClient}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={uk}>\n        <Provider store={store}>\n          <Router>\n            <Switch>\n              <Route path=\"/login\" component={Login} />\n              <ProtectedRoute path=\"/\" component={App} />\n              <Route path=\"*\" component={NotFound} />\n            </Switch>\n          </Router>\n        </Provider>\n      </MuiPickersUtilsProvider>\n      <ReactQueryDevtools />\n    </QueryClientProvider>\n  </MuiThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}