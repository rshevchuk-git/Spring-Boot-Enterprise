{"version":3,"sources":["context/actionTypes.js","context/order-reducer.js","context/actions.js","services/auth-service.js","context/auth-reducer.js","models/SortObject.js","context/sort-reducer.js","context/customerModal-reducer.js","models/CustomerObject.js","context/store.js","ComboBox.js","services/orders-service.js","services/utils.js","InfoMessage.js","InputField.js","models/OrderObject.js","SwitchControl.js","AddOrderForm.js","hooks/useSaveOrder.js","hooks/useSaveCELink.js","hooks/useSaveCPLink.js","hooks/useSaveDimensions.js","DatePicker.js","SortForm.js","DependentInput.js","services/customer-service.js","models/PaymentObject.js","PaymentForm.js","hooks/useMakePayment.js","hooks/usePaymentMethods.js","hooks/useUpdatePaymentMethod.js","ActionBar.js","ClientsActionBar.js","ClientsTable.js","CustomerForm.js","hooks/useSaveCustomer.js","Header.js","Login.js","ToolTip.js","EditForm.js","hooks/useUpdateOrder.js","StatusPopper.js","hooks/useSetStatus.js","Table.js","hooks/useOrders.js","App.js","hooks/useCustomers.js","hooks/useEntrepreneurs.js","hooks/useOrderTypes.js","hooks/useStatuses.js","hooks/useCELinks.js","hooks/useCPLinks.js","ProtectedRoute.js","NotFound.js","index.js"],"names":["ADD_ORDER","LOAD_ORDERS","SET_AUTHENTICATED","SET_UNAUTHENTICATED","SELECT_CUSTOMER","UNSELECT_CUSTOMER","SET_ACTIVE_SORTING","UPDATE_MAIN_SORTING","UPDATE_SORT_SORTING","UPDATE_PAYMENT_SORTING","ADD_MAIN_SORTING","ADD_SORT_SORTING","ADD_PAYMENT_SORTING","SHOW_CUSTOMER_MODAL","CLOSE_CUSTOMER_MODAL","initialState","mainPageOrderList","sortPageOrderList","isLoading","orderReducer","state","action","type","ActionTypes","payload","token","employee","username","roles","sorting","UPDATE_SORTING","selections","sortPage","customer","authorize","credentials","a","Axios","post","response","data","unauthorize","store","dispatch","isAuthenticated","loggedUser","authReducer","localStorage","setItem","JSON","stringify","defaults","headers","common","interceptors","use","error","status","AuthService","console","removeItem","EmptySort","selectedCustomer","selectedStatus","selectedDateFrom","selectedDateTill","selectedKind","selectedType","selectedEmployee","selectedDetails","active","main","sort","payment","sortReducer","show","customerId","customerName","customerGroup","money","payLog","debtor","city","info","firstPerson","firstPhone","firstEmail","secondPerson","secondPhone","secondEmail","thirdPerson","thirdPhone","thirdEmail","customerModalReducer","require","createStore","combineReducers","auth","orders","default","sortSelections","showCustomerModal","NoPaddingAutocomplete","withStyles","inputRoot","padding","paddingRight","input","Autocomplete","ComboBox","label","getName","sortKey","validator","setEntrepreneur","setDimensions","setPrice","props","textFieldProps","setFieldValue","form","order","useFormikContext","values","fieldToTextField","field","name","useDispatch","queryClient","useQueryClient","size","value","autoHighlight","getOptionLabel","onKeyPress","e","key","preventDefault","onChange","_","sortBy","selection","ADD_SORTING_BY","entrepreneur","getQueryData","find","link","width","height","orderKindId","orderKind","kindId","price","renderInput","TextField","variant","fixOrders","id","map","row","orderId","date","Date","sortOrders","selectedNo","selectedEntrepreneur","selectedOperator","selectedPayDateFrom","selectedPayDateTill","selectedReceiver","sendForm","includes","typeId","calculateM2","m2","amount","toFixed","checkPriceShrink","shrinkStatus","setShrinkStatus","shrink","fixCustomers","InfoMessage","open","onClose","message","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","InputField","readonly","numeric","phone","autoComplete","InputProps","readOnly","target","match","length","onKeyUp","sum","Math","ceil","fees","EmptyOrder","billNo","userID","orderType","finalSum","paySum","comment","SwitchControl","isChecked","useField","FormControlLabel","control","Switch","checked","color","useStyles","makeStyles","root","display","flexWrap","borderRadius","backgroundColor","margin","lock","minWidth","svg","fill","clear","justifySelf","validationSchema","yup","required","lessThan","positive","min","trim","max","AddOrderForm","classes","newOrderQuery","useMutation","params","newOrder","onMutate","mutationObject","setQueryData","onSuccess","passedParams","setStatus","success","resetForm","onError","useSaveOrder","newCELinkQuery","get","entrepreneurId","invalidateQueries","useSaveCELink","newCPLinkQuery","useSaveCPLink","saveDimensionsQuery","put","useSaveDimensions","useState","React","showOrderInfo","setShowOrderInfo","showCELinkInfo","setShowCELinkInfo","showDimensionsInfo","setShowDimensionsInfo","showPriceInfo","setShowPriceInfo","handleClose","onFormSubmit","isUrgently","onAcceptance","setAcceptance","mutate","clearFields","className","validateOnChange","validateOnMount","validateOnBlur","initialValues","parse","getItem","onSubmit","errors","validateField","handleReset","component","disabled","isFetching","option","fullName","options","Button","disableRipple","onClick","LastPageOutlined","typeName","kindName","orderKinds","LinkOutlined","OutlinedInput","endAdornment","InputAdornment","position","InputLabelProps","LockOpenOutlined","clearAndUnsort","datepicker","DatePicker","onTouch","autoOk","helperText","inputVariant","format","KeyboardButtonProps","button","nullable","SortForm","authState","useSelector","showUserOrders","DependentInput","useEffect","paymentType","paymentPercentage","fetchCustomers","res","fetchEntrepreneurs","fetchOrderTypes","fetchStatuses","fetchPaymentMethods","fetchCELinks","fetchCPLinks","EmptyPayment","paymentDate","percentage","row__one","gridColumnGap","gridTemplateColumns","row__two","gridTemplateRows","transform","top","right","gridColumn","successInfo","successText","errorInfo","errorText","errorSvg","fontSize","successSvg","PaymentForm","makePaymentQuery","useMakePayment","paymentMethods","useQuery","DataService","initialData","initialStale","keepPreviousData","updatePaymentMethodQuery","paymentMethod","useUpdatePaymentMethod","showPaymentInfo","setShowPaymentInfo","showPercentageLinkInfo","setShowPercentageLinkInfo","receiver","style","ActionBar","currentTab","setTab","useIsFetching","sortState","tabId","Paper","elevation","Typography","src","alt","showCustomerInfo","marginLeft","Collapse","in","timeout","onEntered","ClientsActionBar","percentToPixels","window","innerWidth","columns","headerName","renderCell","Link","cellClassName","ClientsTable","rows","q","setQ","placeholder","filter","toString","toLowerCase","indexOf","sortModel","loading","rowHeight","headerHeight","pagination","disableSelectionOnClick","theme","modal","alignItems","justifyContent","paper","palette","background","boxShadow","shadows","spacing","cursor","primary","h2","textAlign","fontWeight","marginBottom","buttons","clearButton","marginRight","rowOne","gridRowGap","rowTwo","longTextField","gridColumnStart","gridColumnEnd","switchHolder","auxiliaryRow","email","CustomerForm","customerModalState","saveCustomerQuery","log","useSaveCustomer","showSavedInfo","setShowSavedInfo","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","flexGrow","logoutButton","logoutHolder","tabs","Header","history","useHistory","setValue","AppBar","Toolbar","href","Tabs","_e","newValue","push","TabIndicatorProps","indicatorColor","aria-label","Tab","Copyright","align","getFullYear","marginTop","flexDirection","avatar","secondary","submit","Login","password","setForm","showNotYetVerified","setShowNotYetVerified","Container","maxWidth","CssBaseline","Avatar","then","fullWidth","autoFocus","Grid","container","item","xs","Box","mt","useStylesTooltip","arrow","tooltip","ToolTip","title","placement","children","Tooltip","lineHeight","EditForm","setOpen","updateOrderQuery","backupOrder","updateObject","getQueryCache","findAll","forEach","query","queryKey","cachedOrder","_error","toggleModal","useUpdateOrder","toggle","multiline","sources","acceptanceButton","border","borderColor","inWorkButton","readyButton","completedButton","popper","zIndex","left","borderWidth","content","borderStyle","StatusPopper","statusQuery","statusId","useSetStatus","anchorRef","useRef","arrowRef","setArrowRef","prevOpen","img","ref","Popper","anchorEl","current","disablePortal","modifiers","flip","enabled","preventOverflow","boundariesElement","element","o","formatDate","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","sortComparator","c1","c2","b","valueFormatter","param","Number","parseFloat","sortable","payDate","Table","tableID","ordersQuery","OrderService","useOrders","reduce","App","CustomerService","path","exact","ProtectedRoute","Component","authToken","render","to","pathname","from","location","NotFound","createMuiTheme","light","dark","typography","useNextVariants","htmlFontSize","ukUA","queryCache","QueryCache","QueryClient","ReactDOM","QueryClientProvider","client","utils","DateFnsUtils","locale","uk","document","getElementById"],"mappings":"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","file":"static/js/main.cd6df977.chunk.js","sourcesContent":["export const ADD_ORDER = \"ADD_ORDER\";\nexport const LOAD_ORDERS = \"LOAD_ORDERS\";\n\nexport const SET_AUTHENTICATED = \"SET_AUTHENTICATED\";\nexport const SET_UNAUTHENTICATED = \"SET_UNAUTHENTICATED\";\n\nexport const SELECT_CUSTOMER = \"SELECT_CUSTOMER\";\nexport const UNSELECT_CUSTOMER = \"UNSELECT_CUSTOMER\";\n\nexport const SET_ACTIVE_SORTING = \"SET_ACTIVE_SORTING\";\nexport const UPDATE_MAIN_SORTING = \"UPDATE_MAIN_SORTING\";\nexport const UPDATE_SORT_SORTING = \"UPDATE_SORT_SORTING\";\nexport const UPDATE_PAYMENT_SORTING = \"UPDATE_PAYMENT_SORTING\";\nexport const ADD_MAIN_SORTING = \"ADD_MAIN_SORTING\";\nexport const ADD_SORT_SORTING = \"ADD_SORT_SORTING\";\nexport const ADD_PAYMENT_SORTING = \"ADD_PAYMENT_SORTING\";\n\nexport const SHOW_CUSTOMER_MODAL = \"SHOW_CUSTOMER_MODAL\";\nexport const CLOSE_CUSTOMER_MODAL = \"CLOSE_CUSTOMER_MODAL\";\n","import * as ActionTypes from \"./actionTypes\";\n\nconst initialState = {\n  mainPageOrderList: [],\n  sortPageOrderList: [],\n  isLoading: true,\n};\n\nfunction orderReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.ADD_ORDER:\n      return {\n        ...state,\n        mainPageOrderList: [...state.mainPageOrderList, action.payload],\n        sortPageOrderList: [...state.sortPageOrderList, action.payload],\n      };\n    case ActionTypes.LOAD_ORDERS:\n      if (!action.payload) return state;\n      return {\n        ...state,\n        mainPageOrderList: action.payload,\n        sortPageOrderList: action.payload,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default orderReducer;\n","import * as ActionTypes from \"./actionTypes\";\n\nexport const NEW_ORDER = (newOrder) => ({\n  type: ActionTypes.ADD_ORDER,\n  payload: newOrder,\n});\n\nexport const LOAD_ORDERS = (orders) => ({\n  type: ActionTypes.LOAD_ORDERS,\n  payload: orders,\n});\n\nexport const SET_AUTHENTICATED = (token, employee, username, roles) => ({\n  type: ActionTypes.SET_AUTHENTICATED,\n  payload: {\n    token,\n    employee,\n    username,\n    roles,\n  },\n});\n\nexport const SET_UNAUTHENTICATED = () => ({\n  type: ActionTypes.SET_UNAUTHENTICATED,\n});\n\nexport const SELECT_CUSTOMER = (customer) => ({\n  type: ActionTypes.SELECT_CUSTOMER,\n  payload: customer,\n});\n\nexport const DESELECT_CUSTOMER = () => ({\n  type: ActionTypes.UNSELECT_CUSTOMER,\n});\n\nexport const SET_ACTIVE_SORTING = (sorting) => ({\n  type: ActionTypes.SET_ACTIVE_SORTING,\n  payload: sorting,\n});\n\nexport const ADD_SORTING_BY = (selection, type) => {\n  let sortPage;\n  switch (type) {\n    case \"main\":\n      sortPage = ActionTypes.ADD_MAIN_SORTING;\n      break;\n    case \"sort\":\n      sortPage = ActionTypes.ADD_SORT_SORTING;\n      break;\n    case \"payment\":\n      sortPage = ActionTypes.ADD_PAYMENT_SORTING;\n      break;\n    default:\n      break;\n  }\n  return {\n    type: sortPage,\n    payload: selection,\n  };\n};\n\nexport const UPDATE_SORTING = (selections, type) => {\n  let sortPage;\n  switch (type) {\n    case \"main\":\n      sortPage = ActionTypes.UPDATE_MAIN_SORTING;\n      break;\n    case \"sort\":\n      sortPage = ActionTypes.UPDATE_SORT_SORTING;\n      break;\n    case \"payment\":\n      sortPage = ActionTypes.UPDATE_PAYMENT_SORTING;\n      break;\n    default:\n      break;\n  }\n  return {\n    type: sortPage,\n    payload: selections,\n  };\n};\n\nexport const SHOW_CUSTOMER_MODAL = (customer = {}) => {\n  return {\n    type: ActionTypes.SHOW_CUSTOMER_MODAL,\n    payload: customer,\n  };\n};\n\nexport const CLOSE_CUSTOMER_MODAL = () => ({\n  type: ActionTypes.CLOSE_CUSTOMER_MODAL,\n});\n","import Axios from \"axios\";\nimport { SET_UNAUTHENTICATED } from \"../context/actions\";\nimport store from \"../context/store\";\n\nexport const authorize = async (credentials) => {\n  const response = await Axios.post(\"/api/auth/signin\", credentials);\n  const data = response.data;\n  return data;\n};\n\nexport const unauthorize = () => {\n  store.dispatch(SET_UNAUTHENTICATED());\n};\n","import Axios from \"axios\";\nimport * as AuthService from \"../services/auth-service\";\nimport * as ActionTypes from \"./actionTypes\";\n\nconst initialState = {\n  isAuthenticated: false,\n  loggedUser: null,\n  roles: [],\n};\n\nfunction authReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.SET_AUTHENTICATED:\n      localStorage.setItem(\"token\", action.payload.token);\n      localStorage.setItem(\"username\", action.payload.username);\n      localStorage.setItem(\"roles\", action.payload.roles);\n      localStorage.setItem(\"loggedUser\", JSON.stringify(action.payload.employee));\n\n      Axios.defaults.headers.common[\n        \"Authorization\"\n      ] = `Bearer ${action.payload.token}`;\n\n      Axios.interceptors.response.use(\n        (response) => response,\n        (error) => {\n          error.response?.status === 401\n            ? AuthService.unauthorize()\n            : console.error(error);\n          throw error;\n        }\n      );\n      return {\n        isAuthenticated: true,\n        loggedUser: action.payload.employee,\n        roles: action.payload.roles,\n      };\n    case ActionTypes.SET_UNAUTHENTICATED:\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"username\");\n      localStorage.removeItem(\"roles\");\n      localStorage.removeItem(\"loggedUser\");\n      return {isAuthenticated: false, loggedUser: null};\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;\n","export const EmptySort = {\n  selectedCustomer: null,\n  selectedStatus: null,\n  selectedDateFrom: null,\n  selectedDateTill: null,\n  selectedKind: null,\n  selectedType: null,\n  selectedEmployee: null,\n  selectedDetails: \"\",\n};\n","import * as ActionTypes from \"./actionTypes\";\nimport {EmptySort} from \"../models/SortObject\";\n\nconst initialState = {\n  active: \"main\",\n  main: EmptySort,\n  sort: EmptySort,\n  payment: EmptySort,\n};\n\nfunction sortReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.SET_ACTIVE_SORTING:\n      return {...state, active: action.payload};\n    case ActionTypes.ADD_MAIN_SORTING:\n      return {...state, main: {...state.main, ...action.payload}};\n    case ActionTypes.ADD_SORT_SORTING:\n      return {...state, sort: {...state.sort, ...action.payload}};\n    case ActionTypes.ADD_PAYMENT_SORTING:\n      return {...state, payment: {...state.payment, ...action.payload}};\n    case ActionTypes.UPDATE_MAIN_SORTING:\n      return {...state, main: action.payload};\n    case ActionTypes.UPDATE_SORT_SORTING:\n      return {...state, sort: action.payload};\n    case ActionTypes.UPDATE_PAYMENT_SORTING:\n      return {...state, payment: action.payload};\n    default:\n      return state;\n  }\n}\n\nexport default sortReducer;\n","import {CustomerObject} from \"../models/CustomerObject\";\nimport * as ActionTypes from \"./actionTypes\";\n\nconst initialState = {\n  show: false,\n  customer: CustomerObject,\n};\n\nfunction customerModalReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.SHOW_CUSTOMER_MODAL:\n      return {show: true, customer: action.payload};\n    case ActionTypes.CLOSE_CUSTOMER_MODAL:\n      return {show: false, customer: {}};\n    default:\n      return state;\n  }\n}\n\nexport default customerModalReducer;\n","export const CustomerObject = {\n  customerId: 0,\n  customerName: \"\",\n  customerGroup: \"\",\n  money: 0,\n  payLog: \"\",\n  debtor: false,\n  city: \"\",\n  info: \"\",\n  firstPerson: \"\",\n  firstPhone: \"\",\n  firstEmail: \"\",\n  secondPerson: \"\",\n  secondPhone: \"\",\n  secondEmail: \"\",\n  thirdPerson: \"\",\n  thirdPhone: \"\",\n  thirdEmail: \"\",\n};\n","import authReducer from \"./auth-reducer\";\nimport sortReducer from \"./sort-reducer\";\nimport customerModalReducer from \"./customerModal-reducer\";\n\nconst {createStore, combineReducers} = require(\"redux\");\nconst {default: orderReducer} = require(\"./order-reducer\");\n\nconst store = createStore(\n  combineReducers({\n    auth: authReducer,\n    orders: orderReducer,\n    sortSelections: sortReducer,\n    showCustomerModal: customerModalReducer,\n  })\n);\n\nexport default store;\n","import {TextField, withStyles} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {useFormikContext} from \"formik\";\nimport {fieldToTextField} from \"formik-material-ui\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useDispatch} from \"react-redux\";\nimport {ADD_SORTING_BY} from \"./context/actions\";\n\nconst NoPaddingAutocomplete = withStyles({\n  inputRoot: {\n    '&&[class*=\"MuiOutlinedInput-root\"] $input': {\n      padding: 2,\n    },\n    '&&[class*=\"MuiOutlinedInput-root\"]': {\n      paddingRight: \"40px!important\",\n    },\n  },\n  input: {},\n})(Autocomplete);\n\nfunction ComboBox({\n  label,\n  getName,\n  sortKey,\n  error,\n  validator,\n  setEntrepreneur = false,\n  setDimensions = false,\n  setPrice = false,\n  action = false,\n  sortPage = \"\",\n  textFieldProps,\n  ...props\n}) {\n  const {\n    form: {setFieldValue},\n  } = props;\n  const {\n    values: {order},\n  } = useFormikContext();\n  const {...field} = fieldToTextField(props);\n  const {name} = field;\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n\n  return (\n    <NoPaddingAutocomplete\n      {...props}\n      size=\"small\"\n      error={\"\"}\n      value={field.value}\n      autoHighlight={true}\n      getOptionLabel={getName}\n      onKeyPress={(e) => {\n        if (e.key === \"=\") {\n          if (action) dispatch(action);\n          e.preventDefault();\n        }\n      }}\n      onChange={(_, value) => {\n        if (sortKey) {\n          const sortBy = {};\n          sortBy[sortKey] = value;\n          dispatch(ADD_SORTING_BY(sortBy, sortPage));\n        }\n\n        if (setEntrepreneur) {\n          const entrepreneur =\n            queryClient\n              .getQueryData(\"ce-links\")\n              .find((link) => link.customer.customerId === value?.customerId)\n              ?.entrepreneur || null;\n          setFieldValue(\"order.entrepreneur\", entrepreneur);\n        }\n\n        setFieldValue(name, value);\n\n        if (setDimensions && value && value.width && value.height) {\n          setFieldValue(\"order.width\", value.width);\n          setFieldValue(\"order.height\", value.height);\n        }\n\n        if (setPrice) {\n          if (!value) return;\n          let customerId;\n          let orderKindId;\n          if (value.customerId) {\n            customerId = value.customerId;\n            orderKindId = order.orderKind?.kindId;\n          } else {\n            customerId = order.customer?.customerId;\n            orderKindId = value.kindId;\n          }\n          if (!customerId || !orderKindId) return;\n          const price =\n            queryClient\n              .getQueryData(\"cp-links\")\n              .find(\n                (link) =>\n                  link.customer?.customerId === customerId &&\n                  link.orderKind?.kindId === orderKindId\n              )?.price || 0;\n          setFieldValue(\"order.price\", price);\n        }\n\n        validator(name);\n      }}\n      renderInput={(props) => (\n        <TextField {...props} error={!!error} label={label} variant=\"outlined\" />\n      )}\n    />\n  );\n}\n\nexport default ComboBox;\n","import Axios from \"axios\";\n\nexport const fixOrders = (data, id = 0) => {\n  return data.map((row) => {\n    if (row.orderId === 0) {\n      row.id = id;\n      row.orderId = id;\n    } else {\n      row.id = row.orderId;\n    }\n    !row.date ? (row.date = new Date()) : (row.date = new Date(row.date));\n    return row;\n  });\n};\n\nexport const fetchRecentOrders = async () => {\n  const response = await Axios.get(\"/api/orders/\");\n  const data = response.data;\n\n  if (data) return fixOrders(data);\n  return [];\n};\n\nexport const sortOrders = async (selections, roles) => {\n  const form = {\n    selectedNo: null,\n    selectedCustomer: null,\n    selectedEntrepreneur: null,\n    selectedOperator: null,\n    selectedEmployee: null,\n    selectedStatus: null,\n    selectedDateFrom: null,\n    selectedDateTill: null,\n    selectedPayDateFrom: null,\n    selectedPayDateTill: null,\n    selectedReceiver: null,\n    selectedKind: null,\n    selectedType: null,\n    selectedDetails: \"\",\n  };\n\n  const sendForm = {\n    ...form,\n    selectedNo: selections?.selectedNo,\n    selectedCustomer: selections?.selectedCustomer,\n    selectedEntrepreneur: selections?.selectedEntrepreneur,\n    selectedOperator: selections?.selectedOperator,\n    selectedEmployee: selections?.selectedEmployee,\n    selectedStatus: selections?.selectedStatus,\n    selectedDateFrom: selections?.selectedDateFrom,\n    selectedDateTill: selections?.selectedDateTill,\n    selectedPayDateFrom: selections?.selectedPayDateFrom,\n    selectedPayDateTill: selections?.selectedPayDateTill,\n    selectedReceiver: selections?.selectedReceiver,\n    selectedKind: selections?.selectedKind,\n    selectedType: selections?.selectedType,\n    selectedDetails: selections?.selectedDetails,\n  };\n\n  if (roles.includes(\"ROLE_GROUNDFLOOR\")) {\n    sendForm.selectedType = {typeId: 7};\n  }\n\n  const response = await Axios.post(\"/api/orders/filter/\", sendForm);\n  const data = response.data;\n\n  if (data) return fixOrders(data);\n  return [];\n};\n","export function calculateM2(order) {\n  order.m2 =\n    (((order.width * order.height) / 1000000) * order.amount).toFixed(3) || 0.0;\n}\n\nexport const checkPriceShrink = (form, shrinkStatus, setShrinkStatus) => {\n  if (form.price > 0) {\n    if (!shrinkStatus.shrink) {\n      setShrinkStatus({\n        shrink: true,\n      });\n    }\n  } else if (shrinkStatus.shrink) {\n    setShrinkStatus({\n      shrink: false,\n    });\n  }\n};\n\nexport const fixCustomers = (data, id = 0) => {\n  return data.map((row) => {\n    if (row.orderId === 0) {\n      row.id = id;\n      row.customerId = id;\n    } else {\n      row.id = row.customerId;\n    }\n    return row;\n  });\n};\n","import {Snackbar} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport React from \"react\";\n\nfunction InfoMessage({open, onClose, message, type}) {\n  if (type === \"success\") {\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={onClose}\n      >\n        <Alert onClose={onClose} variant=\"filled\" severity=\"success\">\n          {message}\n        </Alert>\n      </Snackbar>\n    );\n  } else {\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={onClose}\n      >\n        <Alert onClose={onClose} variant=\"filled\" severity=\"error\">\n          {message}\n        </Alert>\n      </Snackbar>\n    );\n  }\n}\n\nexport default InfoMessage;\n","import {TextField} from \"@material-ui/core\";\nimport {useFormikContext} from \"formik\";\nimport React from \"react\";\nimport {calculateM2} from \"./services/utils\";\n\nconst InputField = ({\n  label,\n  field,\n  error,\n  readonly = false,\n  validator,\n  numeric = true,\n  phone = false,\n  ...props\n}) => {\n  const {\n    form: {setFieldValue},\n  } = props;\n  const {values: form} = useFormikContext();\n  const {onChange, name} = field;\n  return (\n    <TextField\n      {...props}\n      {...field}\n      error={!!error}\n      size=\"small\"\n      variant=\"outlined\"\n      autoComplete=\"off\"\n      label={label}\n      InputProps={{readOnly: readonly}}\n      onChange={(e) => {\n        if (!numeric) onChange(e);\n        if (e.target.value.match(/^\\d*\\.?\\d*$/) || e.target.value.length === 0) {\n          onChange(e);\n        }\n        validator(name);\n      }}\n      onKeyUp={(_) => {\n        if (!numeric || phone || !form.order) return;\n        calculateM2(form.order);\n        const sum =\n          form.order.m2 === 0\n            ? Math.ceil(form.order.price * form.order.amount + +form.order.fees)\n            : Math.ceil(+(form.order.m2 * form.order.price) + +form.order.fees);\n        if (sum) setFieldValue(\"order.finalSum\", sum);\n      }}\n    />\n  );\n};\n\nexport default InputField;\n","export const EmptyOrder = {\n  orderId: 0,\n  billNo: 0,\n  date: \"\",\n  employee: { userID: 60 },\n  entrepreneur: null,\n  customer: null,\n  orderType: null,\n  orderKind: null,\n  width: \"\",\n  height: \"\",\n  amount: \"\",\n  m2: 0.0,\n  price: \"\",\n  fees: \"\",\n  finalSum: \"\",\n  paySum: 0,\n  status: { id: 1 },\n  comment: \"\",\n};\n","import { FormControlLabel, Switch } from \"@material-ui/core\";\nimport { useField } from \"formik\";\nimport React from \"react\";\n\nconst SwitchControl = ({ label, isChecked, ...props }) => {\n  const [field] = useField(props);\n  return (\n    <FormControlLabel\n      control={<Switch {...props} {...field} checked={isChecked} color=\"primary\" />}\n      label={label}\n    />\n  );\n};\n\nexport default SwitchControl;\n","import {Button} from \"@material-ui/core\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {LastPageOutlined, LinkOutlined, LockOpenOutlined} from \"@material-ui/icons\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {Field, Form, Formik} from \"formik\";\nimport React, {useState} from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport * as yup from \"yup\";\nimport \"./AddOrderForm.css\";\nimport ComboBox from \"./ComboBox\";\nimport {SHOW_CUSTOMER_MODAL, UPDATE_SORTING} from \"./context/actions\";\nimport store from \"./context/store\";\nimport useSaveDimensions from \"./hooks/useSaveDimensions\";\nimport useSaveCELink from \"./hooks/useSaveCELink\";\nimport useSaveCPLink from \"./hooks/useSaveCPLink\";\nimport useSaveOrder from \"./hooks/useSaveOrder\";\nimport InfoMessage from \"./InfoMessage\";\nimport InputField from \"./InputField\";\nimport {EmptyOrder} from \"./models/OrderObject\";\nimport {EmptySort} from \"./models/SortObject\";\nimport {checkPriceShrink} from \"./services/utils\";\nimport SwitchControl from \"./SwitchControl\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    margin: \"0 auto\",\n    width: \"52%\",\n  },\n  lock: {\n    padding: 0,\n    width: \"5px\",\n    backgroundColor: \"white !important\",\n    minWidth: 0,\n\n    \"&:hover\": {\n      backgroundColor: \"white\",\n    },\n  },\n  svg: {\n    fill: \"rgba(0, 0, 0, 0.23)\",\n\n    \"&:hover\": {\n      fill: \"black\",\n    },\n  },\n  clear: {\n    backgroundColor: \"#fff\",\n    minWidth: 0,\n    justifySelf: \"flex-end\",\n    margin: \"0px 0px 1px 0\",\n    width: \"2.4rem\",\n  },\n}));\n\nconst validationSchema = yup.object({\n  order: yup.object({\n    entrepreneur: yup.object().required(),\n    customer: yup.object().required(),\n    orderType: yup.object().required(),\n    orderKind: yup.object().required(),\n    width: yup.number().lessThan(2000000000).positive().min(0).required(),\n    height: yup.number().lessThan(2000000000).positive().min(0).required(),\n    amount: yup.number().lessThan(2000000000).positive().min(0).required(),\n    price: yup.number().lessThan(2000000000).positive().min(0).required(),\n    fees: yup.number().lessThan(2000000000).positive().min(0).required(),\n    finalSum: yup.number().lessThan(2000000000).positive().min(0).required(),\n    comment: yup.string().trim().max(255).required(),\n  }),\n});\n\nexport default function AddOrderForm() {\n  const classes = useStyles();\n  const newOrderQuery = useSaveOrder();\n  const newCELinkQuery = useSaveCELink();\n  const newCPLinkQuery = useSaveCPLink();\n  const saveDimensionsQuery = useSaveDimensions();\n  const queryClient = useQueryClient();\n  const [shrinkStatus, setShrinkStatus] = useState({});\n  const [showOrderInfo, setShowOrderInfo] = React.useState({\n    success: false,\n    error: false,\n  });\n  const [showCELinkInfo, setShowCELinkInfo] = React.useState({\n    success: false,\n    error: false,\n  });\n  const [showDimensionsInfo, setShowDimensionsInfo] = React.useState({\n    success: false,\n    error: false,\n  });\n  const [showPriceInfo, setShowPriceInfo] = React.useState({\n    success: false,\n    error: false,\n  });\n\n  const handleClose = () => {\n    setShowOrderInfo({success: false, error: false});\n    setShowCELinkInfo({success: false, error: false});\n    setShowDimensionsInfo({success: false, error: false});\n    setShowPriceInfo({success: false, error: false});\n  };\n\n  const clearAndUnsort = (e, resetForm) => {\n    store.dispatch(UPDATE_SORTING({...EmptySort}, \"main\"));\n    setShowOrderInfo(true);\n    resetForm(e);\n  };\n\n  const linkCustomer = (customer, entrepreneur) => {\n    if (!customer || !entrepreneur) {\n      setShowCELinkInfo({success: false, error: true});\n      return;\n    }\n    newCELinkQuery.mutate({\n      customerId: customer.customerId,\n      entrepreneurId: entrepreneur.entrepreneurId,\n      setStatus: setShowCELinkInfo,\n    });\n  };\n\n  const linkDimensions = (orderKind, width, height) => {\n    if (!orderKind || !width || !height) {\n      setShowDimensionsInfo({success: false, error: true});\n      return;\n    }\n    orderKind.width = width;\n    orderKind.height = height;\n    saveDimensionsQuery.mutate({\n      orderKind: orderKind,\n      setStatus: setShowDimensionsInfo,\n    });\n  };\n\n  const linkPrice = (customer, orderKind, price) => {\n    if (!customer || !orderKind || !price) {\n      setShowPriceInfo({success: false, error: true});\n      return;\n    }\n    newCPLinkQuery.mutate({\n      customerId: customer.customerId,\n      orderKindId: orderKind.kindId,\n      price: price,\n      setStatus: setShowPriceInfo,\n    });\n  };\n\n  const setUrgence = (isUrgently, order) => {\n    if (isUrgently) {\n      if (order.finalSum * 0.15 < 10) {\n        order.finalSum = +order.finalSum + 10;\n      } else {\n        order.finalSum = Math.ceil(order.finalSum * 1.15);\n      }\n      order.comment = \"(Терміново) \" + order.comment;\n    }\n  };\n\n  const setAcceptance = (onAcceptance, order) => {\n    onAcceptance\n      ? (order.status = queryClient\n          .getQueryData(\"statuses\")\n          .find((status) => status.id === 1))\n      : (order.status = queryClient\n          .getQueryData(\"statuses\")\n          .find((status) => status.id === 2));\n  };\n\n  const onFormSubmit = (form, resetForm) => {\n    setUrgence(form.isUrgently, form.order);\n    setAcceptance(form.onAcceptance, form.order);\n    newOrderQuery.mutate({\n      newOrder: form.order,\n      resetForm: form.clearFields ? resetForm : () => {},\n      setStatus: setShowOrderInfo,\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik\n        validateOnChange={false}\n        validateOnMount={false}\n        validateOnBlur={false}\n        initialValues={{\n          order: {\n            ...EmptyOrder,\n            employee: JSON.parse(localStorage.getItem(\"loggedUser\")),\n          },\n          onAcceptance: false,\n          clearFields: true,\n          isUrgently: false,\n        }}\n        onSubmit={(form, {resetForm}) => onFormSubmit(form, resetForm)}\n        validationSchema={validationSchema}\n      >\n        {({values, errors, validateField, handleReset}) => (\n          <Form>\n            {checkPriceShrink(values.order, shrinkStatus, setShrinkStatus)}\n            <div className=\"row__one\">\n              <Field\n                name=\"order.entrepreneur\"\n                label=\"Підприємець\"\n                error={errors?.order?.entrepreneur}\n                validator={validateField}\n                component={ComboBox}\n                disabled={newOrderQuery.isFetching}\n                getName={(option) => option.fullName || \"\"}\n                options={queryClient.getQueryData(\"entrepreneurs\") || []}\n              />\n              <Button\n                className={classes.lock}\n                disableRipple={true}\n                onClick={() =>\n                  linkCustomer(values.order.customer, values.order.entrepreneur)\n                }\n              >\n                <LastPageOutlined className={classes.svg} />\n              </Button>\n              <Field\n                name=\"order.customer\"\n                label=\"Замовник\"\n                error={errors?.order?.customer}\n                validator={validateField}\n                component={ComboBox}\n                setEntrepreneur={true}\n                setPrice={true}\n                sortKey=\"selectedCustomer\"\n                sortPage=\"main\"\n                action={SHOW_CUSTOMER_MODAL({})}\n                disabled={newOrderQuery.isFetching}\n                getName={(option) => option.customerName || \"\"}\n                options={queryClient.getQueryData(\"customers\") || []}\n              />\n              <Field\n                name=\"order.orderType\"\n                label=\"Вид\"\n                error={errors?.order?.orderType}\n                validator={validateField}\n                component={ComboBox}\n                disabled={newOrderQuery.isFetching}\n                getName={(option) => option.typeName || \"\"}\n                options={queryClient.getQueryData(\"orderTypes\") || []}\n              />\n\n              <Field\n                name=\"order.orderKind\"\n                label=\"Тип\"\n                error={errors?.order?.orderKind}\n                validator={validateField}\n                component={ComboBox}\n                setPrice={true}\n                setDimensions={true}\n                disabled={newOrderQuery.isFetching}\n                getName={(option) => option.kindName || \"\"}\n                options={values.order.orderType?.orderKinds || []}\n              />\n            </div>\n\n            <div className=\"row__two\">\n              <Field\n                name=\"order.width\"\n                label=\"Ширина\"\n                error={errors?.order?.width}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <Button\n                className={classes.lock}\n                disableRipple={true}\n                onClick={() =>\n                  linkDimensions(\n                    values.order.orderKind,\n                    values.order.width,\n                    values.order.height\n                  )\n                }\n              >\n                <LinkOutlined className={classes.svg} />\n              </Button>\n              <Field\n                name=\"order.height\"\n                label=\"Висота\"\n                error={errors?.order?.height}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <Field\n                name=\"order.amount\"\n                label=\"Кількість\"\n                error={errors?.order?.amount}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <OutlinedInput\n                id=\"outlined\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={\n                  (\n                    ((values.order.width * values.order.height) / 1000000) *\n                    values.order.amount\n                  ).toFixed(3) || 0.0\n                }\n                endAdornment={<InputAdornment position=\"end\">м²</InputAdornment>}\n                disabled\n              />\n\n              <Field\n                name=\"order.price\"\n                label=\"Ціна\"\n                error={errors?.order?.price}\n                validator={validateField}\n                InputLabelProps={shrinkStatus}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <Button\n                className={classes.lock}\n                disableRipple={true}\n                onClick={() =>\n                  linkPrice(\n                    values.order.customer,\n                    values.order.orderKind,\n                    values.order.price\n                  )\n                }\n              >\n                <LockOpenOutlined className={classes.svg} />\n              </Button>\n\n              <Field\n                name=\"order.fees\"\n                label=\"Послуги\"\n                error={errors?.order?.fees}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <Field\n                name=\"order.finalSum\"\n                label=\"Сума\"\n                error={errors?.order?.finalSum}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n            </div>\n\n            <div className=\"row__three\">\n              <Field\n                name=\"order.comment\"\n                label=\"Опис замовлення\"\n                error={errors?.order?.comment}\n                validator={validateField}\n                numeric={false}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n            </div>\n\n            <div className=\"row__four\">\n              <div className=\"controls\">\n                <SwitchControl\n                  name=\"onAcceptance\"\n                  isChecked={values.onAcceptance}\n                  label=\"На погодженні\"\n                  disabled={newOrderQuery.isFetching}\n                />\n                <SwitchControl\n                  name=\"clearFields\"\n                  isChecked={values.clearFields}\n                  label=\"Очищати поля\"\n                  disabled={newOrderQuery.isFetching}\n                />\n                <SwitchControl\n                  name=\"isUrgently\"\n                  isChecked={values.isUrgently}\n                  label=\"Терміново\"\n                  disabled={newOrderQuery.isFetching}\n                />\n              </div>\n\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={newOrderQuery.isFetching}\n                type=\"submit\"\n              >\n                Зберегти замовлення\n              </Button>\n\n              <Button\n                className={classes.clear}\n                onClick={(e) => clearAndUnsort(e, handleReset)}\n                disabled={newOrderQuery.isFetching}\n                variant=\"contained\"\n                type=\"button\"\n              >\n                <RefreshIcon></RefreshIcon>\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n      <InfoMessage\n        type=\"success\"\n        open={showOrderInfo.success}\n        onClose={handleClose}\n        message=\"Замовлення успішно додано.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showOrderInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при додаванні замовлення.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showCELinkInfo.success}\n        onClose={handleClose}\n        message=\"Зв'язок збережено.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showCELinkInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні зв'язку.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showDimensionsInfo.success}\n        onClose={handleClose}\n        message=\"Розміри збережено.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showDimensionsInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні розмірів.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showPriceInfo.success}\n        onClose={handleClose}\n        message=\"Ціна прив'язана.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showPriceInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні ціни.\"\n      />\n    </div>\n  );\n}\n","import Axios from \"axios\";\nimport {useQueryClient, useMutation} from \"react-query\";\nimport {EmptySort} from \"../models/SortObject\";\nimport {UPDATE_SORTING} from \"../context/actions\";\nimport {fixOrders} from \"../services/orders-service\";\nimport store from \"../context/store\";\nimport {calculateM2} from \"../services/utils\";\n\nexport default function useSaveOrder() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.post(\"/api/orders/\", params.newOrder), {\n    onMutate: (mutationObject) => {\n      calculateM2(mutationObject.newOrder);\n\n      mutationObject.newOrder = fixOrders(\n        [mutationObject.newOrder],\n        queryClient.getQueryData([\"orders\", 1, EmptySort]).length > 0\n          ? queryClient.getQueryData([\"orders\", 1, EmptySort])[0].orderId + 1\n          : 1\n      )[0];\n\n      queryClient.setQueryData(\n        [\"orders\", 1, EmptySort],\n        [\n          ...queryClient.getQueryData([\"orders\", 1, EmptySort]),\n          mutationObject.newOrder,\n        ]\n      );\n    },\n    onSuccess: (_, passedParams) => {\n      passedParams.setStatus({success: true, error: false});\n      store.dispatch(UPDATE_SORTING({...EmptySort}, \"main\"));\n      passedParams.resetForm();\n    },\n    onError: (_, passedParams) => {\n      passedParams.setStatus({success: false, error: true});\n    },\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveCELink() {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (params) =>\n      Axios.get(\"/api/ce-links/\" + params.customerId + \"/\" + params.entrepreneurId),\n    {\n      onSuccess: (_, passedParams) => {\n        queryClient.invalidateQueries(\"ce-links\");\n        passedParams.setStatus({success: true, error: false});\n      },\n      onError: (_, passedParams) => {\n        passedParams.setStatus({success: false, error: true});\n      },\n    }\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveCELink() {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (params) =>\n      Axios.get(\n        \"/api/cp-links/\" +\n          params.customerId +\n          \"/\" +\n          params.orderKindId +\n          \"/\" +\n          params.price\n      ),\n    {\n      onSuccess: (_, passedParams) => {\n        queryClient.invalidateQueries(\"cp-links\");\n        passedParams.setStatus({success: true, error: false});\n      },\n      onError: (_, passedParams) => {\n        passedParams.setStatus({success: false, error: true});\n      },\n    }\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveDimensions() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.put(\"/api/order-kinds/\", params.orderKind), {\n    onSuccess: (_, passedParams) => {\n      queryClient.invalidateQueries(\"orderTypes\");\n      passedParams.setStatus({success: true, error: false});\n    },\n    onError: (_, passedParams) => {\n      passedParams.setStatus({success: false, error: true});\n    },\n  });\n}\n","import React from \"react\";\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\nimport {makeStyles} from \"@material-ui/core\";\nimport {fieldToTextField} from \"formik-material-ui\";\n\nconst useStyles = makeStyles(() => ({\n  datepicker: {\n    margin: 0,\n  },\n}));\n\nfunction DatePicker({label, validator, onTouch = false, ...props}) {\n  const classes = useStyles();\n  const {\n    form: {setFieldValue},\n  } = props;\n  const {...field} = fieldToTextField(props);\n  const {name} = field;\n\n  return (\n    <KeyboardDatePicker\n      {...props}\n      {...field}\n      autoOk={true}\n      autoComplete=\"off\"\n      helperText={\"\"}\n      className={classes.datepicker}\n      inputVariant=\"outlined\"\n      variant=\"inline\"\n      format=\"dd/MM/yyyy\"\n      margin=\"normal\"\n      label={label}\n      onChange={(value) => {\n        setFieldValue(name, value);\n\n        if (onTouch) {\n          onTouch(true);\n        }\n\n        if (validator) {\n          validator(name);\n        }\n      }}\n      KeyboardButtonProps={{\n        \"aria-label\": \"change date\",\n      }}\n    />\n  );\n}\n\nexport default DatePicker;\n","import {Button} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as yup from \"yup\";\nimport ComboBox from \"./ComboBox\";\nimport {UPDATE_SORTING} from \"./context/actions\";\nimport DatePicker from \"./DatePicker\";\nimport InputField from \"./InputField\";\nimport {EmptySort} from \"./models/SortObject\";\nimport \"./SortForm.css\";\nimport SwitchControl from \"./SwitchControl\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    margin: \"0 auto\",\n    width: \"52%\",\n  },\n  button: {\n    width: \"16rem\",\n    justifySelf: \"center\",\n  },\n  clear: {\n    backgroundColor: \"#fff\",\n    minWidth: 0,\n    justifySelf: \"flex-end\",\n    margin: \"0px 0px 1px 0\",\n    width: \"2.4rem\",\n  },\n}));\n\nconst validationSchema = yup.object({\n  sort: yup.object({\n    selectedCustomer: yup.object().nullable(),\n    selectedStatus: yup.object().nullable(),\n    selectedDateFrom: yup.date().nullable(),\n    selectedDateTill: yup.date().nullable(),\n    selectedKind: yup.object().nullable(),\n    selectedType: yup.object().nullable(),\n    selectedDetails: yup.string().trim().max(255).nullable(),\n  }),\n});\n\nfunction SortForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n  const authState = useSelector((state) => state.auth);\n\n  const clearAndUnsort = (e, resetForm) => {\n    dispatch(UPDATE_SORTING({...EmptySort}, \"sort\"));\n    resetForm(e);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik\n        validateOnChange={false}\n        validateOnMount={false}\n        validateOnBlur={false}\n        initialValues={{sort: EmptySort, showUserOrders: false}}\n        onSubmit={(form) => {\n          form.showUserOrders\n            ? (form.sort.selectedEmployee = authState.loggedUser)\n            : (form.sort.selectedEmployee = null);\n          form.sort.selectedDetails = form.sort.selectedDetails.trim();\n          dispatch(UPDATE_SORTING(form.sort, \"sort\"));\n        }}\n        validationSchema={validationSchema}\n      >\n        {({values, errors, handleReset, validateField}) => (\n          <Form>\n            <div className=\"sort__row__one\">\n              <Field\n                name=\"sort.selectedCustomer\"\n                label=\"Замовник\"\n                error={errors?.customer}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.customerName || \"\"}\n                options={queryClient.getQueryData(\"customers\") || []}\n              />\n              <Field\n                name=\"sort.selectedType\"\n                label=\"Вид\"\n                error={errors?.orderType}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.typeName || \"\"}\n                options={queryClient.getQueryData(\"orderTypes\") || []}\n              />\n              <Field\n                name=\"sort.selectedKind\"\n                label=\"Тип\"\n                error={errors?.orderKind}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.kindName || \"\"}\n                options={values.sort.selectedType?.orderKinds || []}\n              />\n            </div>\n\n            <div className=\"sort__row__two\">\n              <div className=\"datepickers\">\n                <Field\n                  component={DatePicker}\n                  label=\"Від\"\n                  name=\"sort.selectedDateFrom\"\n                />\n                <Field\n                  component={DatePicker}\n                  label=\"До\"\n                  name=\"sort.selectedDateTill\"\n                />\n              </div>\n              <Field\n                name=\"sort.selectedStatus\"\n                label=\"Статус\"\n                error={errors?.selectedStatus}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.name || \"\"}\n                options={queryClient.getQueryData(\"statuses\") || []}\n              />\n              <Field\n                name=\"sort.selectedDetails\"\n                label=\"Опис замовлення\"\n                error={errors?.selectedDetails}\n                numeric={false}\n                component={InputField}\n                validator={validateField}\n              />\n            </div>\n\n            <div className=\"sort__row__three\">\n              <SwitchControl\n                name=\"showUserOrders\"\n                isChecked={values.showUserOrders}\n                label=\"Лише мої замовлення\"\n              />\n\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                className={classes.button}\n                type=\"submit\"\n              >\n                Сортувати\n              </Button>\n\n              <Button\n                className={classes.clear}\n                onClick={(e) => clearAndUnsort(e, handleReset)}\n                variant=\"contained\"\n                type=\"button\"\n              >\n                <RefreshIcon></RefreshIcon>\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default SortForm;\n","import {TextField} from \"@material-ui/core\";\nimport {useFormikContext} from \"formik\";\nimport React from \"react\";\n\nconst DependentInput = ({name, label, field, error, validator, value, ...props}) => {\n  const {onChange} = field;\n  const {\n    values: {payment},\n    setFieldValue,\n  } = useFormikContext();\n\n  React.useEffect(() => {\n    if (payment.paymentType) {\n      setFieldValue(\"payment.percentage\", payment.paymentType?.paymentPercentage);\n    } else {\n      setFieldValue(\"payment.percentage\", 0);\n    }\n  }, [payment.paymentType, setFieldValue]);\n\n  return (\n    <TextField\n      {...props}\n      {...field}\n      error={!!error}\n      id=\"metrics\"\n      size=\"small\"\n      variant=\"outlined\"\n      autoComplete=\"off\"\n      label={label}\n      onChange={(e) => {\n        if (e.target.value.match(/^\\d*\\.?\\d*$/) || e.target.value.length === 0) {\n          setFieldValue(\"payment.percentage\", e.target.value);\n          onChange(e);\n        }\n        validator(name);\n      }}\n    />\n  );\n};\n\nexport default DependentInput;\n","import Axios from \"axios\";\n\nexport const fetchCustomers = async () => {\n  const res = await Axios.get(\"/api/customers/\");\n  return res.data;\n};\n\nexport const fetchEntrepreneurs = async () => {\n  const res = await Axios.get(\"/api/entrepreneurs/\");\n  return res.data;\n};\n\nexport const fetchOrderTypes = async () => {\n  const res = await Axios.get(\"/api/order-types/\");\n  return res.data;\n};\n\nexport const fetchOrderKinds = async () => {\n  const res = await Axios.get(\"/api/order-kinds/\");\n  return res.data;\n};\n\nexport const fetchStatuses = async () => {\n  const res = await Axios.get(\"/api/orders/statuses/\");\n  return res.data;\n};\n\nexport const fetchPaymentMethods = async () => {\n  const res = await Axios.get(\"/api/payments/\");\n  return res.data;\n};\n\nexport const fetchCELinks = async () => {\n  const res = await Axios.get(\"/api/ce-links/\");\n  return res.data;\n};\n\nexport const fetchCPLinks = async () => {\n  const res = await Axios.get(\"/api/cp-links/\");\n  return res.data;\n};\n","export const EmptyPayment = {\n  entrepreneur: null,\n  customer: null,\n  paymentDate: null,\n  sum: 0,\n  percentage: 0,\n  paymentType: null,\n};\n","import {Button} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {LinkOutlined} from \"@material-ui/icons\";\nimport {Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport * as yup from \"yup\";\nimport ComboBox from \"./ComboBox\";\nimport {UPDATE_SORTING} from \"./context/actions\";\nimport store from \"./context/store\";\nimport DatePicker from \"./DatePicker\";\nimport DependentInput from \"./DependentInput\";\nimport useMakePayment from \"./hooks/useMakePayment\";\nimport usePaymentMethods from \"./hooks/usePaymentMethods\";\nimport useUpdatePaymentMethod from \"./hooks/useUpdatePaymentMethod\";\nimport InfoMessage from \"./InfoMessage\";\nimport InputField from \"./InputField\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {EmptyPayment} from \"./models/PaymentObject\";\nimport {EmptySort} from \"./models/SortObject\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    margin: \"0 auto\",\n    width: \"52%\",\n  },\n  row__one: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"1fr 2fr\",\n    margin: \".5rem auto 1rem auto\",\n  },\n  row__two: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"1fr 1fr 0.05fr 1fr 1fr\",\n    margin: \"1rem auto\",\n\n    \"& .MuiOutlinedInput-input\": {\n      padding: \"8px 8px\",\n    },\n\n    \"& .MuiInputLabel-outlined\": {\n      transform: \"translate(14px, 10px) scale(1)\",\n    },\n\n    \"& .MuiButtonBase-root\": {\n      padding: \"2px !important\",\n    },\n\n    \"& .MuiOutlinedInput-adornedEnd\": {\n      paddingRight: \"3px\",\n    },\n\n    \"& .MuiAutocomplete-endAdornment\": {\n      top: \"initial\",\n      right: \"11px !important\",\n    },\n  },\n  button: {\n    gridColumn: 2,\n    width: \"16rem\",\n    height: \"2.375rem\",\n    justifySelf: \"center\",\n  },\n  clear: {\n    backgroundColor: \"#fff\",\n    minWidth: 0,\n    justifySelf: \"flex-end\",\n    margin: \"0px 0px 1px 0\",\n    width: \"2.4rem\",\n  },\n  lock: {\n    padding: 0,\n    width: \"100%\",\n    backgroundColor: \"white !important\",\n    minWidth: 0,\n\n    \"&:hover\": {\n      backgroundColor: \"white\",\n    },\n  },\n  svg: {\n    fill: \"rgba(0, 0, 0, 0.23)\",\n\n    \"&:hover\": {\n      fill: \"black\",\n    },\n  },\n  successInfo: {\n    display: \"flex\",\n  },\n  successText: {\n    margin: \"auto .5rem\",\n    color: \"#27A637\",\n  },\n  errorInfo: {\n    display: \"flex\",\n  },\n  errorText: {\n    margin: \"auto .5rem\",\n    color: \"#d2000a\",\n  },\n  errorSvg: {\n    fontSize: \"2.54rem\",\n    fill: \"#d2000a\",\n  },\n  successSvg: {\n    fontSize: \"2.54rem\",\n    fill: \"#27A637\",\n  },\n}));\n\nconst validationSchema = yup.object({\n  payment: yup.object({\n    entrepreneur: yup.object().nullable(),\n    customer: yup.object().required(),\n    paymentDate: yup.date().required(),\n    sum: yup.number().lessThan(2000000000).positive().required(),\n    percentage: yup.number().lessThan(2000000000).positive().min(0).required(),\n    paymentType: yup.object().required(),\n  }),\n});\n\nfunction PaymentForm() {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const makePaymentQuery = useMakePayment();\n  const paymentMethods = usePaymentMethods();\n  const updatePaymentMethodQuery = useUpdatePaymentMethod();\n  const [showPaymentInfo, setShowPaymentInfo] = React.useState({\n    success: false,\n    error: false,\n  });\n  const [showPercentageLinkInfo, setShowPercentageLinkInfo] = React.useState({\n    success: false,\n    error: false,\n  });\n\n  const handleClose = () => {\n    setShowPaymentInfo({success: false, error: false});\n    setShowPercentageLinkInfo({success: false, error: false});\n  };\n\n  const linkPercentage = (paymentMethod, percentage) => {\n    paymentMethod.paymentPercentage = percentage;\n    updatePaymentMethodQuery.mutate({\n      paymentMethod: paymentMethod,\n      setStatus: setShowPercentageLinkInfo,\n    });\n  };\n\n  const clearAndUnsort = (e, resetForm) => {\n    store.dispatch(UPDATE_SORTING({...EmptySort}, \"payment\"));\n    resetForm(e);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik\n        validateOnChange={false}\n        validateOnMount={false}\n        validateOnBlur={false}\n        initialValues={{payment: {...EmptyPayment, paymentDate: new Date()}}}\n        validationSchema={validationSchema}\n        onSubmit={(form) => {\n          form.payment.receiver = form.payment.paymentType.typeName;\n          makePaymentQuery.mutate({\n            payment: form.payment,\n            setStatus: setShowPaymentInfo,\n          });\n        }}\n      >\n        {({values, errors, handleReset, validateField}) => (\n          <Form style={{margin: \"0 auto\"}}>\n            <div className={classes.row__one}>\n              <Field\n                name=\"payment.entrepreneur\"\n                label=\"Підприємець\"\n                error={errors?.payment?.entrepreneur}\n                validator={validateField}\n                component={ComboBox}\n                sortKey=\"selectedEntrepreneur\"\n                sortPage=\"payment\"\n                disabled={makePaymentQuery.isLoading}\n                getName={(option) => option.fullName || \"\"}\n                options={queryClient.getQueryData(\"entrepreneurs\") || []}\n              />\n              <Field\n                name=\"payment.customer\"\n                label=\"Замовник\"\n                error={errors?.payment?.customer}\n                component={ComboBox}\n                validator={validateField}\n                sortKey=\"selectedCustomer\"\n                sortPage=\"payment\"\n                disabled={makePaymentQuery.isLoading}\n                getName={(option) => option.customerName || \"\"}\n                options={queryClient.getQueryData(\"customers\") || []}\n              />\n            </div>\n\n            <div className={classes.row__two}>\n              <Field\n                component={DatePicker}\n                label=\"Дата\"\n                name=\"payment.paymentDate\"\n                validator={validateField}\n                disabled={makePaymentQuery.isLoading}\n              />\n\n              <Field\n                name=\"payment.paymentType\"\n                label=\"Тип оплати\"\n                error={errors?.payment?.paymentType}\n                component={ComboBox}\n                validator={validateField}\n                disabled={makePaymentQuery.isLoading}\n                getName={(option) => option.typeName || \"\"}\n                options={paymentMethods?.data || []}\n              />\n              <Button\n                className={classes.lock}\n                disableRipple={true}\n                onClick={() =>\n                  linkPercentage(\n                    values.payment.paymentType,\n                    values.payment.percentage\n                  )\n                }\n              >\n                <LinkOutlined className={classes.svg} />\n              </Button>\n              <Field\n                name=\"payment.percentage\"\n                label=\"Відсоток\"\n                error={errors?.payment?.percentage}\n                validator={validateField}\n                component={DependentInput}\n                disabled={makePaymentQuery.isLoading}\n              />\n              <Field\n                name=\"payment.sum\"\n                label=\"Сума\"\n                error={errors?.payment?.sum}\n                validator={validateField}\n                component={InputField}\n                disabled={makePaymentQuery.isLoading}\n              />\n            </div>\n\n            <div className=\"sort__row__three\">\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={makePaymentQuery.isLoading}\n                className={classes.button}\n                type=\"submit\"\n              >\n                Оплатити\n              </Button>\n\n              <Button\n                className={classes.clear}\n                onClick={(e) => clearAndUnsort(e, handleReset)}\n                disabled={makePaymentQuery.isLoading}\n                variant=\"contained\"\n                type=\"button\"\n              >\n                <RefreshIcon></RefreshIcon>\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n      <InfoMessage\n        type=\"success\"\n        open={showPaymentInfo.success}\n        onClose={handleClose}\n        message=\"Оплата успішно внесена.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showPaymentInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при внесенні оплати.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showPercentageLinkInfo.success}\n        onClose={handleClose}\n        message=\"Зв'язок успішно збережений.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showPercentageLinkInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні зв'язку.\"\n      />\n    </div>\n  );\n}\n\nexport default PaymentForm;\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useMakePayment() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.post(\"/api/payments/\", params.payment), {\n    onError: (_, params) => {\n      params.setStatus({success: false, error: true});\n    },\n    onSuccess: (_, params) => {\n      params.setStatus({success: true, error: false});\n      queryClient.invalidateQueries([\"orders\"]);\n      params.payment.sum = 0;\n    },\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as DataService from \"../services/customer-service\";\n\nexport default function usePaymentMethods() {\n  return useQuery(\"paymentMethods\", DataService.fetchPaymentMethods, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useUpdatePaymentMethod() {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (params) => Axios.put(\"/api/payments/types/\", params.paymentMethod),\n    {\n      onSuccess: (_, passedParams) => {\n        queryClient.invalidateQueries(\"paymentMethods\");\n        passedParams.setStatus({success: true, error: false});\n      },\n      onError: (_, passedParams) => {\n        passedParams.setStatus({success: false, error: true});\n      },\n    }\n  );\n}\n","import {Button, Collapse, Paper, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport AddOrderForm from \"./AddOrderForm\";\nimport SortForm from \"./SortForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport {useIsFetching, useQueryClient} from \"react-query\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {SET_ACTIVE_SORTING} from \"./context/actions\";\nimport \"./ActionBar.css\";\n\nexport default function ActionBar() {\n  const [currentTab, setTab] = useState(0);\n  const queryClient = useQueryClient();\n  const dispatch = useDispatch();\n  const isFetching = useIsFetching();\n  const authState = useSelector((store) => store.auth);\n  const sortState = useSelector((state) => state.sortSelections);\n\n  const open = (tabId) => (currentTab === tabId ? setTab(0) : setTab(tabId));\n\n  const invalidateAddOrderValues = () => {\n    queryClient.invalidateQueries(\"customers\");\n    queryClient.invalidateQueries(\"ce-links\");\n    queryClient.invalidateQueries(\"cp-links\");\n    if (!isFetching) dispatch(SET_ACTIVE_SORTING(\"main\"));\n  };\n\n  const invalidateSortValues = () => {\n    queryClient.invalidateQueries(\"customers\");\n    queryClient.invalidateQueries(\"statuses\");\n    if (!isFetching) dispatch(SET_ACTIVE_SORTING(\"sort\"));\n  };\n\n  const invalidatePaymentValues = () => {\n    queryClient.invalidateQueries(\"customers\");\n    if (!isFetching) dispatch(SET_ACTIVE_SORTING(\"payment\"));\n  };\n\n  const showCustomerInfo = () => {\n    if (!sortState[sortState.active].selectedCustomer) return;\n    return sortState[sortState.active].selectedCustomer?.debtor ? (\n      <>\n        <Typography variant=\"subtitle1\">\n          <img\n            className=\"debtor-mark\"\n            src=\"img/Blackmark.svg\"\n            width=\"19\"\n            height=\"19\"\n            alt=\"blackmark\"\n          />{\" \"}\n          <strong>\n            {sortState[sortState.active].selectedCustomer?.customerName}\n          </strong>{\" \"}\n          {sortState[sortState.active].selectedCustomer?.customerGroup}:{\" \"}\n          {sortState[sortState.active].selectedCustomer?.info}\n        </Typography>\n      </>\n    ) : (\n      <>\n        <Typography variant=\"subtitle1\">\n          <strong>\n            {sortState[sortState.active].selectedCustomer?.customerName}\n          </strong>{\" \"}\n          {sortState[sortState.active].selectedCustomer?.customerGroup}:{\" \"}\n          {sortState[sortState.active].selectedCustomer?.info}\n        </Typography>\n      </>\n    );\n  };\n\n  return (\n    <Paper elevation={2}>\n      <div className=\"action_bar_container\">\n        <div className=\"action__bar\">\n          <div className=\"action__bar__info\">{showCustomerInfo()}</div>\n          <div className=\"action__bar__button\">\n            {!authState.roles.includes(\"ROLE_GROUNDFLOOR\") && (\n              <Button variant=\"contained\" color=\"primary\" onClick={() => open(1)}>\n                Додати замовлення\n              </Button>\n            )}\n            <Button\n              style={{marginLeft: \".5rem\"}}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => open(2)}\n            >\n              Сортування\n            </Button>\n            {!authState.roles.includes(\"ROLE_GROUNDFLOOR\") && (\n              <Button\n                style={{marginLeft: \".5rem\"}}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => open(3)}\n              >\n                Внести оплату\n              </Button>\n            )}\n          </div>\n        </div>\n\n        <Collapse\n          in={currentTab === 1}\n          timeout=\"auto\"\n          onEntered={invalidateAddOrderValues}\n        >\n          <AddOrderForm />\n        </Collapse>\n\n        <Collapse\n          in={currentTab === 2}\n          timeout=\"auto\"\n          onEntered={invalidateSortValues}\n        >\n          <SortForm />\n        </Collapse>\n\n        <Collapse\n          in={currentTab === 3}\n          timeout=\"auto\"\n          onEntered={invalidatePaymentValues}\n        >\n          <PaymentForm />\n        </Collapse>\n      </div>\n    </Paper>\n  );\n}\n","import {Button, Paper} from \"@material-ui/core\";\nimport React from \"react\";\nimport \"./ActionBar.css\";\n\nexport default function ClientsActionBar() {\n  return (\n    <Paper elevation={2}>\n      <div className=\"action_bar_container\">\n        <div className=\"action__bar\">\n          <div className=\"action__bar__button\">\n            <Button\n              style={{marginLeft: \".5rem\"}}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              EXCEL\n            </Button>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  );\n}\n","import {Link, Paper, TextField} from \"@material-ui/core\";\nimport {XGrid} from \"@material-ui/x-grid\";\nimport React, {useState} from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {SHOW_CUSTOMER_MODAL} from \"./context/actions\";\nimport store from \"./context/store\";\nimport {fixCustomers} from \"./services/utils\";\nimport \"./ClientTable.css\";\n\nconst percentToPixels = (percentage) => {\n  return (window.innerWidth * percentage) / 100;\n};\n\nconst columns = [\n  {\n    field: \"customerName\",\n    headerName: \"Назва замовника\",\n    width: percentToPixels(15),\n    renderCell: (params) => (\n      <Link\n        className=\"name-link\"\n        onClick={() => store.dispatch(SHOW_CUSTOMER_MODAL(params.row))}\n      >\n        <b>{params.value}</b>\n      </Link>\n    ),\n  },\n  {\n    field: \"debtor\",\n    headerName: \"Боржник\",\n    width: percentToPixels(6.5),\n    cellClassName: \"centered\",\n    renderCell: (params) => {\n      if (params.value) {\n        return (\n          <img src=\"img/Blackmark.svg\" width=\"19\" height=\"19\" alt=\"blackmark\" />\n        );\n      } else return <div></div>;\n    },\n  },\n  {\n    field: \"customerGroup\",\n    headerName: \"Група\",\n    width: percentToPixels(10),\n  },\n  {\n    field: \"firstPerson\",\n    headerName: \"Особа 1\",\n    width: percentToPixels(10),\n  },\n  {\n    field: \"firstPhone\",\n    headerName: \"Телефон 1\",\n    width: percentToPixels(10),\n  },\n  {\n    field: \"firstEmail\",\n    headerName: \"Email 1\",\n    width: percentToPixels(15),\n  },\n  {\n    field: \"city\",\n    headerName: \"Місто\",\n    width: percentToPixels(8),\n  },\n  {\n    field: \"info\",\n    headerName: \"Інформація\",\n    width: percentToPixels(20),\n  },\n];\n\nexport default function ClientsTable() {\n  const queryClient = useQueryClient();\n  const [q, setQ] = useState(\"\");\n\n  const filter = (rows) => {\n    return rows.filter(\n      (row) =>\n        row.customerName?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.customerGroup?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.firstPerson?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.firstPhone?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.firstEmail?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.city?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.info?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1\n    );\n  };\n\n  return (\n    <>\n      <TextField\n        variant=\"outlined\"\n        size=\"small\"\n        placeholder=\"Швидкий пошук\"\n        onChange={(e) => setQ(e.target.value)}\n      />\n      <Paper elevation={4} className=\"x-grid\">\n        <div className=\"frame\">\n          <div className=\"grid-holder\">\n            <XGrid\n              className=\"customers-grid\"\n              rows={filter(\n                fixCustomers(queryClient.getQueryData(\"customers\") || [])\n              )}\n              columns={columns}\n              sortModel={[{field: \"customerName\", sort: \"asc\"}]}\n              loading={queryClient.isFetching(\"customers\")}\n              rowHeight={35}\n              headerHeight={35}\n              pagination={true}\n              disableSelectionOnClick={true}\n            />\n          </div>\n        </div>\n      </Paper>\n    </>\n  );\n}\n","import {Button, Typography} from \"@material-ui/core\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Modal from \"@material-ui/core/Modal\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as yup from \"yup\";\nimport {CLOSE_CUSTOMER_MODAL} from \"./context/actions\";\nimport useSaveCustomer from \"./hooks/useSaveCustomer\";\nimport InfoMessage from \"./InfoMessage\";\nimport InputField from \"./InputField\";\nimport SwitchControl from \"./SwitchControl\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"4px\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4),\n    width: \"40%\",\n\n    \"& .MuiOutlinedInput-inputMarginDense\": {\n      padding: \"8px !important\",\n    },\n  },\n  link: {\n    cursor: \"pointer\",\n    color: theme.palette.primary.main,\n  },\n  h2: {\n    textAlign: \"center\",\n    fontWeight: \"400\",\n    marginBottom: \"1rem\",\n  },\n  buttons: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n  },\n  clearButton: {\n    backgroundColor: \"rgb(210,0,10)\",\n    color: \"white\",\n    marginRight: \"1rem\",\n\n    \"&:hover\": {\n      backgroundColor: \"rgb(190,0,10)\",\n    },\n  },\n  rowOne: {\n    gridTemplateRows: \"1fr 1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    gridColumnGap: \"15px\",\n    gridRowGap: \"10px\",\n  },\n  rowTwo: {\n    gridTemplateRows: \"1fr 1fr 1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    gridRowGap: \"10px\",\n  },\n  longTextField: {\n    gridColumnStart: 1,\n    gridColumnEnd: 3,\n  },\n  billNo: {\n    gridColumn: 4,\n  },\n  switchHolder: {\n    gridColumn: 3,\n    justifySelf: \"end\",\n\n    \"& .MuiFormControlLabel-root\": {\n      margin: 0,\n    },\n  },\n  auxiliaryRow: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n    margin: \"2rem auto 1rem auto\",\n\n    \"& .MuiOutlinedInput-input\": {\n      padding: \"8px\",\n    },\n\n    \"& .MuiButtonBase-root\": {\n      padding: \"2px !important\",\n    },\n\n    \"& .MuiOutlinedInput-adornedEnd\": {\n      paddingRight: \"3px\",\n    },\n\n    \"& #date-picker-inline-label\": {\n      transform: \"translate(14px, 10px) scale(1)\",\n    },\n  },\n}));\n\nconst validationSchema = yup.object({\n  customer: yup.object({\n    customerName: yup.string().required(),\n    customerGroup: yup.string().nullable(),\n    city: yup.string().nullable(),\n    info: yup.string().nullable(),\n    firstPerson: yup.string().trim().max(25).nullable(),\n    firstPhone: yup.string().max(10).min(10).nullable(),\n    firstEmail: yup.string().email().nullable(),\n    secondPerson: yup.string().trim().max(25).nullable(),\n    secondPhone: yup.string().max(10).min(10).nullable(),\n    secondEmail: yup.string().email().nullable(),\n    thirdPerson: yup.string().trim().max(25).nullable(),\n    thirdPhone: yup.string().max(10).min(10).nullable(),\n    thirdEmail: yup.string().email().nullable(),\n  }),\n});\n\nexport default function CustomerForm() {\n  const classes = useStyles();\n  const customerModalState = useSelector((store) => store.showCustomerModal);\n  const saveCustomerQuery = useSaveCustomer();\n  const dispatch = useDispatch();\n  const [showSavedInfo, setShowSavedInfo] = React.useState({\n    success: false,\n    error: false,\n  });\n\n  const handleClose = () => {\n    setShowSavedInfo({success: false, error: false});\n  };\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={customerModalState.show}\n        onClose={() => dispatch(CLOSE_CUSTOMER_MODAL())}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={customerModalState.show}>\n          <div className={classes.paper}>\n            <Formik\n              validateOnChange={false}\n              validateOnMount={false}\n              validateOnBlur={false}\n              initialValues={{customer: customerModalState.customer}}\n              onSubmit={(form) => {\n                saveCustomerQuery.mutate({\n                  customer: form.customer,\n                  setStatus: setShowSavedInfo,\n                });\n              }}\n              validationSchema={validationSchema}\n            >\n              {({values, errors, validateField}) => (\n                <Form>\n                  <Typography className={classes.h2} component=\"h2\" variant=\"h5\">\n                    {values.customer.customerName\n                      ? customerModalState.customer.customerName\n                      : \"Новий замовник\"}\n                  </Typography>\n                  <div className={`${classes.rowOne} row__one`}>\n                    <Field\n                      className={classes.longTextField}\n                      name=\"customer.customerName\"\n                      label=\"Назва замовника\"\n                      error={errors?.customer?.customerName}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.customerGroup\"\n                      label=\"Група\"\n                      error={errors?.customer?.customerGroup}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      className={classes.longTextField}\n                      name=\"customer.info\"\n                      label=\"Примітка\"\n                      error={errors?.customer?.info}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.city\"\n                      label=\"Місто\"\n                      error={errors?.customer?.city}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                  </div>\n\n                  <div className={`${classes.rowTwo} row__two`}>\n                    <Field\n                      name=\"customer.firstPerson\"\n                      label=\"Конт. Особа 1\"\n                      error={errors?.customer?.firstPerson}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.firstPhone\"\n                      label=\"Телефон (без +38)\"\n                      error={errors?.customer?.firstPhone}\n                      validator={validateField}\n                      component={InputField}\n                      phone={true}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.firstEmail\"\n                      label=\"Email\"\n                      error={errors?.customer?.firstEmail}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n\n                    <Field\n                      name=\"customer.secondPerson\"\n                      label=\"Конт. Особа 2\"\n                      error={errors?.customer?.secondPerson}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.secondPhone\"\n                      label=\"Телефон (без +38)\"\n                      error={errors?.customer?.secondPhone}\n                      validator={validateField}\n                      component={InputField}\n                      phone={true}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.secondEmail\"\n                      label=\"Email\"\n                      error={errors?.customer?.secondEmail}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n\n                    <Field\n                      name=\"customer.thirdPerson\"\n                      label=\"Конт. Особа 3\"\n                      error={errors?.customer?.thirdPerson}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.thirdPhone\"\n                      label=\"Телефон (без +38)\"\n                      error={errors?.customer?.thirdPhone}\n                      validator={validateField}\n                      component={InputField}\n                      phone={true}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.thirdEmail\"\n                      label=\"Email\"\n                      error={errors?.customer?.thirdEmail}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                  </div>\n\n                  <div className={classes.buttons}>\n                    <Button\n                      style={{gridColumn: 2}}\n                      color=\"primary\"\n                      variant=\"contained\"\n                      className={classes.button}\n                      disabled={saveCustomerQuery.isLoading}\n                      type=\"submit\"\n                    >\n                      Зберегти замовника\n                    </Button>\n\n                    {values.customer.customerId && (\n                      <div className={classes.switchHolder}>\n                        <SwitchControl\n                          name=\"customer.debtor\"\n                          label=\"Боржник\"\n                          isChecked={values.customer.debtor}\n                          disabled={saveCustomerQuery.isLoading}\n                        />\n                      </div>\n                    )}\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </Fade>\n      </Modal>\n      <InfoMessage\n        type=\"success\"\n        open={showSavedInfo.success}\n        onClose={handleClose}\n        message=\"Замовинка успішно збережено.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showSavedInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні замовника.\"\n      />\n    </div>\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\nimport {useDispatch} from \"react-redux\";\nimport {CLOSE_CUSTOMER_MODAL} from \"../context/actions\";\n\nexport default function useSaveCustomer() {\n  const queryClient = useQueryClient();\n  const dispatch = useDispatch();\n\n  return useMutation(\n    (params) =>\n      params.customer.customerId === 0\n        ? Axios.post(\"/api/customers/\", params.customer)\n        : Axios.put(\"/api/customers/\", params.customer),\n    {\n      onSuccess: (_, passedParams) => {\n        queryClient.invalidateQueries(\"customers\");\n        dispatch(CLOSE_CUSTOMER_MODAL());\n        passedParams.setStatus({success: true, error: false});\n      },\n      onError: (_, passedParams) => {\n        console.log(_);\n        passedParams.setStatus({success: false, error: true});\n      },\n    }\n  );\n}\n","import {Link, Typography} from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useHistory} from \"react-router-dom\";\nimport \"./Header.css\";\nimport * as AuthService from \"./services/auth-service\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  logoutButton: {\n    padding: 0,\n  },\n  logoutHolder: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  tabs: {\n    margin: \"0 auto\",\n    cursor: \"pointer\",\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n  const history = useHistory();\n  const queryClient = useQueryClient();\n  const [value, setValue] = React.useState(0);\n\n  const logout = () => {\n    AuthService.unauthorize();\n    history.push(\"/login\");\n  };\n\n  const changeView = (_e, newValue) => {\n    setValue(newValue);\n    switch (newValue) {\n      case 0:\n        history.push(\"/\");\n        break;\n      case 1:\n        queryClient.invalidateQueries(\"customers\");\n        history.push(\"/clients\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Paper elevation={2}>\n      <div className=\"header__container\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Link color=\"inherit\" href=\"https://psdruk.com.ua/\">\n              <img width=\"110\" height=\"50\" src=\"/img/logo.svg\" alt=\"logo\" />\n            </Link>\n\n            <Tabs\n              className={classes.tabs}\n              value={value}\n              onChange={changeView}\n              TabIndicatorProps={{style: {background: \"white\"}}}\n              indicatorColor=\"secondary\"\n              aria-label=\"scrollable auto tabs example\"\n            >\n              <Tab label=\"Головна\" />\n              {/* <Tab label=\"Сортування\" /> */}\n              <Tab label=\"Клієнти\" />\n              {/* <Tab label=\"Статус\" /> */}\n            </Tabs>\n\n            <div className={classes.logoutHolder}>\n              <Typography variant=\"body1\" style={{fontWeight: 300}}>\n                Вітаємо, <b>{localStorage.getItem(\"username\")}</b>\n              </Typography>\n              <Button\n                color=\"inherit\"\n                onClick={logout}\n                className={classes.logoutButton}\n              >\n                Вийти\n              </Button>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n    </Paper>\n  );\n}\n","import Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport React, {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\";\nimport {SET_AUTHENTICATED} from \"./context/actions\";\nimport InfoMessage from \"./InfoMessage\";\nimport * as AuthService from \"./services/auth-service\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://psdruk.com.ua/\">\n        psdruk.com.ua\n      </Link>\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [form, setForm] = useState({username: \"\", password: \"\"});\n  const [showNotYetVerified, setShowNotYetVerified] = useState(false);\n\n  const setUsername = (e) => setForm({...form, username: e.target.value});\n  const setPassword = (e) => setForm({...form, password: e.target.value});\n\n  const handleClose = () => {\n    setShowNotYetVerified(false);\n  };\n\n  const submitCredentials = (e) => {\n    e.preventDefault();\n\n    AuthService.authorize(form).then((data) => {\n      if (data.roles.includes(\"ROLE_CUSTOMER\")) {\n        setShowNotYetVerified(true);\n      } else {\n        dispatch(\n          SET_AUTHENTICATED(data.token, data.employee, data.username, data.roles)\n        );\n        history.push(\"/\");\n      }\n    });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Вхід\n        </Typography>\n        <form className={classes.form} onSubmit={submitCredentials}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            onChange={setUsername}\n            label=\"Логін\"\n            name=\"email\"\n            autoComplete=\"off\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Пароль\"\n            type=\"password\"\n            id=\"password\"\n            onChange={setPassword}\n            autoComplete=\"off\"\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Вхід\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"http://plg-site.32server.in.ua/\" variant=\"body2\">\n                Забули пароль?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"http://plg-site.32server.in.ua/\" variant=\"body2\">\n                {\"Зареєструватись\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n      <InfoMessage\n        type=\"error\"\n        open={showNotYetVerified}\n        onClose={handleClose}\n        message=\"Аккаунт ще не пройшов перевірку.\"\n      />\n    </Container>\n  );\n}\n","import {makeStyles, Tooltip} from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStylesTooltip = makeStyles((theme) => ({\n  arrow: {\n    color: theme.palette.primary.main,\n  },\n  tooltip: {\n    fontSize: 12,\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nfunction ToolTip({title, value, placement = \"right-start\", children, ...props}) {\n  const classes = useStylesTooltip();\n\n  return (\n    <Tooltip title={title} placement={placement} arrow classes={classes} {...props}>\n      <div className=\"value\" style={{lineHeight: \"1.43\"}}>\n        {children}\n      </div>\n    </Tooltip>\n  );\n}\n\nexport default ToolTip;\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport {\n  Button,\n  InputAdornment,\n  Link,\n  OutlinedInput,\n  Typography,\n} from \"@material-ui/core\";\nimport {Field, Form, Formik} from \"formik\";\nimport InputField from \"./InputField\";\nimport ComboBox from \"./ComboBox\";\nimport * as yup from \"yup\";\nimport DatePicker from \"./DatePicker\";\nimport useUpdateOrder from \"./hooks/useUpdateOrder\";\nimport {useQueryClient} from \"react-query\";\nimport ToolTip from \"./ToolTip\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"4px\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4),\n    width: \"55%\",\n  },\n  link: {\n    cursor: \"pointer\",\n    color: theme.palette.primary.main,\n  },\n  h2: {\n    top: \"-.9rem\",\n    position: \"relative\",\n    marginTop: 0,\n    textAlign: \"center\",\n    fontWeight: \"400\",\n    gridColumnEnd: 4,\n    gridColumnStart: 2,\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  clearButton: {\n    backgroundColor: \"rgb(210,0,10)\",\n    color: \"white\",\n    marginRight: \"1rem\",\n\n    \"&:hover\": {\n      backgroundColor: \"rgb(190,0,10)\",\n    },\n  },\n  rowOne: {\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n  },\n  rowTwo: {\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr\",\n  },\n  billNo: {\n    gridColumn: 4,\n  },\n  auxiliaryRow: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n    margin: \"2rem auto 1rem auto\",\n\n    \"& .MuiOutlinedInput-input\": {\n      padding: \"8px\",\n    },\n\n    \"& .MuiButtonBase-root\": {\n      padding: \"2px !important\",\n    },\n\n    \"& .MuiOutlinedInput-adornedEnd\": {\n      paddingRight: \"3px\",\n    },\n\n    \"& #date-picker-inline-label\": {\n      transform: \"translate(14px, 10px) scale(1)\",\n    },\n  },\n}));\n\nconst validationSchema = yup.object({\n  order: yup.object({\n    entrepreneur: yup.object().required(),\n    customer: yup.object().required(),\n    date: yup.date().required(),\n    orderType: yup.object().required(),\n    orderKind: yup.object().required(),\n    billNo: yup.number().lessThan(2000000000).positive().min(0),\n    width: yup.number().lessThan(2000000000).positive().min(0).required(),\n    height: yup.number().lessThan(2000000000).positive().min(0).required(),\n    amount: yup.number().lessThan(2000000000).positive().min(0).required(),\n    price: yup.number().lessThan(2000000000).positive().min(0).required(),\n    fees: yup.number().lessThan(2000000000).positive().min(0).required(),\n    finalSum: yup.number().lessThan(2000000000).positive().min(0).required(),\n    comment: yup.string().trim().max(255).required(),\n  }),\n});\n\nexport default function EditForm({order}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const updateOrderQuery = useUpdateOrder();\n  const queryClient = useQueryClient();\n\n  const toggle = () => setOpen(!open);\n\n  return (\n    <div>\n      <ToolTip title={order.employee.name}>\n        <Link className={classes.link} onClick={toggle}>\n          <b>{order.orderId}</b>\n        </Link>\n      </ToolTip>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={toggle}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <Formik\n              validateOnChange={true}\n              validateOnMount={false}\n              validateOnBlur={false}\n              initialValues={{order: order}}\n              onSubmit={(form) => {\n                updateOrderQuery.mutate({order: form.order, toggleModal: toggle});\n              }}\n              validationSchema={validationSchema}\n            >\n              {({values, errors, validateField}) => (\n                <Form>\n                  <div className={classes.auxiliaryRow}>\n                    <Field\n                      component={DatePicker}\n                      label=\"Дата\"\n                      name=\"order.date\"\n                      error={errors?.order?.date}\n                      validator={validateField}\n                      disabled={updateOrderQuery.isLoading}\n                    />\n                    <Typography className={classes.h2} component=\"h2\" variant=\"h5\">\n                      Замовленя № <b>{order.orderId}</b>\n                    </Typography>\n                    <Field\n                      className={classes.billNo}\n                      name=\"order.billNo\"\n                      label=\"№ Рахунку\"\n                      error={errors?.order?.billNo}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading}\n                    />\n                  </div>\n\n                  <div className={`${classes.rowOne} row__one`}>\n                    <Field\n                      name=\"order.entrepreneur\"\n                      label=\"Підприємець\"\n                      error={errors?.order?.entrepreneur}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderQuery.isLoading}\n                      getName={(option) => option.fullName || \"\"}\n                      options={queryClient.getQueryData(\"entrepreneurs\")}\n                    />\n                    <Field\n                      name=\"order.customer\"\n                      label=\"Замовник\"\n                      error={errors?.order?.customer}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderQuery.isLoading}\n                      getName={(option) => option.customerName || \"\"}\n                      options={queryClient.getQueryData(\"customers\")}\n                    />\n                    <Field\n                      name=\"order.orderType\"\n                      label=\"Вид\"\n                      error={errors?.order?.orderType}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderQuery.isLoading}\n                      getName={(option) => option.typeName || \"\"}\n                      options={queryClient.getQueryData(\"orderTypes\")}\n                    />\n                    <Field\n                      name=\"order.orderKind\"\n                      label=\"Тип\"\n                      error={errors?.order?.orderKind}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderQuery.isLoading}\n                      getName={(option) => option.kindName || \"\"}\n                      options={values.orderType?.orderKinds || []}\n                    />\n                  </div>\n\n                  <div className={`${classes.rowTwo} row__two`}>\n                    <Field\n                      name=\"order.width\"\n                      label=\"Ширина\"\n                      error={errors?.order?.width}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading}\n                    />\n                    <Field\n                      name=\"order.height\"\n                      label=\"Висота\"\n                      error={errors?.order?.height}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading}\n                    />\n                    <Field\n                      name=\"order.amount\"\n                      label=\"Кількість\"\n                      error={errors?.order?.amount}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading}\n                    />\n                    <OutlinedInput\n                      id=\"metrics\"\n                      size=\"small\"\n                      variant=\"outlined\"\n                      value={\n                        (\n                          ((values.order.width * values.order.height) / 1000000) *\n                          values.order.amount\n                        ).toFixed(3) || 0.0\n                      }\n                      endAdornment={\n                        <InputAdornment position=\"end\">м²</InputAdornment>\n                      }\n                      disabled\n                    />\n                    <Field\n                      name=\"order.price\"\n                      label=\"Ціна\"\n                      error={errors?.order?.price}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading}\n                    />\n                    <Field\n                      name=\"order.fees\"\n                      label=\"Послуги\"\n                      error={errors?.order?.fees}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading}\n                    />\n                    <Field\n                      name=\"order.finalSum\"\n                      label=\"Сума\"\n                      error={errors?.order?.finalSum}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading}\n                    />\n                  </div>\n\n                  <div className=\"row__three\">\n                    <Field\n                      name=\"order.comment\"\n                      label=\"Опис замовлення\"\n                      error={errors?.order?.comment}\n                      validator={validateField}\n                      numeric={false}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading}\n                    />\n                  </div>\n\n                  <div className=\"row__three\">\n                    <Field\n                      name=\"order.payLog\"\n                      label=\"Історія оплат\"\n                      error={errors?.order?.payLog}\n                      validator={validateField}\n                      numeric={false}\n                      multiline={true}\n                      component={InputField}\n                      readonly={true}\n                      disabled={updateOrderQuery.isLoading}\n                    />\n                  </div>\n\n                  <div className={classes.buttons}>\n                    <Button\n                      className={classes.clearButton}\n                      disabled={updateOrderQuery.isLoading}\n                      variant=\"contained\"\n                      type=\"button\"\n                    >\n                      Видалити\n                    </Button>\n                    <Button\n                      color=\"primary\"\n                      variant=\"contained\"\n                      className={classes.button}\n                      disabled={updateOrderQuery.isLoading}\n                      type=\"submit\"\n                    >\n                      Зберегти замовлення\n                    </Button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useUpdateOrder() {\n  let backupOrder = null;\n  const queryClient = useQueryClient();\n  return useMutation(\n    (updateObject) => Axios.put(\"/api/orders/\", updateObject.order),\n    {\n      onMutate: (mutationObject) => {\n        queryClient\n          .getQueryCache()\n          .findAll([\"orders\", 1])\n          .forEach((query) => {\n            queryClient.setQueryData(\n              query.queryKey,\n              query.state.data.map((cachedOrder) => {\n                if (cachedOrder.orderId === mutationObject.order.orderId) {\n                  backupOrder = cachedOrder;\n                  return mutationObject.order;\n                } else return cachedOrder;\n              })\n            );\n          });\n      },\n      onError: (_error) => {\n        queryClient\n          .getQueryCache()\n          .findAll([\"orders\", 1])\n          .forEach((query) => {\n            queryClient.setQueryData(\n              query.queryKey,\n              query.state.data.map((cachedOrder) => {\n                if (cachedOrder.orderId === backupOrder.orderId) return backupOrder;\n                else return cachedOrder;\n              })\n            );\n          });\n      },\n      onSuccess: (_, updateObject) => {\n        queryClient.invalidateQueries([\"orders\"]);\n        updateObject.toggleModal();\n      },\n    }\n  );\n}\n","import {Button} from \"@material-ui/core\";\nimport Popper from \"@material-ui/core/Popper\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport useSetStatus from \"./hooks/useSetStatus\";\n\nconst sources = [\n  \"\",\n  \"img/on-agreement.svg\",\n  \"img/in-progress.svg\",\n  \"img/ready.svg\",\n  \"img/completed.svg\",\n];\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    backgroundColor: \"#fff\",\n    boxShadow: \"0 0 14px 2px rgba(0, 0, 0, 0.3)\",\n    borderRadius: \"4px\",\n  },\n  acceptanceButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#fff\",\n    border: \"1px solid\",\n    borderColor: \"#df16a0\",\n    color: \"#df16a0\",\n\n    \"&:hover\": {\n      color: \"#fff\",\n      backgroundColor: \"#df16a0\",\n    },\n  },\n  inWorkButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#fff\",\n    border: \"1px solid\",\n    borderColor: theme.palette.primary.main,\n    color: theme.palette.primary.main,\n\n    \"&:hover\": {\n      color: \"#fff\",\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n  readyButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#fff\",\n    border: \"1px solid\",\n    borderColor: \"#28a745\",\n    color: \"#28a745\",\n\n    \"&:hover\": {\n      color: \"#fff\",\n      backgroundColor: \"#28a745\",\n    },\n  },\n  completedButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#28a745\",\n    border: \"1px solid\",\n    borderColor: \"#28a745\",\n    color: \"#fff\",\n\n    \"&:hover\": {\n      borderColor: \"#218838\",\n      backgroundColor: \"#218838\",\n    },\n  },\n  popper: {\n    zIndex: 1,\n    marginLeft: \"0.5rem\",\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: \"-0.9em\",\n      marginTop: \"0.45rem\",\n      height: \"3em\",\n      width: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 1em 1em 0\",\n        borderColor: `transparent ${theme.palette.background.paper} transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: \"-0.9em\",\n      marginTop: \"0.45rem\",\n      height: \"3em\",\n      width: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 0 1em 1em\",\n        borderColor: `transparent transparent transparent ${theme.palette.background.paper}`,\n      },\n    },\n  },\n  arrow: {\n    position: \"absolute\",\n    fontSize: 7,\n    width: \"3em\",\n    height: \"3em\",\n    \"&::before\": {\n      content: '\"\"',\n      margin: \"auto\",\n      display: \"block\",\n      width: 0,\n      height: 0,\n      borderStyle: \"solid\",\n    },\n  },\n}));\n\nfunction StatusPopper({orderId, status}) {\n  const classes = useStyles();\n  const statusQuery = useSetStatus();\n  const anchorRef = React.useRef(null);\n  const [arrow] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const id = open ? \"scroll-playground\" : null;\n\n  const toggle = () => setOpen((prevOpen) => !prevOpen);\n\n  return (\n    <>\n      <img\n        className={classes.img}\n        ref={anchorRef}\n        src={sources[status]}\n        width=\"19\"\n        height=\"19\"\n        alt=\"on-agreement\"\n        aria-describedby={id}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={toggle}\n      />\n\n      <Popper\n        id={id}\n        open={open}\n        anchorEl={anchorRef.current}\n        placement=\"right\"\n        disablePortal={true}\n        className={classes.popper}\n        modifiers={{\n          flip: {\n            enabled: true,\n          },\n          preventOverflow: {\n            enabled: true,\n            boundariesElement: \"scrollParent\",\n          },\n          arrow: {\n            enabled: true,\n            element: arrowRef,\n          },\n        }}\n      >\n        {arrow ? <span className={classes.arrow} ref={setArrowRef} /> : null}\n        <div className={classes.container}>\n          <Button\n            className={classes.acceptanceButton}\n            onClick={() =>\n              statusQuery.mutate({orderId: orderId, statusId: 1, toggle: toggle})\n            }\n          >\n            На погодженні\n          </Button>\n          <br />\n          <Button\n            className={classes.inWorkButton}\n            onClick={() =>\n              statusQuery.mutate({orderId: orderId, statusId: 2, toggle: toggle})\n            }\n          >\n            В роботі\n          </Button>\n          <br />\n          <Button\n            className={classes.readyButton}\n            onClick={() =>\n              statusQuery.mutate({orderId: orderId, statusId: 3, toggle: toggle})\n            }\n          >\n            Готове\n          </Button>\n          <br />\n          <Button\n            className={classes.completedButton}\n            o\n            onClick={() =>\n              statusQuery.mutate({orderId: orderId, statusId: 4, toggle: toggle})\n            }\n          >\n            Віддано\n          </Button>\n        </div>\n      </Popper>\n    </>\n  );\n}\n\nexport default StatusPopper;\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSetStatus() {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (params) =>\n      Axios.get(\"/api/orders/statuses/\" + params.orderId + \"/\" + params.statusId),\n    {\n      onSuccess: (_, params) => {\n        queryClient.invalidateQueries(\"orders\");\n        params.toggle();\n      },\n    }\n  );\n}\n","import {Paper, TextField} from \"@material-ui/core\";\nimport {XGrid} from \"@material-ui/x-grid\";\nimport React, {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport EditForm from \"./EditForm\";\nimport useOrders from \"./hooks/useOrders\";\nimport StatusPopper from \"./StatusPopper\";\nimport \"./Table.css\";\nimport ToolTip from \"./ToolTip\";\n\n// const percentToPixels = (percentage) => {\n//   return (window.innerWidth * percentage) / 100;\n// };\n\nconst formatDate = (date) =>\n  new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: false,\n  }).format(date);\n\nfunction strcmp(a, b) {\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\nconst columns = [\n  {\n    field: \"orderId\",\n    type: \"number\",\n    headerName: \"№\",\n    width: 59,\n    renderCell: (params) => <EditForm order={params.row} />,\n  },\n  {\n    field: \"billNo\",\n    type: \"number\",\n    headerName: \"Рах\",\n    width: 50,\n  },\n  {\n    field: \"customer\",\n    headerName: \"Замовник\",\n    width: 134,\n    sortComparator: (c1, c2) => strcmp(c1.customerName, c2.customerName),\n    valueFormatter: (param) => param.value.customerName,\n    renderCell: (params) =>\n      params.value.info ? (\n        <ToolTip title={params.value.info}>\n          <b>{params.value.customerName}</b>\n        </ToolTip>\n      ) : (\n        <b>{params.value.customerName}</b>\n      ),\n  },\n  {\n    field: \"date\",\n    type: \"dateTime\",\n    headerName: \"Дата\",\n    width: 93,\n    valueFormatter: (param) => formatDate(param.value),\n  },\n  {\n    field: \"width\",\n    type: \"number\",\n    headerName: \"Ширина\",\n    valueFormatter: (row) => row.value,\n    width: 69,\n  },\n  {\n    field: \"height\",\n    type: \"number\",\n    headerName: \"Висота\",\n    valueFormatter: (row) => row.value,\n    width: 69,\n  },\n  {\n    field: \"amount\",\n    type: \"number\",\n    headerName: \"К-сть\",\n    valueFormatter: (row) => row.value,\n    width: 56,\n  },\n  {\n    field: \"m2\",\n    type: \"number\",\n    headerName: \"М2\",\n    valueFormatter: (row) => Number.parseFloat(row.value).toFixed(3),\n    width: 64,\n  },\n  {\n    field: \"price\",\n    type: \"number\",\n    headerName: \"Ціна\",\n    valueFormatter: (row) => row.value,\n    width: 57,\n  },\n  {\n    field: \"fees\",\n    type: \"number\",\n    headerName: \"Послуги\",\n    valueFormatter: (row) => row.value,\n    width: 76,\n  },\n  {\n    field: \"finalSum\",\n    type: \"number\",\n    headerName: \"Сума\",\n    width: 66,\n    renderCell: (params) => <b> {params.value} </b>,\n  },\n  {\n    field: \"paid\",\n    headerName: \"Оплата\",\n    sortable: false,\n    width: 71,\n    cellClassName: \"centered\",\n    renderCell: (params) => {\n      if (params.row.paySum === params.row.finalSum) {\n        return (\n          <ToolTip title={formatDate(new Date(params.row.payDate))} arrow>\n            <img src=\"img/completed.svg\" width=\"19\" height=\"19\" alt=\"paid\" />\n          </ToolTip>\n        );\n      } else if (params.row.paySum > 0)\n        return (\n          <ToolTip\n            title={\n              params.row.paySum + \" грн, \" + formatDate(new Date(params.row.payDate))\n            }\n            arrow\n          >\n            <img\n              src=\"img/partly_paid.svg\"\n              width=\"19\"\n              height=\"19\"\n              alt=\"partly__paid\"\n            />\n          </ToolTip>\n        );\n    },\n  },\n  {\n    field: \"status.ds\",\n    headerName: \"Статус\",\n    width: 71,\n    cellClassName: \"centered\",\n    renderCell: (params) => (\n      <StatusPopper orderId={params.row.orderId} status={params.row.status.id} />\n    ),\n  },\n  {\n    field: \"orderType\",\n    type: \"string\",\n    headerName: \"Вид\",\n    width: 134,\n    valueFormatter: (param) => param.value.typeName,\n  },\n  {\n    field: \"orderKind\",\n    headerName: \"Тип\",\n    width: 152,\n    valueFormatter: (param) => param.value.kindName,\n  },\n  {\n    field: \"comment\",\n    headerName: \"Опис замовлення\",\n    width: window.innerWidth - 1268,\n    renderCell: (params) => (\n      <ToolTip title={params.value} placement=\"left-start\">\n        {params.value}\n      </ToolTip>\n    ),\n  },\n];\n\nexport default function Table({tableID}) {\n  const sortState = useSelector((state) => state.sortSelections);\n  const ordersQuery = useOrders(tableID, sortState[sortState.active]);\n  const [q, setQ] = useState(\"\");\n\n  const filter = (rows) => {\n    return rows.filter(\n      (row) =>\n        row.orderId?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.billNo?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.customer.customerName.toString().toLowerCase().indexOf(q.toLowerCase()) >\n          -1 ||\n        formatDate(row.date)?.toString().toLowerCase().indexOf(q.toLowerCase()) >\n          -1 ||\n        row.fees?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.finalSum?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.amount?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.price?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.height?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.width?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.m2?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.orderKind.kindName?.toString().toLowerCase().indexOf(q.toLowerCase()) >\n          -1 ||\n        row.orderType.typeName?.toString().toLowerCase().indexOf(q.toLowerCase()) >\n          -1 ||\n        row.comment?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1\n    );\n  };\n\n  const calculateDebt = (customer) => {\n    const ordersDiff = ordersQuery.data.reduce(\n      (a, b) => (a += b.finalSum - b.paySum),\n      0\n    );\n    return ordersDiff - customer.money;\n  };\n\n  return (\n    <>\n      <TextField\n        variant=\"outlined\"\n        size=\"small\"\n        placeholder=\"Швидкий пошук\"\n        onChange={(e) => setQ(e.target.value)}\n      />\n      <Paper elevation={4} className=\"x-grid\">\n        {sortState[sortState.active].selectedCustomer && (\n          <div className=\"action__bar__stat\">\n            <label>\n              Сума боргу :{\" \"}\n              <b>{calculateDebt(sortState[sortState.active].selectedCustomer)}</b>{\" \"}\n              грн\n            </label>\n          </div>\n        )}\n\n        <div className=\"frame\">\n          <div className=\"grid-holder\">\n            <XGrid\n              rows={filter(ordersQuery.data)}\n              columns={columns}\n              sortModel={[{field: \"orderId\", sort: \"desc\"}]}\n              loading={ordersQuery.isLoading}\n              rowHeight={35}\n              headerHeight={35}\n              pagination={true}\n              disableSelectionOnClick={true}\n            />\n          </div>\n        </div>\n      </Paper>\n    </>\n  );\n}\n","import {useQuery} from \"react-query\";\nimport {useSelector} from \"react-redux\";\nimport * as OrderService from \".././services/orders-service\";\n\nexport default function useOrders(tableID, sortState) {\n  const authState = useSelector((store) => store.auth);\n  return useQuery(\n    [\"orders\", tableID, sortState],\n    () => OrderService.sortOrders(sortState, authState.roles),\n    {\n      initialData: [],\n      initialStale: true,\n      keepPreviousData: false,\n    }\n  );\n}\n","import {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport ActionBar from \"./ActionBar\";\nimport \"./App.css\";\nimport ClientsActionBar from \"./ClientsActionBar\";\nimport ClientsTable from \"./ClientsTable\";\nimport CustomerForm from \"./CustomerForm\";\nimport Header from \"./Header\";\nimport useCELinks from \"./hooks/useCELinks\";\nimport useCPLinks from \"./hooks/useCPLinks\";\nimport useCustomers from \"./hooks/useCustomers\";\nimport useEntrepreneurs from \"./hooks/useEntrepreneurs\";\nimport useOrderTypes from \"./hooks/useOrderTypes\";\nimport useStatuses from \"./hooks/useStatuses\";\nimport Login from \"./Login\";\nimport Table from \"./Table\";\n\nfunction App() {\n  useCustomers();\n  useEntrepreneurs();\n  useOrderTypes();\n  useStatuses();\n  useCELinks();\n  useCPLinks();\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/\">\n            <div className=\"main\">\n              <div className=\"main__header\">\n                <Header />\n                <ActionBar />\n              </div>\n              <div className=\"main__table\">\n                <Table tableID={1} />\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/clients\">\n            <div className=\"clients\">\n              <div className=\"clients__header\">\n                <Header />\n                <ClientsActionBar />\n              </div>\n              <div className=\"clients__table\">\n                <ClientsTable />\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/sort\">\n            <Header />\n            <Table tableID={2} />\n          </Route>\n        </Switch>\n      </Router>\n      <CustomerForm />\n    </div>\n  );\n}\n\nexport default App;\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useCustomers() {\n  return useQuery(\"customers\", CustomerService.fetchCustomers);\n}\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useEntrepreneurs() {\n  return useQuery(\"entrepreneurs\", CustomerService.fetchEntrepreneurs, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useOrderTypes() {\n  return useQuery(\"orderTypes\", CustomerService.fetchOrderTypes, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useStatuses() {\n  return useQuery(\"statuses\", CustomerService.fetchStatuses, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useCELinks() {\n  return useQuery(\"ce-links\", CustomerService.fetchCELinks, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useCPLinks() {\n  return useQuery(\"cp-links\", CustomerService.fetchCPLinks, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import {Redirect, Route} from \"react-router-dom\";\nimport {SET_AUTHENTICATED} from \"./context/actions\";\nimport store from \"./context/store\";\nimport {useSelector} from \"react-redux\";\n\nexport const ProtectedRoute = ({component: Component, ...props}) => {\n  const authState = useSelector((store) => store.auth);\n  const authToken = localStorage.getItem(\"token\");\n  const username = localStorage.getItem(\"username\");\n  const roles = localStorage.getItem(\"roles\");\n  const loggedUser = JSON.parse(localStorage.getItem(\"loggedUser\"));\n\n  return (\n    <Route\n      {...props}\n      render={(props) => {\n        if (authState.isAuthenticated) {\n          return <Component {...props} />;\n        } else if (authToken) {\n          store.dispatch(SET_AUTHENTICATED(authToken, loggedUser, username, roles));\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect to={{pathname: \"/login\", state: {from: props.location}}} />\n          );\n        }\n      }}\n    />\n  );\n};\n","import { Box, Paper, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport \"./NotFound.css\";\n\nfunction NotFound() {\n  return (\n    <Paper elevation={3} className=\"blue-holder\">\n      <Paper elevation={3} className=\"info\">\n        <div className=\"blank-page\">\n          <Typography variant=\"h4\" component=\"h3\">\n            Сторінка не знайдена\n          </Typography>{\" \"}\n          <Typography variant=\"h2\" component=\"h3\">\n            404\n          </Typography>\n        </div>\n        <Box mt={8}>\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {\"Copyright © \"}\n            <Link color=\"inherit\" href=\"https://psdruk.com.ua/\">\n              psdruk.com.ua\n            </Link>{\" \"}\n            {new Date().getFullYear()}\n            {\".\"}\n          </Typography>\n        </Box>\n      </Paper>\n    </Paper>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./context/store\";\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport {uk} from \"date-fns/locale\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport App from \"./App\";\nimport {ukUA} from \"@material-ui/core/locale\";\nimport Login from \"./Login\";\nimport {ProtectedRoute} from \"./ProtectedRoute\";\nimport NotFound from \"./NotFound\";\nimport {ReactQueryDevtools} from \"react-query/devtools\";\nimport {QueryCache, QueryClient, QueryClientProvider} from \"react-query\";\nimport \"./index.css\";\n\nconst theme = createMuiTheme(\n  {\n    palette: {\n      primary: {\n        light: \"#fff\",\n        main: \"rgba(0, 60, 170, 0.95)\",\n        dark: \"rgba(0, 40, 170, 0.95)\",\n      },\n      secondary: {\n        main: \"#f44336\",\n      },\n    },\n    typography: {\n      useNextVariants: true,\n      fontSize: 11,\n      htmlFontSize: 15,\n    },\n  },\n  ukUA\n);\n\nconst queryCache = new QueryCache();\nconst queryClient = new QueryClient({queryCache});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <QueryClientProvider client={queryClient}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={uk}>\n        <Provider store={store}>\n          <Router>\n            <Switch>\n              <Route path=\"/login\" component={Login} />\n              <ProtectedRoute path=\"/\" component={App} />\n              <Route path=\"*\" component={NotFound} />\n            </Switch>\n          </Router>\n        </Provider>\n      </MuiPickersUtilsProvider>\n      <ReactQueryDevtools />\n    </QueryClientProvider>\n  </MuiThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}