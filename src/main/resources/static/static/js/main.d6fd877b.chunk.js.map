{"version":3,"sources":["context/actionTypes.js","context/order-reducer.js","context/actions.js","services/utils.js","ComboBox.js","services/auth-service.js","context/auth-reducer.js","models/SortObject.js","context/sort-reducer.js","models/CustomerObject.js","context/customerModal-reducer.js","context/store.js","InfoMessage.js","InputField.js","models/OrderKindObject.js","models/OrderObject.js","models/OrderTypeObject.js","SwitchControl.js","AddOrderForm.js","hooks/useSaveOrder.js","hooks/useSaveCELink.js","hooks/useSaveCPLink.js","hooks/useSaveOrderKind.js","hooks/useSaveOrderType.js","hooks/useSaveDimensions.js","DatePicker.js","DependentInput.js","services/customer-service.js","models/PaymentObject.js","PaymentForm.js","hooks/useMakePayment.js","hooks/usePaymentMethods.js","hooks/useUpdatePaymentMethod.js","SortForm.js","ActionBar.js","ClientsTable.js","hooks/useExportCustomers.js","CustomerForm.js","hooks/useSaveCustomer.js","Header.js","Login.js","ToolTip.js","EditForm.js","hooks/useDeleteOrder.js","hooks/useUpdateOrder.js","services/orders-service.js","StatusPopper.js","hooks/useSetStatus.js","Table.js","hooks/useOrders.js","hooks/useExportOrders.js","App.js","hooks/useCustomers.js","hooks/useEntrepreneurs.js","hooks/useOrderTypes.js","hooks/useStatuses.js","hooks/useCELinks.js","hooks/useCPLinks.js","NotFound.js","ProtectedRoute.js","index.js"],"names":["ADD_ORDER","LOAD_ORDERS","SET_AUTHENTICATED","SET_UNAUTHENTICATED","SELECT_CUSTOMER","UNSELECT_CUSTOMER","SET_ACTIVE_SORTING","UPDATE_MAIN_SORTING","UPDATE_SORT_SORTING","UPDATE_PAYMENT_SORTING","ADD_MAIN_SORTING","ADD_SORT_SORTING","ADD_PAYMENT_SORTING","SHOW_CUSTOMER_MODAL","CLOSE_CUSTOMER_MODAL","initialState","mainPageOrderList","sortPageOrderList","isLoading","orderReducer","state","action","type","ActionTypes","payload","token","employee","username","roles","sorting","UPDATE_SORTING","selections","sortPage","customer","checkPriceShrink","form","shrinkStatus","setShrinkStatus","price","shrink","fixCustomers","data","id","map","row","orderId","customerId","calculateSum","order","m2","Math","ceil","fees","amount","NoPaddingAutocomplete","withStyles","inputRoot","padding","paddingRight","input","Autocomplete","ComboBox","label","getName","sortKey","error","validator","kindNameSetter","typeNameSetter","setEntrepreneur","setDimensions","setPrice","props","textFieldProps","setFieldValue","useFormikContext","values","fieldToTextField","field","name","dispatch","useDispatch","queryClient","useQueryClient","size","value","autoHighlight","getOptionLabel","onKeyPress","e","key","preventDefault","onChange","_","sortBy","selection","ADD_SORTING_BY","entrepreneur","getQueryData","find","link","orderKindId","orderKind","kindId","sum","width","height","renderInput","TextField","target","variant","authorize","credentials","a","Axios","post","response","unauthorize","store","isAuthenticated","loggedUser","authReducer","localStorage","setItem","JSON","stringify","defaults","headers","common","interceptors","use","status","AuthService","console","removeItem","EmptySort","dateFrom","dateTill","orderType","details","active","main","sort","payment","sortReducer","CustomerObject","customerName","customerGroup","money","payLog","debtor","city","info","firstPerson","firstPhone","firstEmail","secondPerson","secondPhone","secondEmail","thirdPerson","thirdPhone","thirdEmail","show","customerModalReducer","require","createStore","combineReducers","auth","orders","default","sortSelections","showCustomerModal","InfoMessage","open","onClose","message","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","InputField","readonly","disableCalculation","numeric","phone","autoComplete","InputProps","readOnly","match","length","onKeyUp","toFixed","EmptyOrderKind","typeId","kindName","EmptyOrder","billNo","date","userID","finalSum","paySum","comment","EmptyOrderType","typeName","SwitchControl","isChecked","useField","FormControlLabel","control","Switch","checked","color","useStyles","makeStyles","root","display","flexWrap","borderRadius","backgroundColor","margin","lock","minWidth","svg","fill","clear","justifySelf","validationSchema","yup","required","lessThan","positive","min","trim","max","AddOrderForm","classes","newOrderQuery","useMutation","params","newOrder","onSuccess","passedParams","setStatus","success","invalidateQueries","resetForm","onError","useSaveOrder","newCELinkQuery","get","entrepreneurId","useSaveCELink","newCPLinkQuery","useSaveCPLink","saveOrderKindQuery","orderKinds","push","useSaveOrderKind","saveOrderTypeQuery","useSaveOrderType","saveDimensionsQuery","put","useSaveDimensions","useState","showOrderInfo","setShowOrderInfo","showCELinkInfo","setShowCELinkInfo","showDimensionsInfo","setShowDimensionsInfo","showPriceInfo","setShowPriceInfo","showOrderTypeInfo","setShowOrderTypeInfo","showOrderKindInfo","setShowOrderKindInfo","orderKindName","setOrderKindName","orderTypeName","setOrderTypeName","handleClose","onAddCustomer","onAddOrderType","mutate","onFormSubmit","isUrgently","onAcceptance","setAcceptance","clearFields","keepFields","className","validateOnChange","validateOnMount","validateOnBlur","initialValues","parse","getItem","onSubmit","errors","validateField","handleReset","component","disabled","isFetching","option","fullName","options","Button","tabIndex","disableRipple","onClick","LastPageOutlined","LinkOutlined","OutlinedInput","endAdornment","InputAdornment","position","InputLabelProps","LockOpenOutlined","clearAndUnsort","datepicker","DatePicker","onTouch","autoOk","helperText","inputVariant","format","KeyboardButtonProps","DependentInput","React","useEffect","paymentType","paymentPercentage","fetchCustomers","res","fetchEntrepreneurs","fetchOrderTypes","fetchStatuses","fetchPaymentMethods","fetchCELinks","fetchCPLinks","EmptyPayment","paymentDate","percentage","receiver","row__one","gridColumnGap","gridTemplateColumns","row__two","gridTemplateRows","transform","top","right","button","gridColumn","successInfo","successText","errorInfo","errorText","errorSvg","fontSize","successSvg","nullable","PaymentForm","makePaymentQuery","useMakePayment","paymentMethods","useQuery","DataService","initialData","initialStale","keepPreviousData","updatePaymentMethodQuery","paymentMethod","useUpdatePaymentMethod","showPaymentInfo","setShowPaymentInfo","showPercentageLinkInfo","setShowPercentageLinkInfo","Date","currentTime","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setCurrentTime","style","SortForm","authState","useSelector","showUserOrders","ActionBar","currentTab","setTab","useIsFetching","sortState","tabId","Paper","elevation","Typography","src","alt","showCustomerInfo","includes","marginLeft","Collapse","in","timeout","onEntered","columns","headerName","flex","renderCell","Link","cellClassName","ClientsTable","exportQuery","customers","responseType","val","blob","Blob","window","navigator","msSaveOrOpenBlob","URL","createObjectURL","document","createElement","href","download","dispatchEvent","MouseEvent","bubbles","cancelable","view","q","setQ","filter","rows","toString","toLowerCase","indexOf","placeholder","sortModel","loading","rowHeight","headerHeight","pagination","disableSelectionOnClick","theme","modal","alignItems","justifyContent","paper","palette","background","boxShadow","shadows","spacing","cursor","primary","h2","textAlign","fontWeight","marginBottom","buttons","clearButton","marginRight","rowOne","gridRowGap","rowTwo","longTextField","gridColumnStart","gridColumnEnd","switchHolder","auxiliaryRow","email","CustomerForm","customerModalState","saveCustomerQuery","log","useSaveCustomer","showSavedInfo","setShowSavedInfo","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","flexGrow","logoutButton","logoutHolder","whiteSpace","tabs","Header","history","useHistory","setValue","AppBar","Toolbar","Tabs","_e","newValue","TabIndicatorProps","indicatorColor","aria-label","Tab","Copyright","align","getFullYear","marginTop","flexDirection","avatar","secondary","submit","Login","password","setForm","showNotYetVerified","setShowNotYetVerified","showWrongCredentials","setShowWrongCredentials","isDisabled","setIsDisabled","Container","maxWidth","CssBaseline","Avatar","then","catch","fullWidth","autoFocus","Grid","container","item","xs","Box","mt","useStylesTooltip","arrow","tooltip","ToolTip","title","placement","children","Tooltip","lineHeight","EditForm","user","deleteQuery","delete","setShowModal","useDeleteOrder","updateOrderQuery","backupOrder","updateObject","onMutate","mutationObject","getQueryCache","findAll","forEach","query","setQueryData","queryKey","cachedOrder","_error","toggleModal","useUpdateOrder","setOpen","showDeleteError","setShowDeleteError","showSaveError","setShowSaveError","showConfirmation","setShowConfirmation","toggle","isNotMyOrder","employeeID","amI","role","isDisabledFor","multiline","Dialog","fullScreen","DialogTitle","DialogContent","DialogContentText","DialogActions","fixOrders","sortOrders","payDateFrom","payDateTill","sendForm","sources","acceptanceButton","border","borderColor","inWorkButton","readyButton","completedButton","popper","zIndex","left","borderWidth","content","borderStyle","StatusPopper","statusQuery","statusId","useSetStatus","anchorRef","useRef","arrowRef","setArrowRef","prevOpen","img","ref","Popper","anchorEl","current","disablePortal","modifiers","flip","enabled","preventOverflow","boundariesElement","element","o","strcmp","b","localeCompare","formatDate","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","Table","tableID","ordersQuery","OrderService","useOrders","sortOrder","setSortOrder","reduce","orderBy","sortComparator","c1","c2","valueFormatter","param","Number","parseFloat","sortable","payDate","Object","keys","column","sortDirection","onSortModelChange","App","CustomerService","path","exact","NotFound","ProtectedRoute","Component","authToken","render","to","pathname","from","location","oldTheme","createMuiTheme","light","dark","typography","useNextVariants","htmlFontSize","ukUA","breakpoints","overrides","MuiInputLabel","up","down","MuiInputAdornment","MuiInputBase","MuiTypography","subtitle1","body1","MuiButton","MuiTab","MuiSvgIcon","prototype","toISOString","formatISO","this","substr","queryCache","QueryCache","QueryClient","ReactDOM","QueryClientProvider","client","utils","DateFnsUtils","locale","uk","getElementById"],"mappings":"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","file":"static/js/main.d6fd877b.chunk.js","sourcesContent":["export const ADD_ORDER = \"ADD_ORDER\";\nexport const LOAD_ORDERS = \"LOAD_ORDERS\";\n\nexport const SET_AUTHENTICATED = \"SET_AUTHENTICATED\";\nexport const SET_UNAUTHENTICATED = \"SET_UNAUTHENTICATED\";\n\nexport const SELECT_CUSTOMER = \"SELECT_CUSTOMER\";\nexport const UNSELECT_CUSTOMER = \"UNSELECT_CUSTOMER\";\n\nexport const SET_ACTIVE_SORTING = \"SET_ACTIVE_SORTING\";\nexport const UPDATE_MAIN_SORTING = \"UPDATE_MAIN_SORTING\";\nexport const UPDATE_SORT_SORTING = \"UPDATE_SORT_SORTING\";\nexport const UPDATE_PAYMENT_SORTING = \"UPDATE_PAYMENT_SORTING\";\nexport const ADD_MAIN_SORTING = \"ADD_MAIN_SORTING\";\nexport const ADD_SORT_SORTING = \"ADD_SORT_SORTING\";\nexport const ADD_PAYMENT_SORTING = \"ADD_PAYMENT_SORTING\";\n\nexport const SHOW_CUSTOMER_MODAL = \"SHOW_CUSTOMER_MODAL\";\nexport const CLOSE_CUSTOMER_MODAL = \"CLOSE_CUSTOMER_MODAL\";\n","import * as ActionTypes from \"./actionTypes\";\n\nconst initialState = {\n  mainPageOrderList: [],\n  sortPageOrderList: [],\n  isLoading: true,\n};\n\nfunction orderReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.ADD_ORDER:\n      return {\n        ...state,\n        mainPageOrderList: [...state.mainPageOrderList, action.payload],\n        sortPageOrderList: [...state.sortPageOrderList, action.payload],\n      };\n    case ActionTypes.LOAD_ORDERS:\n      if (!action.payload) return state;\n      return {\n        ...state,\n        mainPageOrderList: action.payload,\n        sortPageOrderList: action.payload,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default orderReducer;\n","import * as ActionTypes from \"./actionTypes\";\n\nexport const NEW_ORDER = (newOrder) => ({\n  type: ActionTypes.ADD_ORDER,\n  payload: newOrder,\n});\n\nexport const LOAD_ORDERS = (orders) => ({\n  type: ActionTypes.LOAD_ORDERS,\n  payload: orders,\n});\n\nexport const SET_AUTHENTICATED = (token, employee, username, roles) => ({\n  type: ActionTypes.SET_AUTHENTICATED,\n  payload: {\n    token,\n    employee,\n    username,\n    roles,\n  },\n});\n\nexport const SET_UNAUTHENTICATED = () => ({\n  type: ActionTypes.SET_UNAUTHENTICATED,\n});\n\nexport const SELECT_CUSTOMER = (customer) => ({\n  type: ActionTypes.SELECT_CUSTOMER,\n  payload: customer,\n});\n\nexport const DESELECT_CUSTOMER = () => ({\n  type: ActionTypes.UNSELECT_CUSTOMER,\n});\n\nexport const SET_ACTIVE_SORTING = (sorting) => ({\n  type: ActionTypes.SET_ACTIVE_SORTING,\n  payload: sorting,\n});\n\nexport const ADD_SORTING_BY = (selection, type) => {\n  let sortPage;\n  switch (type) {\n    case \"main\":\n      sortPage = ActionTypes.ADD_MAIN_SORTING;\n      break;\n    case \"sort\":\n      sortPage = ActionTypes.ADD_SORT_SORTING;\n      break;\n    case \"payment\":\n      sortPage = ActionTypes.ADD_PAYMENT_SORTING;\n      break;\n    default:\n      break;\n  }\n  return {\n    type: sortPage,\n    payload: selection,\n  };\n};\n\nexport const UPDATE_SORTING = (selections, type) => {\n  let sortPage;\n  switch (type) {\n    case \"main\":\n      sortPage = ActionTypes.UPDATE_MAIN_SORTING;\n      break;\n    case \"sort\":\n      sortPage = ActionTypes.UPDATE_SORT_SORTING;\n      break;\n    case \"payment\":\n      sortPage = ActionTypes.UPDATE_PAYMENT_SORTING;\n      break;\n    default:\n      break;\n  }\n  return {\n    type: sortPage,\n    payload: selections,\n  };\n};\n\nexport const SHOW_CUSTOMER_MODAL = (customer = {}) => {\n  return {\n    type: ActionTypes.SHOW_CUSTOMER_MODAL,\n    payload: customer,\n  };\n};\n\nexport const CLOSE_CUSTOMER_MODAL = () => ({\n  type: ActionTypes.CLOSE_CUSTOMER_MODAL,\n});\n","export function calculateM2(order) {\n  order.m2 =\n    (((order.width * order.height) / 1000000) * order.amount).toFixed(3) || 0.0;\n}\n\nexport const checkPriceShrink = (form, shrinkStatus, setShrinkStatus) => {\n  if (form.price >= 0) {\n    if (!shrinkStatus.shrink) {\n      setShrinkStatus({\n        shrink: true,\n      });\n    }\n  } else if (shrinkStatus.shrink) {\n    setShrinkStatus({\n      shrink: false,\n    });\n  }\n};\n\nexport const fixCustomers = (data, id = 0) => {\n  return data.map((row) => {\n    if (row.orderId === 0) {\n      row.id = id;\n      row.customerId = id;\n    } else {\n      row.id = row.customerId;\n    }\n    return row;\n  });\n};\n\nexport const setCurrentTime = (date) => {\n  const currentTime = new Date();\n  date.setHours(currentTime.getHours());\n  date.setMinutes(currentTime.getMinutes());\n  date.setSeconds(currentTime.getSeconds());\n};\n\nexport const calculateSum = (order) => {\n  return order.m2 > 0\n    ? Math.ceil(+(order.m2 * order.price) + +order.fees)\n    : Math.ceil(order.price * order.amount + +order.fees);\n};\n","import {TextField, withStyles} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {useFormikContext} from \"formik\";\nimport {fieldToTextField} from \"formik-material-ui\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useDispatch} from \"react-redux\";\nimport {ADD_SORTING_BY} from \"./context/actions\";\nimport {calculateSum} from \"./services/utils\";\n\nconst NoPaddingAutocomplete = withStyles({\n  inputRoot: {\n    '&&[class*=\"MuiOutlinedInput-root\"] $input': {\n      padding: 2,\n    },\n    '&&[class*=\"MuiOutlinedInput-root\"]': {\n      paddingRight: \"40px!important\",\n    },\n  },\n  input: {},\n})(Autocomplete);\n\nfunction ComboBox({\n  label,\n  getName,\n  sortKey,\n  error,\n  validator,\n  kindNameSetter = false,\n  typeNameSetter = false,\n  setEntrepreneur = false,\n  setDimensions = false,\n  setPrice = false,\n  action = false,\n  sortPage = \"\",\n  textFieldProps,\n  ...props\n}) {\n  const {\n    form: {setFieldValue},\n  } = props;\n  const {\n    values: {order},\n  } = useFormikContext();\n  const {...field} = fieldToTextField(props);\n  const {name} = field;\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n\n  return (\n    <NoPaddingAutocomplete\n      {...props}\n      size=\"small\"\n      error={\"\"}\n      value={field.value}\n      autoHighlight={true}\n      getOptionLabel={getName}\n      onKeyPress={(e) => {\n        if (e.key === \"=\" || e.key === \"+\") {\n          e.preventDefault();\n          if (action) action();\n        }\n      }}\n      onChange={(_, value) => {\n        if (sortKey) {\n          const sortBy = {};\n          sortBy[sortKey] = value;\n          dispatch(ADD_SORTING_BY(sortBy, sortPage));\n        }\n\n        if (setEntrepreneur) {\n          const entrepreneur =\n            queryClient\n              .getQueryData(\"ce-links\")\n              .find((link) => link.customer.customerId === value?.customerId)\n              ?.entrepreneur || null;\n          setFieldValue(\"order.entrepreneur\", entrepreneur);\n        }\n\n        setFieldValue(name, value);\n\n        if (setPrice) {\n          if (!value) return;\n          let customerId;\n          let orderKindId;\n          if (value.customerId) {\n            customerId = value.customerId;\n            orderKindId = order.orderKind?.kindId;\n          } else {\n            customerId = order.customer?.customerId;\n            orderKindId = value.kindId;\n          }\n          if (!customerId || !orderKindId) return;\n          const price =\n            queryClient\n              .getQueryData(\"cp-links\")\n              .find(\n                (link) =>\n                  link.customer?.customerId === customerId &&\n                  link.orderKind?.kindId === orderKindId\n              )?.price || 0;\n          setFieldValue(\"order.price\", price);\n\n          const sum = calculateSum({\n            ...order,\n            price: price,\n          });\n          if (sum) setFieldValue(\"order.finalSum\", sum);\n        }\n\n        if (setDimensions && value && value.width && value.height) {\n          setFieldValue(\"order.width\", value.width);\n          setFieldValue(\"order.height\", value.height);\n        }\n\n        validator(name);\n      }}\n      renderInput={(props) => (\n        <TextField\n          {...props}\n          error={!!error}\n          onChange={(e) => {\n            if (typeNameSetter) {\n              typeNameSetter(e.target.value);\n            } else if (kindNameSetter) {\n              kindNameSetter(e.target.value);\n            }\n          }}\n          label={label}\n          variant=\"outlined\"\n        />\n      )}\n    />\n  );\n}\n\nexport default ComboBox;\n","import Axios from \"axios\";\nimport { SET_UNAUTHENTICATED } from \"../context/actions\";\nimport store from \"../context/store\";\n\nexport const authorize = async (credentials) => {\n  const response = await Axios.post(\"/api/auth/signin\", credentials);\n  const data = response.data;\n  return data;\n};\n\nexport const unauthorize = () => {\n  store.dispatch(SET_UNAUTHENTICATED());\n};\n","import Axios from \"axios\";\nimport * as AuthService from \"../services/auth-service\";\nimport * as ActionTypes from \"./actionTypes\";\n\nconst initialState = {\n  isAuthenticated: false,\n  loggedUser: null,\n  roles: [],\n};\n\nfunction authReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.SET_AUTHENTICATED:\n      localStorage.setItem(\"token\", action.payload.token);\n      localStorage.setItem(\"username\", action.payload.username);\n      localStorage.setItem(\"roles\", action.payload.roles);\n      localStorage.setItem(\"loggedUser\", JSON.stringify(action.payload.employee));\n\n      Axios.defaults.headers.common[\n        \"Authorization\"\n      ] = `Bearer ${action.payload.token}`;\n\n      Axios.interceptors.response.use(\n        (response) => response,\n        (error) => {\n          error.response?.status === 401\n            ? AuthService.unauthorize()\n            : console.error(error);\n          throw error;\n        }\n      );\n      return {\n        isAuthenticated: true,\n        loggedUser: action.payload.employee,\n        roles: action.payload.roles,\n      };\n    case ActionTypes.SET_UNAUTHENTICATED:\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"username\");\n      localStorage.removeItem(\"roles\");\n      localStorage.removeItem(\"loggedUser\");\n      return {isAuthenticated: false, loggedUser: null};\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;\n","export const EmptySort = {\n  customer: null,\n  status: null,\n  dateFrom: null,\n  dateTill: null,\n  orderKind: null,\n  orderType: null,\n  employee: null,\n  details: \"\",\n};\n","import * as ActionTypes from \"./actionTypes\";\nimport {EmptySort} from \"../models/SortObject\";\n\nconst initialState = {\n  active: \"main\",\n  main: EmptySort,\n  sort: EmptySort,\n  payment: EmptySort,\n};\n\nfunction sortReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.SET_ACTIVE_SORTING:\n      return {...state, active: action.payload};\n    case ActionTypes.ADD_MAIN_SORTING:\n      return {...state, main: {...state.main, ...action.payload}};\n    case ActionTypes.ADD_SORT_SORTING:\n      return {...state, sort: {...state.sort, ...action.payload}};\n    case ActionTypes.ADD_PAYMENT_SORTING:\n      return {...state, payment: {...state.payment, ...action.payload}};\n    case ActionTypes.UPDATE_MAIN_SORTING:\n      return {...state, main: action.payload};\n    case ActionTypes.UPDATE_SORT_SORTING:\n      return {...state, sort: action.payload};\n    case ActionTypes.UPDATE_PAYMENT_SORTING:\n      return {...state, payment: action.payload};\n    default:\n      return state;\n  }\n}\n\nexport default sortReducer;\n","export const CustomerObject = {\n  customerId: 0,\n  customerName: \"\",\n  customerGroup: \"\",\n  money: 0,\n  payLog: \"\",\n  debtor: false,\n  city: \"\",\n  info: \"\",\n  firstPerson: \"\",\n  firstPhone: \"\",\n  firstEmail: \"\",\n  secondPerson: \"\",\n  secondPhone: \"\",\n  secondEmail: \"\",\n  thirdPerson: \"\",\n  thirdPhone: \"\",\n  thirdEmail: \"\",\n};\n","import {CustomerObject} from \"../models/CustomerObject\";\nimport * as ActionTypes from \"./actionTypes\";\n\nconst initialState = {\n  show: false,\n  customer: CustomerObject,\n};\n\nfunction customerModalReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.SHOW_CUSTOMER_MODAL:\n      return {show: true, customer: action.payload};\n    case ActionTypes.CLOSE_CUSTOMER_MODAL:\n      return {show: false, customer: {}};\n    default:\n      return state;\n  }\n}\n\nexport default customerModalReducer;\n","import authReducer from \"./auth-reducer\";\nimport sortReducer from \"./sort-reducer\";\nimport customerModalReducer from \"./customerModal-reducer\";\n\nconst {createStore, combineReducers} = require(\"redux\");\nconst {default: orderReducer} = require(\"./order-reducer\");\n\nconst store = createStore(\n  combineReducers({\n    auth: authReducer,\n    orders: orderReducer,\n    sortSelections: sortReducer,\n    showCustomerModal: customerModalReducer,\n  })\n);\n\nexport default store;\n","import {Snackbar} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport React from \"react\";\n\nfunction InfoMessage({open, onClose, message, type}) {\n  if (type === \"success\") {\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={onClose}\n      >\n        <Alert onClose={onClose} variant=\"filled\" severity=\"success\">\n          {message}\n        </Alert>\n      </Snackbar>\n    );\n  } else {\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={onClose}\n      >\n        <Alert onClose={onClose} variant=\"filled\" severity=\"error\">\n          {message}\n        </Alert>\n      </Snackbar>\n    );\n  }\n}\n\nexport default InfoMessage;\n","import {TextField} from \"@material-ui/core\";\nimport {useFormikContext} from \"formik\";\nimport React from \"react\";\nimport {calculateM2, calculateSum} from \"./services/utils\";\n\nconst InputField = ({\n  label,\n  field,\n  error,\n  readonly = false,\n  validator,\n  disableCalculation = false,\n  numeric = true,\n  phone = false,\n  ...props\n}) => {\n  const {\n    form: {setFieldValue},\n  } = props;\n  const {values: form} = useFormikContext();\n  const {onChange, name} = field;\n  return (\n    <TextField\n      {...props}\n      {...field}\n      error={!!error}\n      size=\"small\"\n      variant=\"outlined\"\n      autoComplete=\"off\"\n      label={label}\n      InputProps={{readOnly: readonly}}\n      onChange={(e) => {\n        if (!numeric) onChange(e);\n        if (e.target.value.match(/^\\d*\\.?\\d*$/) || e.target.value.length === 0) {\n          onChange(e);\n        }\n        validator(name);\n      }}\n      onKeyUp={(_) => {\n        if (!numeric || phone || !form.order || disableCalculation) return;\n        calculateM2(form.order);\n        const sum = calculateSum(form.order);\n        if (sum) setFieldValue(\"order.finalSum\", sum);\n      }}\n    />\n  );\n};\n\nexport default InputField;\n","export const EmptyOrderKind = {\n  kindId: 0,\n  typeId: 0,\n  kindName: \"\",\n  width: 0,\n  height: 0,\n};\n","export const EmptyOrder = {\n  orderId: 0,\n  billNo: 0,\n  date: \"\",\n  employee: {userID: 60},\n  entrepreneur: null,\n  customer: null,\n  orderType: null,\n  orderKind: null,\n  width: 0,\n  height: 0,\n  amount: 0,\n  m2: 0.0,\n  price: 0,\n  fees: 0,\n  finalSum: 0,\n  paySum: 0,\n  status: {id: 1},\n  comment: \"\",\n};\n","export const EmptyOrderType = {\n  typeId: 0,\n  typeName: \"\",\n};\n","import { FormControlLabel, Switch } from \"@material-ui/core\";\nimport { useField } from \"formik\";\nimport React from \"react\";\n\nconst SwitchControl = ({ label, isChecked, ...props }) => {\n  const [field] = useField(props);\n  return (\n    <FormControlLabel\n      control={<Switch {...props} {...field} checked={isChecked} color=\"primary\" />}\n      label={label}\n    />\n  );\n};\n\nexport default SwitchControl;\n","import {Button} from \"@material-ui/core\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {LastPageOutlined, LinkOutlined, LockOpenOutlined} from \"@material-ui/icons\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {Field, Form, Formik} from \"formik\";\nimport React, {useState} from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useDispatch} from \"react-redux\";\nimport * as yup from \"yup\";\nimport \"./AddOrderForm.css\";\nimport ComboBox from \"./ComboBox\";\nimport {SHOW_CUSTOMER_MODAL, UPDATE_SORTING} from \"./context/actions\";\nimport store from \"./context/store\";\nimport useSaveCELink from \"./hooks/useSaveCELink\";\nimport useSaveCPLink from \"./hooks/useSaveCPLink\";\nimport useSaveDimensions from \"./hooks/useSaveDimensions\";\nimport useSaveOrder from \"./hooks/useSaveOrder\";\nimport useSaveOrderKind from \"./hooks/useSaveOrderKind\";\nimport useSaveOrderType from \"./hooks/useSaveOrderType\";\nimport InfoMessage from \"./InfoMessage\";\nimport InputField from \"./InputField\";\nimport {CustomerObject} from \"./models/CustomerObject\";\nimport {EmptyOrderKind} from \"./models/OrderKindObject\";\nimport {EmptyOrder} from \"./models/OrderObject\";\nimport {EmptyOrderType} from \"./models/OrderTypeObject\";\nimport {EmptySort} from \"./models/SortObject\";\nimport {checkPriceShrink} from \"./services/utils\";\nimport SwitchControl from \"./SwitchControl\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    margin: \"0 auto\",\n    width: \"52%\",\n  },\n  lock: {\n    padding: 0,\n    width: \"5px\",\n    backgroundColor: \"white !important\",\n    minWidth: 0,\n\n    \"&:hover\": {\n      backgroundColor: \"white\",\n    },\n  },\n  svg: {\n    fill: \"rgba(0, 0, 0, 0.23)\",\n\n    \"&:hover\": {\n      fill: \"black\",\n    },\n  },\n  clear: {\n    backgroundColor: \"#fff\",\n    minWidth: 0,\n    justifySelf: \"flex-end\",\n    margin: \"0px 0px 1px 0\",\n    width: \"2.4rem\",\n  },\n}));\n\nconst validationSchema = yup.object({\n  order: yup.object({\n    entrepreneur: yup.object().required(),\n    customer: yup.object().required(),\n    orderType: yup.object().required(),\n    orderKind: yup.object().required(),\n    width: yup.number().lessThan(2000000000).positive().min(0).required(),\n    height: yup.number().lessThan(2000000000).positive().min(0).required(),\n    amount: yup.number().lessThan(2000000000).positive().min(0).required(),\n    price: yup.number().lessThan(2000000000).positive().min(0).required(),\n    fees: yup.number().lessThan(2000000000).positive().min(0).required(),\n    finalSum: yup.number().lessThan(2000000000).positive().min(0).required(),\n    comment: yup.string().trim().max(255).required(),\n  }),\n});\n\nexport default function AddOrderForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n  const newOrderQuery = useSaveOrder();\n  const newCELinkQuery = useSaveCELink();\n  const newCPLinkQuery = useSaveCPLink();\n  const saveOrderKindQuery = useSaveOrderKind();\n  const saveOrderTypeQuery = useSaveOrderType();\n  const saveDimensionsQuery = useSaveDimensions();\n  const [shrinkStatus, setShrinkStatus] = useState({});\n  const [showOrderInfo, setShowOrderInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [showCELinkInfo, setShowCELinkInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [showDimensionsInfo, setShowDimensionsInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [showPriceInfo, setShowPriceInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [showOrderTypeInfo, setShowOrderTypeInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [showOrderKindInfo, setShowOrderKindInfo] = useState({\n    success: false,\n    error: false,\n  });\n  const [orderKindName, setOrderKindName] = useState(\"\");\n  const [orderTypeName, setOrderTypeName] = useState(\"\");\n\n  const handleClose = () => {\n    setShowOrderInfo({success: false, error: false});\n    setShowCELinkInfo({success: false, error: false});\n    setShowDimensionsInfo({success: false, error: false});\n    setShowPriceInfo({success: false, error: false});\n    setShowOrderKindInfo({success: false, error: false});\n    setShowOrderTypeInfo({success: false, error: false});\n  };\n\n  const clearAndUnsort = (e, resetForm) => {\n    store.dispatch(UPDATE_SORTING({...EmptySort}, \"main\"));\n    resetForm(e);\n  };\n\n  const onAddCustomer = () => {\n    dispatch(SHOW_CUSTOMER_MODAL({...CustomerObject}));\n  };\n\n  const onAddOrderType = () => {\n    if (orderTypeName.trim().length === 0) {\n      setShowOrderTypeInfo({success: false, error: true});\n      return;\n    }\n    saveOrderTypeQuery.mutate({\n      orderType: {\n        ...EmptyOrderType,\n        typeName: orderTypeName,\n      },\n      setStatus: setShowOrderTypeInfo,\n    });\n  };\n\n  const onAddOrderKind = (orderType) => {\n    if (orderKindName.trim().length === 0 || !orderType) {\n      setShowOrderKindInfo({success: false, error: true});\n      return;\n    }\n    saveOrderKindQuery.mutate({\n      orderType: orderType,\n      orderKind: {\n        ...EmptyOrderKind,\n        typeId: orderType.typeId,\n        kindName: orderKindName,\n      },\n      setStatus: setShowOrderKindInfo,\n    });\n  };\n\n  const linkCustomer = (customer, entrepreneur) => {\n    if (!customer || !entrepreneur) {\n      setShowCELinkInfo({success: false, error: true});\n      return;\n    }\n    newCELinkQuery.mutate({\n      customerId: customer.customerId,\n      entrepreneurId: entrepreneur.entrepreneurId,\n      setStatus: setShowCELinkInfo,\n    });\n  };\n\n  const linkDimensions = (orderKind, width, height) => {\n    if (!orderKind || !width || !height) {\n      setShowDimensionsInfo({success: false, error: true});\n      return;\n    }\n    orderKind.width = width;\n    orderKind.height = height;\n    saveDimensionsQuery.mutate({\n      orderKind: orderKind,\n      setStatus: setShowDimensionsInfo,\n    });\n  };\n\n  const linkPrice = (customer, orderKind, price) => {\n    if (!customer || !orderKind || !price) {\n      setShowPriceInfo({success: false, error: true});\n      return;\n    }\n    newCPLinkQuery.mutate({\n      customerId: customer.customerId,\n      orderKindId: orderKind.kindId,\n      price: price,\n      setStatus: setShowPriceInfo,\n    });\n  };\n\n  const setUrgence = (isUrgently, order) => {\n    if (isUrgently) {\n      if (order.finalSum * 0.15 < 10) {\n        order.finalSum = +order.finalSum + 10;\n      } else {\n        order.finalSum = Math.ceil(order.finalSum * 1.15);\n      }\n      order.comment = \"(Терміново) \" + order.comment;\n    }\n  };\n\n  const setAcceptance = (onAcceptance, order) => {\n    onAcceptance\n      ? (order.status = queryClient\n          .getQueryData(\"statuses\")\n          .find((status) => status.id === 1))\n      : (order.status = queryClient\n          .getQueryData(\"statuses\")\n          .find((status) => status.id === 2));\n  };\n\n  const onFormSubmit = (form, resetForm, setFieldValue) => {\n    setUrgence(form.isUrgently, form.order);\n    setAcceptance(form.onAcceptance, form.order);\n    newOrderQuery.mutate({\n      newOrder: form.order,\n      resetForm: form.clearFields\n        ? resetForm\n        : () => keepFields(form.order, setFieldValue),\n      setStatus: setShowOrderInfo,\n    });\n  };\n\n  const keepFields = (form, setFieldValue) => {\n    setFieldValue(\"order.width\", form.orderKind.width);\n    setFieldValue(\"order.height\", form.orderKind.height);\n    setFieldValue(\"order.amount\", 0);\n    const price =\n      queryClient\n        .getQueryData(\"cp-links\")\n        .find(\n          (link) =>\n            link.customer?.customerId === form.customer.customerId &&\n            link.orderKind?.kindId === form.orderKind.kindId\n        )?.price || 0;\n    setFieldValue(\"order.price\", price);\n    setFieldValue(\"order.fees\", 0);\n    setFieldValue(\"order.finalSum\", 0);\n    setFieldValue(\"order.comment\", \"\");\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik\n        validateOnChange={false}\n        validateOnMount={false}\n        validateOnBlur={false}\n        initialValues={{\n          order: {\n            ...EmptyOrder,\n            employee: JSON.parse(localStorage.getItem(\"loggedUser\")),\n          },\n          onAcceptance: false,\n          clearFields: true,\n          isUrgently: false,\n        }}\n        onSubmit={(form, {resetForm, setFieldValue}) =>\n          onFormSubmit(form, resetForm, setFieldValue)\n        }\n        validationSchema={validationSchema}\n      >\n        {({values, errors, validateField, handleReset}) => (\n          <Form>\n            {checkPriceShrink(values.order, shrinkStatus, setShrinkStatus)}\n            <div className=\"row__one\">\n              <Field\n                name=\"order.entrepreneur\"\n                label=\"Підприємець\"\n                error={errors?.order?.entrepreneur}\n                validator={validateField}\n                component={ComboBox}\n                disabled={newOrderQuery.isFetching}\n                getName={(option) => option.fullName || \"\"}\n                options={queryClient.getQueryData(\"entrepreneurs\") || []}\n              />\n              <Button\n                tabIndex={-1}\n                className={classes.lock}\n                disableRipple={true}\n                onClick={() =>\n                  linkCustomer(values.order.customer, values.order.entrepreneur)\n                }\n              >\n                <LastPageOutlined className={classes.svg} />\n              </Button>\n              <Field\n                name=\"order.customer\"\n                label=\"Замовник\"\n                error={errors?.order?.customer}\n                validator={validateField}\n                component={ComboBox}\n                setEntrepreneur={true}\n                setPrice={true}\n                sortKey=\"customer\"\n                sortPage=\"main\"\n                action={onAddCustomer}\n                disabled={newOrderQuery.isFetching}\n                getName={(option) => option.customerName || \"\"}\n                options={queryClient.getQueryData(\"customers\") || []}\n              />\n              <Field\n                name=\"order.orderType\"\n                label=\"Вид\"\n                error={errors?.order?.orderType}\n                validator={validateField}\n                component={ComboBox}\n                typeNameSetter={setOrderTypeName}\n                action={onAddOrderType}\n                disabled={newOrderQuery.isFetching}\n                getName={(option) => option.typeName || \"\"}\n                options={queryClient.getQueryData(\"orderTypes\") || []}\n              />\n\n              <Field\n                name=\"order.orderKind\"\n                label=\"Тип\"\n                error={errors?.order?.orderKind}\n                validator={validateField}\n                component={ComboBox}\n                setPrice={true}\n                setDimensions={true}\n                action={() => onAddOrderKind(values.order.orderType)}\n                kindNameSetter={setOrderKindName}\n                disabled={newOrderQuery.isFetching}\n                getName={(option) => option.kindName || \"\"}\n                options={values.order.orderType?.orderKinds || []}\n              />\n            </div>\n\n            <div className=\"row__two\">\n              <Field\n                name=\"order.width\"\n                label=\"Ширина\"\n                error={errors?.order?.width}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <Button\n                tabIndex={-1}\n                className={classes.lock}\n                disableRipple={true}\n                onClick={() =>\n                  linkDimensions(\n                    values.order.orderKind,\n                    values.order.width,\n                    values.order.height\n                  )\n                }\n              >\n                <LinkOutlined className={classes.svg} />\n              </Button>\n              <Field\n                name=\"order.height\"\n                label=\"Висота\"\n                error={errors?.order?.height}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <Field\n                name=\"order.amount\"\n                label=\"Кількість\"\n                error={errors?.order?.amount}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <OutlinedInput\n                id=\"outlined\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={\n                  (\n                    ((values.order.width * values.order.height) / 1000000) *\n                    values.order.amount\n                  ).toFixed(3) || 0.0\n                }\n                endAdornment={<InputAdornment position=\"end\">м²</InputAdornment>}\n                disabled\n              />\n\n              <Field\n                name=\"order.price\"\n                label=\"Ціна\"\n                error={errors?.order?.price}\n                validator={validateField}\n                InputLabelProps={shrinkStatus}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <Button\n                tabIndex={-1}\n                className={classes.lock}\n                disableRipple={true}\n                onClick={() =>\n                  linkPrice(\n                    values.order.customer,\n                    values.order.orderKind,\n                    values.order.price\n                  )\n                }\n              >\n                <LockOpenOutlined className={classes.svg} />\n              </Button>\n\n              <Field\n                name=\"order.fees\"\n                label=\"Послуги\"\n                error={errors?.order?.fees}\n                validator={validateField}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n              <Field\n                name=\"order.finalSum\"\n                label=\"Сума\"\n                error={errors?.order?.finalSum}\n                validator={validateField}\n                component={InputField}\n                disableCalculation={true}\n                disabled={newOrderQuery.isFetching}\n              />\n            </div>\n\n            <div className=\"row__three\">\n              <Field\n                name=\"order.comment\"\n                label=\"Опис замовлення\"\n                error={errors?.order?.comment}\n                validator={validateField}\n                numeric={false}\n                component={InputField}\n                disabled={newOrderQuery.isFetching}\n              />\n            </div>\n\n            <div className=\"row__four\">\n              <div className=\"controls\">\n                <SwitchControl\n                  name=\"onAcceptance\"\n                  isChecked={values.onAcceptance}\n                  label=\"На погодженні\"\n                  disabled={newOrderQuery.isFetching}\n                />\n                <SwitchControl\n                  name=\"clearFields\"\n                  isChecked={values.clearFields}\n                  label=\"Очищати поля\"\n                  disabled={newOrderQuery.isFetching}\n                />\n                <SwitchControl\n                  name=\"isUrgently\"\n                  isChecked={values.isUrgently}\n                  label=\"Терміново\"\n                  disabled={newOrderQuery.isFetching}\n                />\n              </div>\n\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={newOrderQuery.isFetching}\n                type=\"submit\"\n              >\n                Зберегти замовлення\n              </Button>\n\n              <Button\n                className={classes.clear}\n                onClick={(e) => clearAndUnsort(e, handleReset)}\n                disabled={newOrderQuery.isFetching}\n                variant=\"contained\"\n                type=\"button\"\n              >\n                <RefreshIcon></RefreshIcon>\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n      <InfoMessage\n        type=\"success\"\n        open={showOrderInfo.success}\n        onClose={handleClose}\n        message=\"Замовлення успішно додано.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showOrderInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при додаванні замовлення.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showCELinkInfo.success}\n        onClose={handleClose}\n        message=\"Зв'язок збережено.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showCELinkInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні зв'язку.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showDimensionsInfo.success}\n        onClose={handleClose}\n        message=\"Розміри збережено.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showDimensionsInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні розмірів.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showPriceInfo.success}\n        onClose={handleClose}\n        message=\"Ціна прив'язана.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showPriceInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні ціни.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showOrderKindInfo.success}\n        onClose={handleClose}\n        message=\"Тип успішно створений.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showOrderKindInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при створенні типу. Можливо не вибраний вид.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showOrderTypeInfo.success}\n        onClose={handleClose}\n        message=\"Вид успішно створений.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showOrderTypeInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при створенні виду.\"\n      />\n    </div>\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\nimport {UPDATE_SORTING} from \"../context/actions\";\nimport store from \"../context/store\";\nimport {EmptySort} from \"../models/SortObject\";\n\nexport default function useSaveOrder() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.post(\"/api/orders/\", params.newOrder), {\n    onSuccess: (_, passedParams) => {\n      passedParams.setStatus({success: true, error: false});\n      queryClient.invalidateQueries([\"customers\"]);\n      store.dispatch(UPDATE_SORTING({...EmptySort}, \"main\"));\n      passedParams.resetForm();\n    },\n    onError: (_, passedParams) => {\n      passedParams.setStatus({success: false, error: true});\n    },\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveCELink() {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (params) =>\n      Axios.get(\"/api/ce-links/\" + params.customerId + \"/\" + params.entrepreneurId),\n    {\n      onSuccess: (_, passedParams) => {\n        queryClient.invalidateQueries(\"ce-links\");\n        passedParams.setStatus({success: true, error: false});\n      },\n      onError: (_, passedParams) => {\n        passedParams.setStatus({success: false, error: true});\n      },\n    }\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveCELink() {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (params) =>\n      Axios.get(\n        \"/api/cp-links/\" +\n          params.customerId +\n          \"/\" +\n          params.orderKindId +\n          \"/\" +\n          params.price\n      ),\n    {\n      onSuccess: (_, passedParams) => {\n        queryClient.invalidateQueries(\"cp-links\");\n        passedParams.setStatus({success: true, error: false});\n      },\n      onError: (_, passedParams) => {\n        passedParams.setStatus({success: false, error: true});\n      },\n    }\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveOrderKind() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.post(\"/api/order-kinds/\", params.orderKind), {\n    onError: (_, params) => {\n      params.setStatus({success: false, error: true});\n    },\n    onSuccess: (response, params) => {\n      params.orderType.orderKinds.push(response.data);\n      queryClient.invalidateQueries([\"orderTypes\"]);\n      params.setStatus({success: true, error: false});\n    },\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveOrderType() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.post(\"/api/order-types/\", params.orderType), {\n    onError: (_, params) => {\n      params.setStatus({success: false, error: true});\n    },\n    onSuccess: (_, params) => {\n      queryClient.invalidateQueries([\"orderTypes\"]);\n      params.setStatus({success: true, error: false});\n    },\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSaveDimensions() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.put(\"/api/order-kinds/\", params.orderKind), {\n    onSuccess: (_, passedParams) => {\n      queryClient.invalidateQueries(\"orderTypes\");\n      passedParams.setStatus({success: true, error: false});\n    },\n    onError: (_, passedParams) => {\n      passedParams.setStatus({success: false, error: true});\n    },\n  });\n}\n","import {makeStyles} from \"@material-ui/core\";\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\nimport {fieldToTextField} from \"formik-material-ui\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(() => ({\n  datepicker: {\n    margin: 0,\n  },\n}));\n\nfunction DatePicker({label, validator, onTouch = false, ...props}) {\n  const classes = useStyles();\n  const {\n    form: {setFieldValue},\n  } = props;\n  const {...field} = fieldToTextField(props);\n  const {name} = field;\n\n  return (\n    <KeyboardDatePicker\n      {...props}\n      {...field}\n      autoOk={true}\n      autoComplete=\"off\"\n      helperText={\"\"}\n      className={classes.datepicker}\n      inputVariant=\"outlined\"\n      variant=\"inline\"\n      format=\"dd/MM/yyyy\"\n      margin=\"normal\"\n      label={label}\n      onChange={(value) => {\n        setFieldValue(name, value);\n\n        if (onTouch) {\n          onTouch(true);\n        }\n\n        if (validator) {\n          validator(name);\n        }\n      }}\n      KeyboardButtonProps={{\n        \"aria-label\": \"change date\",\n      }}\n    />\n  );\n}\n\nexport default DatePicker;\n","import {TextField} from \"@material-ui/core\";\nimport {useFormikContext} from \"formik\";\nimport React from \"react\";\n\nconst DependentInput = ({name, label, field, error, validator, value, ...props}) => {\n  const {onChange} = field;\n  const {\n    values: {payment},\n    setFieldValue,\n  } = useFormikContext();\n\n  React.useEffect(() => {\n    if (payment.paymentType) {\n      setFieldValue(\"payment.percentage\", payment.paymentType?.paymentPercentage);\n    } else {\n      setFieldValue(\"payment.percentage\", 0);\n    }\n  }, [payment.paymentType, setFieldValue]);\n\n  return (\n    <TextField\n      {...props}\n      {...field}\n      error={!!error}\n      id=\"metrics\"\n      size=\"small\"\n      variant=\"outlined\"\n      autoComplete=\"off\"\n      label={label}\n      onChange={(e) => {\n        if (e.target.value.match(/^\\d*\\.?\\d*$/) || e.target.value.length === 0) {\n          setFieldValue(\"payment.percentage\", e.target.value);\n          onChange(e);\n        }\n        validator(name);\n      }}\n    />\n  );\n};\n\nexport default DependentInput;\n","import Axios from \"axios\";\n\nexport const fetchCustomers = async () => {\n  const res = await Axios.get(\"/api/customers/\");\n  return res.data;\n};\n\nexport const fetchEntrepreneurs = async () => {\n  const res = await Axios.get(\"/api/entrepreneurs/\");\n  return res.data;\n};\n\nexport const fetchOrderTypes = async () => {\n  const res = await Axios.get(\"/api/order-types/\");\n  return res.data;\n};\n\nexport const fetchOrderKinds = async () => {\n  const res = await Axios.get(\"/api/order-kinds/\");\n  return res.data;\n};\n\nexport const fetchStatuses = async () => {\n  const res = await Axios.get(\"/api/orders/statuses/\");\n  return res.data;\n};\n\nexport const fetchPaymentMethods = async () => {\n  const res = await Axios.get(\"/api/payments/\");\n  return res.data;\n};\n\nexport const fetchCELinks = async () => {\n  const res = await Axios.get(\"/api/ce-links/\");\n  return res.data;\n};\n\nexport const fetchCPLinks = async () => {\n  const res = await Axios.get(\"/api/cp-links/\");\n  return res.data;\n};\n","export const EmptyPayment = {\n  entrepreneur: null,\n  customer: null,\n  paymentDate: null,\n  sum: 0,\n  percentage: 0,\n  paymentType: null,\n  receiver: \"\",\n};\n","import {Button} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {LinkOutlined} from \"@material-ui/icons\";\nimport {Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport * as yup from \"yup\";\nimport ComboBox from \"./ComboBox\";\nimport {UPDATE_SORTING} from \"./context/actions\";\nimport store from \"./context/store\";\nimport DatePicker from \"./DatePicker\";\nimport DependentInput from \"./DependentInput\";\nimport useMakePayment from \"./hooks/useMakePayment\";\nimport usePaymentMethods from \"./hooks/usePaymentMethods\";\nimport useUpdatePaymentMethod from \"./hooks/useUpdatePaymentMethod\";\nimport InfoMessage from \"./InfoMessage\";\nimport InputField from \"./InputField\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {EmptyPayment} from \"./models/PaymentObject\";\nimport {EmptySort} from \"./models/SortObject\";\nimport {setCurrentTime} from \"./services/utils\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    margin: \"0 auto\",\n    width: \"52%\",\n  },\n  row__one: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"1fr 2fr\",\n    margin: \".5rem auto 1rem auto\",\n  },\n  row__two: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"1fr 1fr 0.05fr 1fr 1fr\",\n    margin: \"1rem auto\",\n\n    \"& .MuiOutlinedInput-input\": {\n      padding: \"8px 8px\",\n    },\n\n    \"& .MuiInputLabel-outlined\": {\n      transform: \"translate(14px, 10px) scale(1)\",\n    },\n\n    \"& .MuiButtonBase-root\": {\n      padding: \"2px !important\",\n    },\n\n    \"& .MuiOutlinedInput-adornedEnd\": {\n      paddingRight: \"3px\",\n    },\n\n    \"& .MuiAutocomplete-endAdornment\": {\n      top: \"initial\",\n      right: \"11px !important\",\n    },\n  },\n  button: {\n    gridColumn: 2,\n    width: \"16rem\",\n    height: \"2.375rem\",\n    justifySelf: \"center\",\n  },\n  clear: {\n    backgroundColor: \"#fff\",\n    minWidth: 0,\n    justifySelf: \"flex-end\",\n    margin: \"0px 0px 1px 0\",\n    width: \"2.4rem\",\n  },\n  lock: {\n    padding: 0,\n    width: \"100%\",\n    backgroundColor: \"white !important\",\n    minWidth: 0,\n\n    \"&:hover\": {\n      backgroundColor: \"white\",\n    },\n  },\n  svg: {\n    fill: \"rgba(0, 0, 0, 0.23)\",\n\n    \"&:hover\": {\n      fill: \"black\",\n    },\n  },\n  successInfo: {\n    display: \"flex\",\n  },\n  successText: {\n    margin: \"auto .5rem\",\n    color: \"#27A637\",\n  },\n  errorInfo: {\n    display: \"flex\",\n  },\n  errorText: {\n    margin: \"auto .5rem\",\n    color: \"#d2000a\",\n  },\n  errorSvg: {\n    fontSize: \"2.54rem\",\n    fill: \"#d2000a\",\n  },\n  successSvg: {\n    fontSize: \"2.54rem\",\n    fill: \"#27A637\",\n  },\n}));\n\nconst validationSchema = yup.object({\n  payment: yup.object({\n    entrepreneur: yup.object().nullable(),\n    customer: yup.object().required(),\n    paymentDate: yup.date().required(),\n    sum: yup.number().lessThan(2000000000).positive().required(),\n    percentage: yup.number().lessThan(2000000000).positive().min(0).required(),\n    paymentType: yup.object().required(),\n  }),\n});\n\nfunction PaymentForm() {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const makePaymentQuery = useMakePayment();\n  const paymentMethods = usePaymentMethods();\n  const updatePaymentMethodQuery = useUpdatePaymentMethod();\n  const [showPaymentInfo, setShowPaymentInfo] = React.useState({\n    success: false,\n    error: false,\n  });\n  const [showPercentageLinkInfo, setShowPercentageLinkInfo] = React.useState({\n    success: false,\n    error: false,\n  });\n\n  const handleClose = () => {\n    setShowPaymentInfo({success: false, error: false});\n    setShowPercentageLinkInfo({success: false, error: false});\n  };\n\n  const linkPercentage = (paymentMethod, percentage) => {\n    paymentMethod.paymentPercentage = percentage;\n    updatePaymentMethodQuery.mutate({\n      paymentMethod: paymentMethod,\n      setStatus: setShowPercentageLinkInfo,\n    });\n  };\n\n  const clearAndUnsort = (e, resetForm) => {\n    store.dispatch(UPDATE_SORTING({...EmptySort}, \"payment\"));\n    resetForm(e);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik\n        validateOnChange={false}\n        validateOnMount={false}\n        validateOnBlur={false}\n        initialValues={{payment: {...EmptyPayment, paymentDate: new Date()}}}\n        validationSchema={validationSchema}\n        onSubmit={(form) => {\n          setCurrentTime(form.payment.paymentDate);\n          form.payment.receiver = form.payment.paymentType.typeName;\n          makePaymentQuery.mutate({\n            payment: form.payment,\n            setStatus: setShowPaymentInfo,\n          });\n        }}\n      >\n        {({values, errors, handleReset, validateField}) => (\n          <Form style={{margin: \"0 auto\"}}>\n            <div className={classes.row__one}>\n              <Field\n                name=\"payment.entrepreneur\"\n                label=\"Підприємець\"\n                error={errors?.payment?.entrepreneur}\n                validator={validateField}\n                component={ComboBox}\n                sortKey=\"entrepreneur\"\n                sortPage=\"payment\"\n                disabled={makePaymentQuery.isLoading}\n                getName={(option) => option.fullName || \"\"}\n                options={queryClient.getQueryData(\"entrepreneurs\") || []}\n              />\n              <Field\n                name=\"payment.customer\"\n                label=\"Замовник\"\n                error={errors?.payment?.customer}\n                component={ComboBox}\n                validator={validateField}\n                sortKey=\"customer\"\n                sortPage=\"payment\"\n                disabled={makePaymentQuery.isLoading}\n                getName={(option) => option.customerName || \"\"}\n                options={queryClient.getQueryData(\"customers\") || []}\n              />\n            </div>\n\n            <div className={classes.row__two}>\n              <Field\n                component={DatePicker}\n                label=\"Дата\"\n                name=\"payment.paymentDate\"\n                validator={validateField}\n                disabled={makePaymentQuery.isLoading}\n              />\n\n              <Field\n                name=\"payment.paymentType\"\n                label=\"Тип оплати\"\n                error={errors?.payment?.paymentType}\n                component={ComboBox}\n                validator={validateField}\n                disabled={makePaymentQuery.isLoading}\n                getName={(option) => option.typeName || \"\"}\n                options={paymentMethods?.data || []}\n              />\n              <Button\n                className={classes.lock}\n                disableRipple={true}\n                onClick={() =>\n                  linkPercentage(\n                    values.payment.paymentType,\n                    values.payment.percentage\n                  )\n                }\n              >\n                <LinkOutlined className={classes.svg} />\n              </Button>\n              <Field\n                name=\"payment.percentage\"\n                label=\"Відсоток\"\n                error={errors?.payment?.percentage}\n                validator={validateField}\n                component={DependentInput}\n                disabled={makePaymentQuery.isLoading}\n              />\n              <Field\n                name=\"payment.sum\"\n                label=\"Сума\"\n                error={errors?.payment?.sum}\n                validator={validateField}\n                component={InputField}\n                disabled={makePaymentQuery.isLoading}\n              />\n            </div>\n\n            <div className=\"sort__row__three\">\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={makePaymentQuery.isLoading}\n                className={classes.button}\n                type=\"submit\"\n              >\n                Оплатити\n              </Button>\n\n              <Button\n                className={classes.clear}\n                onClick={(e) => clearAndUnsort(e, handleReset)}\n                disabled={makePaymentQuery.isLoading}\n                variant=\"contained\"\n                type=\"button\"\n              >\n                <RefreshIcon></RefreshIcon>\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n      <InfoMessage\n        type=\"success\"\n        open={showPaymentInfo.success}\n        onClose={handleClose}\n        message=\"Оплата успішно внесена.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showPaymentInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при внесенні оплати.\"\n      />\n      <InfoMessage\n        type=\"success\"\n        open={showPercentageLinkInfo.success}\n        onClose={handleClose}\n        message=\"Зв'язок успішно збережений.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showPercentageLinkInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні зв'язку.\"\n      />\n    </div>\n  );\n}\n\nexport default PaymentForm;\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useMakePayment() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.post(\"/api/payments/\", params.payment), {\n    onError: (_, params) => {\n      params.setStatus({success: false, error: true});\n    },\n    onSuccess: (_, params) => {\n      params.setStatus({success: true, error: false});\n      queryClient.invalidateQueries([\"customers\"]);\n      queryClient.invalidateQueries([\"orders\"]);\n      params.payment.sum = 0;\n    },\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as DataService from \"../services/customer-service\";\n\nexport default function usePaymentMethods() {\n  return useQuery(\"paymentMethods\", DataService.fetchPaymentMethods, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useUpdatePaymentMethod() {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (params) => Axios.put(\"/api/payments/types/\", params.paymentMethod),\n    {\n      onSuccess: (_, passedParams) => {\n        queryClient.invalidateQueries(\"paymentMethods\");\n        passedParams.setStatus({success: true, error: false});\n      },\n      onError: (_, passedParams) => {\n        passedParams.setStatus({success: false, error: true});\n      },\n    }\n  );\n}\n","import {Button} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as yup from \"yup\";\nimport ComboBox from \"./ComboBox\";\nimport {UPDATE_SORTING} from \"./context/actions\";\nimport DatePicker from \"./DatePicker\";\nimport InputField from \"./InputField\";\nimport {EmptySort} from \"./models/SortObject\";\nimport \"./SortForm.css\";\nimport SwitchControl from \"./SwitchControl\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    margin: \"0 auto\",\n    width: \"52%\",\n  },\n  button: {\n    width: \"16rem\",\n    justifySelf: \"center\",\n  },\n  clear: {\n    backgroundColor: \"#fff\",\n    minWidth: 0,\n    justifySelf: \"flex-end\",\n    margin: \"0px 0px 1px 0\",\n    width: \"2.4rem\",\n  },\n}));\n\nconst validationSchema = yup.object({\n  sort: yup.object({\n    customer: yup.object().nullable(),\n    status: yup.object().nullable(),\n    dateFrom: yup.date().nullable(),\n    dateTill: yup.date().nullable(),\n    orderKind: yup.object().nullable(),\n    orderType: yup.object().nullable(),\n    details: yup.string().trim().max(255).nullable(),\n  }),\n});\n\nfunction SortForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n  const authState = useSelector((state) => state.auth);\n\n  const clearAndUnsort = (e, resetForm) => {\n    dispatch(UPDATE_SORTING({...EmptySort}, \"sort\"));\n    resetForm(e);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik\n        validateOnChange={false}\n        validateOnMount={false}\n        validateOnBlur={false}\n        initialValues={{sort: EmptySort, showUserOrders: false}}\n        onSubmit={(form) => {\n          form.showUserOrders\n            ? (form.sort.employee = authState.loggedUser)\n            : (form.sort.employee = null);\n          form.sort.details = form.sort.details.trim();\n          dispatch(UPDATE_SORTING(form.sort, \"sort\"));\n        }}\n        validationSchema={validationSchema}\n      >\n        {({values, errors, handleReset, validateField}) => (\n          <Form>\n            <div className=\"sort__row__one\">\n              <Field\n                name=\"sort.customer\"\n                label=\"Замовник\"\n                error={errors?.sort?.customer}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.customerName || \"\"}\n                options={queryClient.getQueryData(\"customers\") || []}\n              />\n              <Field\n                name=\"sort.orderType\"\n                label=\"Вид\"\n                error={errors?.sort?.orderType}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.typeName || \"\"}\n                options={queryClient.getQueryData(\"orderTypes\") || []}\n              />\n              <Field\n                name=\"sort.orderKind\"\n                label=\"Тип\"\n                error={errors?.sort?.orderKind}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.kindName || \"\"}\n                options={values.sort.orderType?.orderKinds || []}\n              />\n            </div>\n\n            <div className=\"sort__row__two\">\n              <div className=\"datepickers\">\n                <Field\n                  component={DatePicker}\n                  disabled={false}\n                  label=\"Від\"\n                  name=\"sort.dateFrom\"\n                />\n                <Field\n                  component={DatePicker}\n                  disabled={false}\n                  label=\"До\"\n                  name=\"sort.dateTill\"\n                />\n              </div>\n              <Field\n                name=\"sort.status\"\n                label=\"Статус\"\n                error={errors?.sort?.status}\n                component={ComboBox}\n                validator={validateField}\n                getName={(option) => option.name || \"\"}\n                options={queryClient.getQueryData(\"statuses\") || []}\n              />\n              <Field\n                name=\"sort.details\"\n                label=\"Опис замовлення\"\n                error={errors?.sort?.details}\n                numeric={false}\n                component={InputField}\n                validator={validateField}\n              />\n            </div>\n\n            <div className=\"sort__row__three\">\n              <SwitchControl\n                name=\"showUserOrders\"\n                isChecked={values.showUserOrders}\n                label=\"Лише мої замовлення\"\n              />\n\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                className={classes.button}\n                type=\"submit\"\n              >\n                Сортувати\n              </Button>\n\n              <Button\n                className={classes.clear}\n                onClick={(e) => clearAndUnsort(e, handleReset)}\n                variant=\"contained\"\n                type=\"button\"\n              >\n                <RefreshIcon></RefreshIcon>\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default SortForm;\n","import {Button, Collapse, Paper, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {useIsFetching, useQueryClient} from \"react-query\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport \"./ActionBar.css\";\nimport AddOrderForm from \"./AddOrderForm\";\nimport {SET_ACTIVE_SORTING} from \"./context/actions\";\nimport PaymentForm from \"./PaymentForm\";\nimport SortForm from \"./SortForm\";\n\nexport default function ActionBar() {\n  const [currentTab, setTab] = useState(0);\n  const queryClient = useQueryClient();\n  const dispatch = useDispatch();\n  const isFetching = useIsFetching();\n  const authState = useSelector((store) => store.auth);\n  const sortState = useSelector((state) => state.sortSelections);\n\n  const open = (tabId) => (currentTab === tabId ? setTab(0) : setTab(tabId));\n\n  const invalidateAddOrderValues = () => {\n    queryClient.invalidateQueries(\"customers\");\n    queryClient.invalidateQueries(\"ce-links\");\n    queryClient.invalidateQueries(\"cp-links\");\n    if (!isFetching) dispatch(SET_ACTIVE_SORTING(\"main\"));\n  };\n\n  const invalidateSortValues = () => {\n    queryClient.invalidateQueries(\"customers\");\n    queryClient.invalidateQueries(\"statuses\");\n    if (!isFetching) dispatch(SET_ACTIVE_SORTING(\"sort\"));\n  };\n\n  const invalidatePaymentValues = () => {\n    queryClient.invalidateQueries(\"customers\");\n    if (!isFetching) dispatch(SET_ACTIVE_SORTING(\"payment\"));\n  };\n\n  const showCustomerInfo = () => {\n    if (!sortState[sortState.active].customer) return;\n    return sortState[sortState.active].customer?.debtor ? (\n      <>\n        <Typography variant=\"subtitle1\">\n          <img\n            className=\"debtor-mark\"\n            src=\"img/Blackmark.svg\"\n            width=\"19\"\n            height=\"19\"\n            alt=\"blackmark\"\n          />{\" \"}\n          <strong>{sortState[sortState.active].customer?.customerName}</strong>{\" \"}\n          {sortState[sortState.active].customer?.customerGroup}:{\" \"}\n          {sortState[sortState.active].customer?.info}\n        </Typography>\n      </>\n    ) : (\n      <>\n        <Typography variant=\"subtitle1\">\n          <strong>{sortState[sortState.active].customer?.customerName}</strong>{\" \"}\n          {sortState[sortState.active].customer?.customerGroup}:{\" \"}\n          {sortState[sortState.active].customer?.info}\n        </Typography>\n      </>\n    );\n  };\n\n  return (\n    <Paper elevation={2}>\n      <div className=\"action_bar_container\">\n        <div className=\"action__bar\">\n          <div className=\"action__bar__info\">{showCustomerInfo()}</div>\n          <div className=\"action__bar__button\">\n            {!authState.roles.includes(\"ROLE_GROUNDFLOOR\") &&\n              !authState.roles.includes(\"ROLE_UVPRINT\") && (\n                <Button variant=\"contained\" color=\"primary\" onClick={() => open(1)}>\n                  Додати замовлення\n                </Button>\n              )}\n            <Button\n              style={{marginLeft: \".5rem\"}}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => open(2)}\n            >\n              Сортування\n            </Button>\n            {!authState.roles.includes(\"ROLE_GROUNDFLOOR\") &&\n              !authState.roles.includes(\"ROLE_UVPRINT\") && (\n                <Button\n                  style={{marginLeft: \".5rem\"}}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => open(3)}\n                >\n                  Внести оплату\n                </Button>\n              )}\n          </div>\n        </div>\n\n        <Collapse\n          in={currentTab === 1}\n          timeout=\"auto\"\n          onEntered={invalidateAddOrderValues}\n        >\n          <AddOrderForm />\n        </Collapse>\n\n        <Collapse\n          in={currentTab === 2}\n          timeout=\"auto\"\n          onEntered={invalidateSortValues}\n        >\n          <SortForm />\n        </Collapse>\n\n        <Collapse\n          in={currentTab === 3}\n          timeout=\"auto\"\n          onEntered={invalidatePaymentValues}\n        >\n          <PaymentForm />\n        </Collapse>\n      </div>\n    </Paper>\n  );\n}\n","import {Button, Link, Paper, TextField} from \"@material-ui/core\";\nimport {XGrid} from \"@material-ui/x-grid\";\nimport React, {useState} from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {SHOW_CUSTOMER_MODAL} from \"./context/actions\";\nimport store from \"./context/store\";\nimport {fixCustomers} from \"./services/utils\";\nimport useExportCustomers from \"./hooks/useExportCustomers\";\nimport {useSelector} from \"react-redux\";\nimport \"./ClientTable.css\";\n\nconst columns = [\n  {\n    field: \"customerName\",\n    headerName: \"Назва замовника\",\n    flex: 3,\n    renderCell: (params) => (\n      <Link\n        className=\"name-link\"\n        onClick={() => store.dispatch(SHOW_CUSTOMER_MODAL(params.row))}\n      >\n        <b>{params.value}</b>\n      </Link>\n    ),\n  },\n  {\n    field: \"debtor\",\n    headerName: \"Боржник\",\n    flex: 1.4,\n    cellClassName: \"centered\",\n    renderCell: (params) => {\n      if (params.value) {\n        return (\n          <img src=\"img/Blackmark.svg\" width=\"19\" height=\"19\" alt=\"blackmark\" />\n        );\n      } else return <div></div>;\n    },\n  },\n  {\n    field: \"customerGroup\",\n    headerName: \"Група\",\n    flex: 5,\n  },\n  {\n    field: \"firstPerson\",\n    headerName: \"Особа 1\",\n    flex: 2,\n  },\n  {\n    field: \"firstPhone\",\n    headerName: \"Телефон 1\",\n    flex: 2.5,\n  },\n  {\n    field: \"firstEmail\",\n    headerName: \"Email 1\",\n    flex: 4,\n  },\n  {\n    field: \"city\",\n    headerName: \"Місто\",\n    flex: 1.3,\n  },\n  {\n    field: \"info\",\n    headerName: \"Інформація\",\n    flex: 6,\n  },\n];\n\nexport default function ClientsTable() {\n  const queryClient = useQueryClient();\n  const exportQuery = useExportCustomers();\n  const authState = useSelector((state) => state.auth);\n  const [q, setQ] = useState(\"\");\n\n  const filter = (rows) => {\n    return rows.filter(\n      (row) =>\n        row.customerName?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.customerGroup?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.firstPerson?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.firstPhone?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.firstEmail?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.city?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.info?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1\n    );\n  };\n\n  return (\n    <>\n      <TextField\n        variant=\"outlined\"\n        size=\"small\"\n        placeholder=\"Швидкий пошук\"\n        onChange={(e) => setQ(e.target.value)}\n        InputProps={{\n          endAdornment: authState.roles.includes(\"ADMIN\") && (\n            <Button\n              className=\"export-btn\"\n              variant=\"outlined\"\n              onClick={() =>\n                exportQuery.mutate(\n                  filter(fixCustomers(queryClient.getQueryData(\"customers\") || []))\n                )\n              }\n            >\n              Експорт\n            </Button>\n          ),\n        }}\n      />\n      <Paper elevation={4} className=\"x-grid\">\n        <div className=\"frame\">\n          <div className=\"grid-holder\">\n            <XGrid\n              className=\"customers-grid\"\n              rows={filter(\n                fixCustomers(queryClient.getQueryData(\"customers\") || [])\n              )}\n              columns={columns}\n              sortModel={[{field: \"customerName\", sort: \"asc\"}]}\n              loading={queryClient.isFetching(\"customers\")}\n              rowHeight={35}\n              headerHeight={35}\n              pagination={true}\n              disableSelectionOnClick={true}\n            />\n          </div>\n        </div>\n      </Paper>\n    </>\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation} from \"react-query\";\n\nexport default function useExportCustomers() {\n  return useMutation(\n    (customers) =>\n      Axios.post(\n        \"api/customers/export/\",\n        {customers: customers},\n        {\n          responseType: \"arraybuffer\",\n        }\n      ),\n    {\n      onError: (_, params) => {\n        params.setStatus({success: false, error: true});\n      },\n      onSuccess: (val, _) => {\n        const blob = new Blob([val.data], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        });\n\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n          window.navigator.msSaveOrOpenBlob(blob);\n          return;\n        }\n        const data = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = data;\n        link.download = \"Клієнти.xlsx\";\n        link.dispatchEvent(\n          new MouseEvent(\"click\", {bubbles: true, cancelable: true, view: window})\n        );\n      },\n    }\n  );\n}\n","import {Button, Typography} from \"@material-ui/core\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Modal from \"@material-ui/core/Modal\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as yup from \"yup\";\nimport {CLOSE_CUSTOMER_MODAL} from \"./context/actions\";\nimport useSaveCustomer from \"./hooks/useSaveCustomer\";\nimport InfoMessage from \"./InfoMessage\";\nimport InputField from \"./InputField\";\nimport SwitchControl from \"./SwitchControl\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"4px\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4),\n    width: \"40%\",\n\n    \"& .MuiOutlinedInput-inputMarginDense\": {\n      padding: \"8px !important\",\n    },\n  },\n  link: {\n    cursor: \"pointer\",\n    color: theme.palette.primary.main,\n  },\n  h2: {\n    textAlign: \"center\",\n    fontWeight: \"400\",\n    marginBottom: \"1rem\",\n  },\n  buttons: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n  },\n  clearButton: {\n    backgroundColor: \"rgb(210,0,10)\",\n    color: \"white\",\n    marginRight: \"1rem\",\n\n    \"&:hover\": {\n      backgroundColor: \"rgb(190,0,10)\",\n    },\n  },\n  rowOne: {\n    gridTemplateRows: \"1fr 1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    gridColumnGap: \"15px\",\n    gridRowGap: \"10px\",\n  },\n  rowTwo: {\n    gridTemplateRows: \"1fr 1fr 1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    gridRowGap: \"10px\",\n  },\n  longTextField: {\n    gridColumnStart: 1,\n    gridColumnEnd: 3,\n  },\n  billNo: {\n    gridColumn: 4,\n  },\n  switchHolder: {\n    gridColumn: 3,\n    justifySelf: \"end\",\n\n    \"& .MuiFormControlLabel-root\": {\n      margin: 0,\n    },\n  },\n  auxiliaryRow: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n    margin: \"2rem auto 1rem auto\",\n\n    \"& .MuiOutlinedInput-input\": {\n      padding: \"8px\",\n    },\n\n    \"& .MuiButtonBase-root\": {\n      padding: \"2px !important\",\n    },\n\n    \"& .MuiOutlinedInput-adornedEnd\": {\n      paddingRight: \"3px\",\n    },\n\n    \"& #date-picker-inline-label\": {\n      transform: \"translate(14px, 10px) scale(1)\",\n    },\n  },\n}));\n\nconst validationSchema = yup.object({\n  customer: yup.object({\n    customerName: yup.string().required(),\n    customerGroup: yup.string().nullable(),\n    city: yup.string().nullable(),\n    info: yup.string().nullable(),\n    firstPerson: yup.string().trim().max(25).nullable(),\n    firstPhone: yup.string().max(10).min(10).nullable(),\n    firstEmail: yup.string().email().nullable(),\n    secondPerson: yup.string().trim().max(25).nullable(),\n    secondPhone: yup.string().max(10).min(10).nullable(),\n    secondEmail: yup.string().email().nullable(),\n    thirdPerson: yup.string().trim().max(25).nullable(),\n    thirdPhone: yup.string().max(10).min(10).nullable(),\n    thirdEmail: yup.string().email().nullable(),\n  }),\n});\n\nexport default function CustomerForm() {\n  const classes = useStyles();\n  const customerModalState = useSelector((store) => store.showCustomerModal);\n  const saveCustomerQuery = useSaveCustomer();\n  const dispatch = useDispatch();\n  const [showSavedInfo, setShowSavedInfo] = React.useState({\n    success: false,\n    error: false,\n  });\n\n  const handleClose = () => {\n    setShowSavedInfo({success: false, error: false});\n  };\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={customerModalState.show}\n        onClose={() => dispatch(CLOSE_CUSTOMER_MODAL())}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={customerModalState.show}>\n          <div className={classes.paper}>\n            <Formik\n              validateOnChange={false}\n              validateOnMount={false}\n              validateOnBlur={false}\n              initialValues={{customer: customerModalState.customer}}\n              onSubmit={(form) => {\n                saveCustomerQuery.mutate({\n                  customer: form.customer,\n                  setStatus: setShowSavedInfo,\n                });\n              }}\n              validationSchema={validationSchema}\n            >\n              {({values, errors, validateField}) => (\n                <Form>\n                  <Typography className={classes.h2} component=\"h2\" variant=\"h5\">\n                    {customerModalState.customer.customerName\n                      ? customerModalState.customer.customerName\n                      : \"Новий замовник\"}\n                  </Typography>\n                  <div className={`row__one ${classes.rowOne}`}>\n                    <Field\n                      className={classes.longTextField}\n                      name=\"customer.customerName\"\n                      label=\"Назва замовника\"\n                      error={errors?.customer?.customerName}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.customerGroup\"\n                      label=\"Група\"\n                      error={errors?.customer?.customerGroup}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      className={classes.longTextField}\n                      name=\"customer.info\"\n                      label=\"Примітка\"\n                      error={errors?.customer?.info}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.city\"\n                      label=\"Місто\"\n                      error={errors?.customer?.city}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                  </div>\n\n                  <div className={`${classes.rowTwo} row__two`}>\n                    <Field\n                      name=\"customer.firstPerson\"\n                      label=\"Конт. Особа 1\"\n                      error={errors?.customer?.firstPerson}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.firstPhone\"\n                      label=\"Телефон (без +38)\"\n                      error={errors?.customer?.firstPhone}\n                      validator={validateField}\n                      component={InputField}\n                      phone={true}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.firstEmail\"\n                      label=\"Email\"\n                      error={errors?.customer?.firstEmail}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n\n                    <Field\n                      name=\"customer.secondPerson\"\n                      label=\"Конт. Особа 2\"\n                      error={errors?.customer?.secondPerson}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.secondPhone\"\n                      label=\"Телефон (без +38)\"\n                      error={errors?.customer?.secondPhone}\n                      validator={validateField}\n                      component={InputField}\n                      phone={true}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.secondEmail\"\n                      label=\"Email\"\n                      error={errors?.customer?.secondEmail}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n\n                    <Field\n                      name=\"customer.thirdPerson\"\n                      label=\"Конт. Особа 3\"\n                      error={errors?.customer?.thirdPerson}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.thirdPhone\"\n                      label=\"Телефон (без +38)\"\n                      error={errors?.customer?.thirdPhone}\n                      validator={validateField}\n                      component={InputField}\n                      phone={true}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                    <Field\n                      name=\"customer.thirdEmail\"\n                      label=\"Email\"\n                      error={errors?.customer?.thirdEmail}\n                      validator={validateField}\n                      component={InputField}\n                      numeric={false}\n                      disabled={saveCustomerQuery.isLoading}\n                    />\n                  </div>\n\n                  <div className={classes.buttons}>\n                    <Button\n                      style={{gridColumn: 2}}\n                      color=\"primary\"\n                      variant=\"contained\"\n                      className={classes.button}\n                      disabled={saveCustomerQuery.isLoading}\n                      type=\"submit\"\n                    >\n                      Зберегти замовника\n                    </Button>\n\n                    {(values.customer.customerId && (\n                      <div className={classes.switchHolder}>\n                        <SwitchControl\n                          name=\"customer.debtor\"\n                          label=\"Боржник\"\n                          isChecked={values.customer.debtor}\n                          disabled={saveCustomerQuery.isLoading}\n                        />\n                      </div>\n                    )) ||\n                      null}\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </Fade>\n      </Modal>\n      <InfoMessage\n        type=\"success\"\n        open={showSavedInfo.success}\n        onClose={handleClose}\n        message=\"Замовинка успішно збережено.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showSavedInfo.error}\n        onClose={handleClose}\n        message=\"Помилка при збереженні замовника. Можливо клієнт зі схожою інформацією вже існує.\"\n      />\n    </div>\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\nimport {useDispatch} from \"react-redux\";\nimport {CLOSE_CUSTOMER_MODAL} from \"../context/actions\";\n\nexport default function useSaveCustomer() {\n  const queryClient = useQueryClient();\n  const dispatch = useDispatch();\n\n  return useMutation(\n    (params) =>\n      params.customer.customerId === 0\n        ? Axios.post(\"/api/customers/\", params.customer)\n        : Axios.put(\"/api/customers/\", params.customer),\n    {\n      onSuccess: (_, passedParams) => {\n        queryClient.invalidateQueries(\"customers\");\n        dispatch(CLOSE_CUSTOMER_MODAL());\n        passedParams.setStatus({success: true, error: false});\n      },\n      onError: (_, passedParams) => {\n        console.log(_);\n        passedParams.setStatus({success: false, error: true});\n      },\n    }\n  );\n}\n","import {Link, Typography} from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useHistory} from \"react-router-dom\";\nimport \"./Header.css\";\nimport * as AuthService from \"./services/auth-service\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  logoutButton: {\n    padding: 0,\n  },\n  logoutHolder: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"baseline\",\n    whiteSpace: \"nowrap\",\n  },\n  tabs: {\n    margin: \"0 auto\",\n    cursor: \"pointer\",\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n  const history = useHistory();\n  const queryClient = useQueryClient();\n  const [value, setValue] = React.useState(0);\n\n  const logout = () => {\n    AuthService.unauthorize();\n    history.push(\"/login\");\n  };\n\n  const changeView = (_e, newValue) => {\n    setValue(newValue);\n    switch (newValue) {\n      case 0:\n        history.push(\"/\");\n        break;\n      case 1:\n        queryClient.invalidateQueries(\"customers\");\n        history.push(\"/clients\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Paper elevation={2}>\n      <div className=\"header__container\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Link color=\"inherit\" href=\"https://psdruk.com.ua/\">\n              <img width=\"110\" height=\"50\" src=\"/img/logo.svg\" alt=\"logo\" />\n            </Link>\n\n            <Tabs\n              className={classes.tabs}\n              value={value}\n              onChange={changeView}\n              TabIndicatorProps={{style: {background: \"white\"}}}\n              indicatorColor=\"secondary\"\n              aria-label=\"scrollable auto tabs example\"\n            >\n              <Tab label=\"Головна\" />\n              {/* <Tab label=\"Сортування\" /> */}\n              <Tab label=\"Клієнти\" />\n              {/* <Tab label=\"Статус\" /> */}\n            </Tabs>\n\n            <div className={classes.logoutHolder}>\n              <Typography variant=\"body1\" style={{fontWeight: 300}}>\n                Вітаємо, <b>{localStorage.getItem(\"username\")}</b>\n              </Typography>\n              <Button\n                color=\"inherit\"\n                onClick={logout}\n                className={classes.logoutButton}\n              >\n                Вийти\n              </Button>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n    </Paper>\n  );\n}\n","import Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport React, {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\";\nimport {SET_AUTHENTICATED} from \"./context/actions\";\nimport InfoMessage from \"./InfoMessage\";\nimport * as AuthService from \"./services/auth-service\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://psdruk.com.ua/\">\n        psdruk.com.ua\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [form, setForm] = useState({username: \"\", password: \"\"});\n  const [showNotYetVerified, setShowNotYetVerified] = useState(false);\n  const [showWrongCredentials, setShowWrongCredentials] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  const setUsername = (e) => setForm({...form, username: e.target.value});\n  const setPassword = (e) => setForm({...form, password: e.target.value});\n\n  const handleClose = () => {\n    setShowNotYetVerified(false);\n    setShowWrongCredentials(false);\n  };\n\n  const submitCredentials = (e) => {\n    e.preventDefault();\n    setIsDisabled(true);\n    AuthService.authorize(form)\n      .then((data) => {\n        if (data.roles.includes(\"ROLE_CUSTOMER\")) {\n          setShowNotYetVerified(true);\n        } else {\n          dispatch(\n            SET_AUTHENTICATED(data.token, data.employee, data.username, data.roles)\n          );\n          history.push(\"/\");\n        }\n      })\n      .catch(() => {\n        setIsDisabled(false);\n        setShowWrongCredentials(true);\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <form className={classes.form} onSubmit={submitCredentials}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            onChange={setUsername}\n            label=\"Логін\"\n            name=\"email\"\n            autoComplete=\"off\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Пароль\"\n            type=\"password\"\n            id=\"password\"\n            onChange={setPassword}\n            autoComplete=\"off\"\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled={isDisabled}\n          >\n            Вхід\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"http://plg-site.32server.in.ua/\" variant=\"body2\">\n                Забули пароль?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"http://plg-site.32server.in.ua/\" variant=\"body2\">\n                {\"Зареєструватись\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n      <InfoMessage\n        type=\"error\"\n        open={showNotYetVerified}\n        onClose={handleClose}\n        message=\"Аккаунт ще не пройшов перевірку.\"\n      />\n      <InfoMessage\n        type=\"error\"\n        open={showWrongCredentials}\n        onClose={handleClose}\n        message=\"Неправильні дані для входу.\"\n      />\n    </Container>\n  );\n}\n","import {makeStyles, Tooltip} from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStylesTooltip = makeStyles((theme) => ({\n  arrow: {\n    color: theme.palette.primary.main,\n  },\n  tooltip: {\n    fontSize: 12,\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nfunction ToolTip({title, value, placement = \"right-start\", children, ...props}) {\n  const classes = useStylesTooltip();\n\n  return (\n    <Tooltip title={title} placement={placement} arrow classes={classes} {...props}>\n      <div className=\"value\" style={{lineHeight: \"1.43\"}}>\n        {children}\n      </div>\n    </Tooltip>\n  );\n}\n\nexport default ToolTip;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  InputAdornment,\n  Link,\n  OutlinedInput,\n  Typography,\n} from \"@material-ui/core\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Modal from \"@material-ui/core/Modal\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Field, Form, Formik} from \"formik\";\nimport React from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport * as yup from \"yup\";\nimport ComboBox from \"./ComboBox\";\nimport DatePicker from \"./DatePicker\";\nimport useDeleteOrder from \"./hooks/useDeleteOrder\";\nimport useUpdateOrder from \"./hooks/useUpdateOrder\";\nimport InfoMessage from \"./InfoMessage\";\nimport InputField from \"./InputField\";\nimport ToolTip from \"./ToolTip\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"4px\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4),\n    width: \"55%\",\n  },\n  link: {\n    cursor: \"pointer\",\n    color: theme.palette.primary.main,\n  },\n  h2: {\n    top: \"-.9rem\",\n    position: \"relative\",\n    marginTop: 0,\n    textAlign: \"center\",\n    fontWeight: \"400\",\n    gridColumnEnd: 4,\n    gridColumnStart: 2,\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  clearButton: {\n    backgroundColor: \"rgb(210,0,10)\",\n    color: \"white\",\n    marginRight: \"1rem\",\n\n    \"&:hover\": {\n      backgroundColor: \"rgb(190,0,10)\",\n    },\n  },\n  rowOne: {\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n  },\n  rowTwo: {\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr\",\n  },\n  billNo: {\n    gridColumn: 4,\n  },\n  auxiliaryRow: {\n    display: \"grid\",\n    gridColumnGap: \"20px\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n    margin: \"2rem auto 1rem auto\",\n\n    \"& .MuiOutlinedInput-input\": {\n      padding: \"8px\",\n    },\n\n    \"& .MuiButtonBase-root\": {\n      padding: \"2px !important\",\n    },\n\n    \"& .MuiOutlinedInput-adornedEnd\": {\n      paddingRight: \"3px\",\n    },\n\n    \"& #date-picker-inline-label\": {\n      transform: \"translate(14px, 10px) scale(1)\",\n    },\n  },\n}));\n\nconst validationSchema = yup.object({\n  order: yup.object({\n    entrepreneur: yup.object().required(),\n    customer: yup.object().required(),\n    date: yup.date().required(),\n    orderType: yup.object().required(),\n    orderKind: yup.object().required(),\n    billNo: yup.number().lessThan(2000000000).positive().min(0),\n    width: yup.number().lessThan(2000000000).positive().min(0).required(),\n    height: yup.number().lessThan(2000000000).positive().min(0).required(),\n    amount: yup.number().lessThan(2000000000).positive().min(0).required(),\n    price: yup.number().lessThan(2000000000).positive().min(0).required(),\n    fees: yup.number().lessThan(2000000000).positive().min(0).required(),\n    finalSum: yup.number().lessThan(2000000000).positive().min(0).required(),\n    comment: yup.string().trim().max(255).required(),\n    payLog: yup.string(),\n  }),\n});\n\nexport default function EditForm({user, roles, order}) {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const deleteQuery = useDeleteOrder();\n  const updateOrderQuery = useUpdateOrder();\n  const [open, setOpen] = React.useState(false);\n  const [showDeleteError, setShowDeleteError] = React.useState(false);\n  const [showSaveError, setShowSaveError] = React.useState(false);\n  const [showConfirmation, setShowConfirmation] = React.useState(false);\n  const toggle = () => setOpen(!open);\n\n  const onDeleteOrder = (orderId) => {\n    setShowConfirmation(false);\n    deleteQuery.mutate({\n      orderId: orderId,\n      setStatus: setShowSaveError,\n      setShowModal: setOpen,\n    });\n  };\n\n  const isNotMyOrder = () => {\n    return order.employee.employeeID !== user.employeeID;\n  };\n\n  const amI = (role) => {\n    return roles.includes(role);\n  };\n\n  const isDisabledFor = (role = \"ROLE_ADMIN\") => {\n    if (amI(\"ROLE_ADMIN\")) return false;\n    return amI(role) ? false : isNotMyOrder();\n  };\n\n  return (\n    <div>\n      <ToolTip title={order.employee.name}>\n        <Link className={classes.link} onClick={toggle}>\n          <b>{order.orderId}</b>\n        </Link>\n      </ToolTip>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={toggle}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <Formik\n              validateOnChange={true}\n              validateOnMount={false}\n              validateOnBlur={false}\n              initialValues={{order: order}}\n              onSubmit={(form) => {\n                updateOrderQuery.mutate({\n                  order: form.order,\n                  toggleModal: toggle,\n                  setStatus: setShowSaveError,\n                });\n              }}\n              validationSchema={validationSchema}\n            >\n              {({values, errors, validateField}) => (\n                <Form>\n                  <InfoMessage\n                    type=\"error\"\n                    open={showDeleteError}\n                    onClose={() => setShowDeleteError(false)}\n                    message=\"Помилка при видаленні замовлення.\"\n                  />\n                  <InfoMessage\n                    type=\"error\"\n                    open={showSaveError}\n                    onClose={() => setShowSaveError(false)}\n                    message=\"Помилка при збереженні замовлення.\"\n                  />\n                  <div className={classes.auxiliaryRow}>\n                    <Field\n                      component={DatePicker}\n                      label=\"Дата\"\n                      name=\"order.date\"\n                      error={errors?.order?.date}\n                      validator={validateField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                    <Typography className={classes.h2} component=\"h2\" variant=\"h5\">\n                      Замовленя № <b>{order.orderId}</b>\n                    </Typography>\n                    <Field\n                      className={classes.billNo}\n                      name=\"order.billNo\"\n                      label=\"№ Рахунку\"\n                      disableCalculation={true}\n                      error={errors?.order?.billNo}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={\n                        updateOrderQuery.isLoading || isDisabledFor(\"ROLE_MANAGER\")\n                      }\n                    />\n                  </div>\n\n                  <div className={`${classes.rowOne} row__one`}>\n                    <Field\n                      name=\"order.entrepreneur\"\n                      label=\"Підприємець\"\n                      error={errors?.order?.entrepreneur}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                      getName={(option) => option.fullName || \"\"}\n                      options={queryClient.getQueryData(\"entrepreneurs\")}\n                    />\n                    <Field\n                      name=\"order.customer\"\n                      label=\"Замовник\"\n                      error={errors?.order?.customer}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                      getName={(option) => option.customerName || \"\"}\n                      options={queryClient.getQueryData(\"customers\")}\n                    />\n                    <Field\n                      name=\"order.orderType\"\n                      label=\"Вид\"\n                      error={errors?.order?.orderType}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                      getName={(option) => option.typeName || \"\"}\n                      options={queryClient.getQueryData(\"orderTypes\")}\n                    />\n                    <Field\n                      name=\"order.orderKind\"\n                      label=\"Тип\"\n                      error={errors?.order?.orderKind}\n                      validator={validateField}\n                      component={ComboBox}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                      getName={(option) => option.kindName || \"\"}\n                      options={values.order?.orderType?.orderKinds || []}\n                    />\n                  </div>\n\n                  <div className={`${classes.rowTwo} row__two`}>\n                    <Field\n                      name=\"order.width\"\n                      label=\"Ширина\"\n                      error={errors?.order?.width}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                    <Field\n                      name=\"order.height\"\n                      label=\"Висота\"\n                      error={errors?.order?.height}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                    <Field\n                      name=\"order.amount\"\n                      label=\"Кількість\"\n                      error={errors?.order?.amount}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                    <OutlinedInput\n                      id=\"metrics\"\n                      size=\"small\"\n                      variant=\"outlined\"\n                      value={\n                        (\n                          ((values.order.width * values.order.height) / 1000000) *\n                          values.order.amount\n                        ).toFixed(3) || 0.0\n                      }\n                      endAdornment={\n                        <InputAdornment position=\"end\">м²</InputAdornment>\n                      }\n                      disabled\n                    />\n                    <Field\n                      name=\"order.price\"\n                      label=\"Ціна\"\n                      error={errors?.order?.price}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                    <Field\n                      name=\"order.fees\"\n                      label=\"Послуги\"\n                      error={errors?.order?.fees}\n                      validator={validateField}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                    <Field\n                      name=\"order.finalSum\"\n                      label=\"Сума\"\n                      error={errors?.order?.finalSum}\n                      validator={validateField}\n                      component={InputField}\n                      disableCalculation={true}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                  </div>\n\n                  <div className=\"row__three\">\n                    <Field\n                      name=\"order.comment\"\n                      label=\"Опис замовлення\"\n                      error={errors?.order?.comment}\n                      validator={validateField}\n                      numeric={false}\n                      component={InputField}\n                      disabled={\n                        updateOrderQuery.isLoading || isDisabledFor(\"ROLE_MANAGER\")\n                      }\n                    />\n                  </div>\n\n                  <div className=\"row__three\">\n                    <Field\n                      name=\"order.payLog\"\n                      label=\"Історія оплат\"\n                      error={errors?.order?.payLog}\n                      validator={validateField}\n                      numeric={false}\n                      multiline={true}\n                      component={InputField}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                    />\n                  </div>\n\n                  <div className={classes.buttons}>\n                    <Button\n                      className={classes.clearButton}\n                      disabled={updateOrderQuery.isLoading || isDisabledFor()}\n                      variant=\"contained\"\n                      type=\"button\"\n                      onClick={() => setShowConfirmation(true)}\n                    >\n                      Видалити\n                    </Button>\n                    <Button\n                      color=\"primary\"\n                      variant=\"contained\"\n                      className={classes.button}\n                      disabled={\n                        updateOrderQuery.isLoading || isDisabledFor(\"ROLE_MANAGER\")\n                      }\n                      type=\"submit\"\n                    >\n                      Зберегти замовлення\n                    </Button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </Fade>\n      </Modal>\n      <Dialog\n        fullScreen={false}\n        open={showConfirmation}\n        onClose={() => setShowConfirmation(false)}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          Ви дійсно бажаєте видалити це замовлення?\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Повернути його зміст та оплати буде неможливо. Підтвердити?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            autoFocus\n            onClick={() => setShowConfirmation(false)}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Ні\n          </Button>\n          <Button\n            onClick={() => onDeleteOrder(order.orderId)}\n            variant=\"contained\"\n            className={classes.clearButton}\n            autoFocus\n          >\n            Так\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useDeleteOrder() {\n  const queryClient = useQueryClient();\n  return useMutation((params) => Axios.delete(\"/api/orders/\" + params.orderId), {\n    onError: (_, params) => {\n      params.setStatus(true);\n    },\n    onSuccess: (_, params) => {\n      queryClient.invalidateQueries([\"customers\"]);\n      queryClient.invalidateQueries([\"orders\"]);\n      params.setShowModal(false);\n    },\n  });\n}\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useUpdateOrder() {\n  let backupOrder = null;\n  const queryClient = useQueryClient();\n  return useMutation(\n    (updateObject) => Axios.put(\"/api/orders/\", updateObject.order),\n    {\n      onMutate: (mutationObject) => {\n        queryClient\n          .getQueryCache()\n          .findAll([\"orders\", 1])\n          .forEach((query) => {\n            queryClient.setQueryData(\n              query.queryKey,\n              query.state.data.map((cachedOrder) => {\n                if (cachedOrder.orderId === mutationObject.order.orderId) {\n                  backupOrder = cachedOrder;\n                  return mutationObject.order;\n                } else return cachedOrder;\n              })\n            );\n          });\n      },\n      onError: (_error, params) => {\n        params.setStatus(true);\n        queryClient\n          .getQueryCache()\n          .findAll([\"orders\", 1])\n          .forEach((query) => {\n            queryClient.setQueryData(\n              query.queryKey,\n              query.state.data.map((cachedOrder) => {\n                if (cachedOrder.orderId === backupOrder.orderId) return backupOrder;\n                else return cachedOrder;\n              })\n            );\n          });\n      },\n      onSuccess: (_, updateObject) => {\n        queryClient.invalidateQueries([\"customers\"]);\n        queryClient.invalidateQueries([\"orders\"]);\n        updateObject.toggleModal();\n      },\n    }\n  );\n}\n","import Axios from \"axios\";\n\nexport const fixOrders = (data, id = 0) => {\n  return data.map((row) => {\n    if (row.orderId === 0) {\n      row.id = id;\n      row.orderId = id;\n    } else {\n      row.id = row.orderId;\n    }\n    !row.date ? (row.date = new Date()) : (row.date = new Date(row.date));\n    return row;\n  });\n};\n\nexport const fetchRecentOrders = async () => {\n  const response = await Axios.get(\"/api/orders/\");\n  const data = response.data;\n\n  if (data) return fixOrders(data);\n  return [];\n};\n\nexport const sortOrders = async (selections) => {\n  const form = {\n    orderId: null,\n    customer: null,\n    entrepreneur: null,\n    employee: null,\n    status: null,\n    dateFrom: null,\n    dateTill: null,\n    payDateFrom: null,\n    payDateTill: null,\n    receiver: null,\n    orderKind: null,\n    orderType: null,\n    details: \"\",\n  };\n\n  const sendForm = {\n    ...form,\n    orderId: selections?.orderId,\n    customer: selections?.customer,\n    entrepreneur: selections?.entrepreneur,\n    employee: selections?.employee,\n    status: selections?.status,\n    dateFrom: selections?.dateFrom,\n    dateTill: selections?.dateTill,\n    payDateFrom: selections?.payDateFrom,\n    payDateTill: selections?.payDateTill,\n    receiver: selections?.receiver,\n    orderKind: selections?.orderKind,\n    orderType: selections?.orderType,\n    details: selections?.details,\n  };\n\n  const response = await Axios.post(\"/api/orders/filter/\", sendForm);\n  const data = response.data;\n\n  if (data) return fixOrders(data);\n  return [];\n};\n","import {Button} from \"@material-ui/core\";\nimport Popper from \"@material-ui/core/Popper\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport useSetStatus from \"./hooks/useSetStatus\";\n\nconst sources = [\n  \"\",\n  \"img/on-agreement.svg\",\n  \"img/in-progress.svg\",\n  \"img/ready.svg\",\n  \"img/completed.svg\",\n];\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    backgroundColor: \"#fff\",\n    boxShadow: \"0 0 14px 2px rgba(0, 0, 0, 0.3)\",\n    borderRadius: \"4px\",\n  },\n  acceptanceButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#fff\",\n    border: \"1px solid\",\n    borderColor: \"#df16a0\",\n    color: \"#df16a0\",\n\n    \"&:hover\": {\n      color: \"#fff\",\n      backgroundColor: \"#df16a0\",\n    },\n  },\n  inWorkButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#fff\",\n    border: \"1px solid\",\n    borderColor: theme.palette.primary.main,\n    color: theme.palette.primary.main,\n\n    \"&:hover\": {\n      color: \"#fff\",\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n  readyButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#fff\",\n    border: \"1px solid\",\n    borderColor: \"#28a745\",\n    color: \"#28a745\",\n\n    \"&:hover\": {\n      color: \"#fff\",\n      backgroundColor: \"#28a745\",\n    },\n  },\n  completedButton: {\n    width: \"100%\",\n    margin: \".2rem 0\",\n    backgroundColor: \"#28a745\",\n    border: \"1px solid\",\n    borderColor: \"#28a745\",\n    color: \"#fff\",\n\n    \"&:hover\": {\n      borderColor: \"#218838\",\n      backgroundColor: \"#218838\",\n    },\n  },\n  popper: {\n    zIndex: 1,\n    marginLeft: \"0.5rem\",\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: \"-0.9em\",\n      marginTop: \"0.45rem\",\n      height: \"3em\",\n      width: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 1em 1em 0\",\n        borderColor: `transparent ${theme.palette.background.paper} transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: \"-0.9em\",\n      marginTop: \"0.45rem\",\n      height: \"3em\",\n      width: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 0 1em 1em\",\n        borderColor: `transparent transparent transparent ${theme.palette.background.paper}`,\n      },\n    },\n  },\n  arrow: {\n    position: \"absolute\",\n    fontSize: 7,\n    width: \"3em\",\n    height: \"3em\",\n    \"&::before\": {\n      content: '\"\"',\n      margin: \"auto\",\n      display: \"block\",\n      width: 0,\n      height: 0,\n      borderStyle: \"solid\",\n    },\n  },\n}));\n\nfunction StatusPopper({orderId, status}) {\n  const classes = useStyles();\n  const statusQuery = useSetStatus();\n  const anchorRef = React.useRef(null);\n  const [arrow] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const id = open ? \"scroll-playground\" : null;\n\n  const toggle = () => setOpen((prevOpen) => !prevOpen);\n\n  return (\n    <>\n      <img\n        className={classes.img}\n        ref={anchorRef}\n        src={sources[status]}\n        width=\"19\"\n        height=\"19\"\n        alt=\"on-agreement\"\n        aria-describedby={id}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={toggle}\n      />\n\n      <Popper\n        id={id}\n        open={open}\n        anchorEl={anchorRef.current}\n        placement=\"right\"\n        disablePortal={true}\n        className={classes.popper}\n        modifiers={{\n          flip: {\n            enabled: true,\n          },\n          preventOverflow: {\n            enabled: true,\n            boundariesElement: \"scrollParent\",\n          },\n          arrow: {\n            enabled: true,\n            element: arrowRef,\n          },\n        }}\n      >\n        {arrow ? <span className={classes.arrow} ref={setArrowRef} /> : null}\n        <div className={classes.container}>\n          <Button\n            className={classes.acceptanceButton}\n            onClick={() =>\n              statusQuery.mutate({orderId: orderId, statusId: 1, toggle: toggle})\n            }\n          >\n            На погодженні\n          </Button>\n          <br />\n          <Button\n            className={classes.inWorkButton}\n            onClick={() =>\n              statusQuery.mutate({orderId: orderId, statusId: 2, toggle: toggle})\n            }\n          >\n            В роботі\n          </Button>\n          <br />\n          <Button\n            className={classes.readyButton}\n            onClick={() =>\n              statusQuery.mutate({orderId: orderId, statusId: 3, toggle: toggle})\n            }\n          >\n            Готове\n          </Button>\n          <br />\n          <Button\n            className={classes.completedButton}\n            o\n            onClick={() =>\n              statusQuery.mutate({orderId: orderId, statusId: 4, toggle: toggle})\n            }\n          >\n            Віддано\n          </Button>\n        </div>\n      </Popper>\n    </>\n  );\n}\n\nexport default StatusPopper;\n","import Axios from \"axios\";\nimport {useMutation, useQueryClient} from \"react-query\";\n\nexport default function useSetStatus() {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (params) =>\n      Axios.get(\"/api/orders/statuses/\" + params.orderId + \"/\" + params.statusId),\n    {\n      onSuccess: (_, params) => {\n        queryClient.invalidateQueries(\"orders\");\n        params.toggle();\n      },\n    }\n  );\n}\n","import {Button, Paper, TextField} from \"@material-ui/core\";\nimport {XGrid} from \"@material-ui/x-grid\";\nimport React, {useState} from \"react\";\nimport {useQueryClient} from \"react-query\";\nimport {useSelector} from \"react-redux\";\nimport EditForm from \"./EditForm\";\nimport useExportOrders from \"./hooks/useExportOrders\";\nimport useOrders from \"./hooks/useOrders\";\nimport StatusPopper from \"./StatusPopper\";\nimport \"./Table.css\";\nimport ToolTip from \"./ToolTip\";\n\nfunction strcmp(a, b) {\n  return a.localeCompare(b);\n}\n\nconst formatDate = (date) =>\n  new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: false,\n  }).format(date);\n\nexport default function Table({tableID}) {\n  const sortState = useSelector((state) => state.sortSelections);\n  const authState = useSelector((state) => state.auth);\n  const ordersQuery = useOrders(tableID, sortState[sortState.active]);\n  const [sortOrder, setSortOrder] = useState({orderId: \"desc\"});\n  const exportQuery = useExportOrders();\n  const queryClient = useQueryClient();\n  const [q, setQ] = useState(\"\");\n\n  const columns = (orderBy) => {\n    const columns = [\n      {\n        field: \"orderId\",\n        type: \"number\",\n        headerName: \"№\",\n        flex: 0.8,\n        renderCell: (params) => (\n          <EditForm\n            user={authState.loggedUser}\n            roles={authState.roles}\n            order={params.row}\n          />\n        ),\n      },\n      {\n        field: \"billNo\",\n        type: \"number\",\n        headerName: \"Рах\",\n        flex: 0.6,\n      },\n      {\n        field: \"customer\",\n        headerName: \"Замовник\",\n        flex: 2.2,\n        sortComparator: (c1, c2) => strcmp(c1.customerName, c2.customerName),\n        valueFormatter: (param) => param.value.customerName,\n        renderCell: (params) =>\n          params.value.info ? (\n            <ToolTip title={params.value.info}>\n              <b>{params.value.customerName}</b>\n            </ToolTip>\n          ) : (\n            <b>{params.value.customerName}</b>\n          ),\n      },\n      {\n        field: \"date\",\n        type: \"dateTime\",\n        headerName: \"Дата\",\n        flex: 1.2,\n        valueFormatter: (param) => formatDate(param.value),\n      },\n      {\n        field: \"width\",\n        type: \"number\",\n        headerName: \"Ширина\",\n        valueFormatter: (row) => row.value,\n        flex: 1.09,\n      },\n      {\n        field: \"height\",\n        type: \"number\",\n        headerName: \"Висота\",\n        valueFormatter: (row) => row.value,\n        flex: 1,\n      },\n      {\n        field: \"amount\",\n        type: \"number\",\n        headerName: \"К-сть\",\n        valueFormatter: (row) => row.value,\n        flex: 0.85,\n      },\n      {\n        field: \"m2\",\n        type: \"number\",\n        headerName: \"М2\",\n        valueFormatter: (row) => Number.parseFloat(row.value).toFixed(3),\n        flex: 0.9,\n      },\n      {\n        field: \"price\",\n        type: \"number\",\n        headerName: \"Ціна\",\n        valueFormatter: (row) => row.value,\n        flex: 0.8,\n      },\n      {\n        field: \"fees\",\n        type: \"number\",\n        headerName: \"Послуги\",\n        valueFormatter: (row) => row.value,\n        flex: 1,\n      },\n      {\n        field: \"finalSum\",\n        type: \"number\",\n        headerName: \"Сума\",\n        flex: 0.9,\n        renderCell: (params) => <b> {params.value} </b>,\n      },\n      {\n        field: \"paid\",\n        headerName: \"Оплата\",\n        sortable: false,\n        flex: 1.1,\n        cellClassName: \"centered\",\n        renderCell: (params) => {\n          if (params.row.paySum === params.row.finalSum) {\n            return (\n              <ToolTip title={formatDate(new Date(params.row.payDate))} arrow>\n                <img src=\"img/completed.svg\" width=\"19\" height=\"19\" alt=\"paid\" />\n              </ToolTip>\n            );\n          } else if (params.row.paySum > 0)\n            return (\n              <ToolTip\n                title={\n                  params.row.paySum +\n                  \" грн, \" +\n                  formatDate(new Date(params.row.payDate))\n                }\n                arrow\n              >\n                <img\n                  src=\"img/partly_paid.svg\"\n                  width=\"19\"\n                  height=\"19\"\n                  alt=\"partly__paid\"\n                />\n              </ToolTip>\n            );\n        },\n      },\n      {\n        field: \"status\",\n        headerName: \"Статус\",\n        flex: 1.1,\n        cellClassName: \"centered\",\n        sortComparator: (c1, c2) => c1.id - c2.id,\n        renderCell: (params) => (\n          <StatusPopper orderId={params.row.orderId} status={params.row.status.id} />\n        ),\n      },\n      {\n        field: \"orderType\",\n        type: \"string\",\n        headerName: \"Вид\",\n        flex: 1.8,\n        sortComparator: (c1, c2) => strcmp(c1.typeName, c2.typeName),\n        valueFormatter: (param) => param.value.typeName,\n      },\n      {\n        field: \"orderKind\",\n        headerName: \"Тип\",\n        flex: 1.8,\n        sortComparator: (c1, c2) => strcmp(c1.kindName, c2.kindName),\n        valueFormatter: (param) => param.value.kindName,\n      },\n      {\n        field: \"comment\",\n        headerName: \"Опис замовлення\",\n        flex: 6,\n        sortComparator: (c1, c2) => strcmp(c1, c2),\n        renderCell: (params) => (\n          <ToolTip title={params.value} placement=\"left-start\">\n            {params.value}\n          </ToolTip>\n        ),\n      },\n    ];\n\n    Object.keys(orderBy).forEach(\n      (key) =>\n        (columns.find((column) => column.field === key).sortDirection = orderBy[key])\n    );\n    return Object.values(columns);\n  };\n\n  const filter = (rows) => {\n    return rows.filter(\n      (row) =>\n        row.orderId?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.billNo?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.customer.customerName.toString().toLowerCase().indexOf(q.toLowerCase()) >\n          -1 ||\n        formatDate(row.date)?.toString().toLowerCase().indexOf(q.toLowerCase()) >\n          -1 ||\n        row.fees?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.finalSum?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.amount?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.price?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.height?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.width?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.m2?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1 ||\n        row.orderKind.kindName?.toString().toLowerCase().indexOf(q.toLowerCase()) >\n          -1 ||\n        row.orderType.typeName?.toString().toLowerCase().indexOf(q.toLowerCase()) >\n          -1 ||\n        row.comment?.toString().toLowerCase().indexOf(q.toLowerCase()) > -1\n    );\n  };\n\n  const calculateDebt = (customer) => {\n    const ordersDiff = ordersQuery.data.reduce(\n      (a, b) => (a += b.finalSum - b.paySum),\n      0\n    );\n    return ordersDiff - customer.money;\n  };\n\n  return (\n    <>\n      <TextField\n        variant=\"outlined\"\n        size=\"small\"\n        placeholder=\"Швидкий пошук\"\n        onChange={(e) => setQ(e.target.value)}\n        InputProps={{\n          endAdornment: authState.roles.includes(\"ROLE_ORDERS_EXPORTER\") && (\n            <Button\n              className=\"export-btn\"\n              variant=\"outlined\"\n              onClick={() => exportQuery.mutate(filter(ordersQuery.data))}\n            >\n              Експорт\n            </Button>\n          ),\n        }}\n      />\n\n      <Paper elevation={4} className=\"x-grid\">\n        {sortState[sortState.active].customer && (\n          <div className=\"action__bar__stat\">\n            <label>\n              Сума боргу :{\" \"}\n              <b>\n                {calculateDebt(\n                  queryClient\n                    .getQueryData(\"customers\")\n                    .find(\n                      (customer) =>\n                        customer.customerId ===\n                        sortState[sortState.active].customer.customerId\n                    )\n                )}\n              </b>{\" \"}\n              грн\n            </label>\n          </div>\n        )}\n        <div className=\"frame\">\n          <div className=\"grid-holder\">\n            <XGrid\n              rows={filter(ordersQuery.data)}\n              columns={columns(sortOrder)}\n              onSortModelChange={(e) => {\n                let sortModel = {};\n                if (e.sortModel.length > 0) {\n                  sortModel[e.sortModel[0]?.field] = e.sortModel[0]?.sort;\n                } else {\n                  sortModel[\"orderId\"] = \"desc\";\n                }\n                setSortOrder(sortModel);\n              }}\n              loading={ordersQuery.isLoading}\n              rowHeight={35}\n              headerHeight={35}\n              pagination={true}\n              disableSelectionOnClick={true}\n            />\n          </div>\n        </div>\n      </Paper>\n    </>\n  );\n}\n","import {useQuery} from \"react-query\";\nimport * as OrderService from \".././services/orders-service\";\n\nexport default function useOrders(tableID, sortState) {\n  return useQuery(\n    [\"orders\", tableID, sortState],\n    () => OrderService.sortOrders(sortState),\n    {\n      initialData: [],\n      initialStale: true,\n      keepPreviousData: false,\n    }\n  );\n}\n","import Axios from \"axios\";\nimport {useMutation} from \"react-query\";\n\nexport default function useExportOrders() {\n  return useMutation(\n    (orders) =>\n      Axios.post(\n        \"api/orders/export/\",\n        {orders: orders},\n        {\n          responseType: \"arraybuffer\",\n        }\n      ),\n    {\n      onError: (_, params) => {\n        params.setStatus({success: false, error: true});\n      },\n      onSuccess: (val, _) => {\n        const blob = new Blob([val.data], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        });\n\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n          window.navigator.msSaveOrOpenBlob(blob);\n          return;\n        }\n        const data = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = data;\n        link.download = \"Список замовлень.xlsx\";\n        link.dispatchEvent(\n          new MouseEvent(\"click\", {bubbles: true, cancelable: true, view: window})\n        );\n      },\n    }\n  );\n}\n","import {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport ActionBar from \"./ActionBar\";\nimport \"./App.css\";\nimport ClientsTable from \"./ClientsTable\";\nimport CustomerForm from \"./CustomerForm\";\nimport Header from \"./Header\";\nimport useCELinks from \"./hooks/useCELinks\";\nimport useCPLinks from \"./hooks/useCPLinks\";\nimport useCustomers from \"./hooks/useCustomers\";\nimport useEntrepreneurs from \"./hooks/useEntrepreneurs\";\nimport useOrderTypes from \"./hooks/useOrderTypes\";\nimport useStatuses from \"./hooks/useStatuses\";\nimport Login from \"./Login\";\nimport Table from \"./Table\";\n\nfunction App() {\n  useCustomers();\n  useEntrepreneurs();\n  useOrderTypes();\n  useStatuses();\n  useCELinks();\n  useCPLinks();\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/\">\n            <div className=\"main\">\n              <div className=\"main__header\">\n                <Header />\n                <ActionBar />\n              </div>\n              <div className=\"main__table\">\n                <Table tableID={1} />\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/clients\">\n            <div className=\"clients\">\n              <div className=\"clients__header\">\n                <Header />\n              </div>\n              <div className=\"clients__table\">\n                <ClientsTable />\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/sort\">\n            <Header />\n            <Table tableID={2} />\n          </Route>\n        </Switch>\n      </Router>\n      <CustomerForm />\n    </div>\n  );\n}\n\nexport default App;\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useCustomers() {\n  return useQuery(\"customers\", CustomerService.fetchCustomers);\n}\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useEntrepreneurs() {\n  return useQuery(\"entrepreneurs\", CustomerService.fetchEntrepreneurs, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useOrderTypes() {\n  return useQuery(\"orderTypes\", CustomerService.fetchOrderTypes, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useStatuses() {\n  return useQuery(\"statuses\", CustomerService.fetchStatuses, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useCELinks() {\n  return useQuery(\"ce-links\", CustomerService.fetchCELinks, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import {useQuery} from \"react-query\";\nimport * as CustomerService from \".././services/customer-service\";\n\nexport default function useCPLinks() {\n  return useQuery(\"cp-links\", CustomerService.fetchCPLinks, {\n    initialData: [],\n    initialStale: true,\n    keepPreviousData: true,\n  });\n}\n","import { Box, Paper, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport \"./NotFound.css\";\n\nfunction NotFound() {\n  return (\n    <Paper elevation={3} className=\"blue-holder\">\n      <Paper elevation={3} className=\"info\">\n        <div className=\"blank-page\">\n          <Typography variant=\"h4\" component=\"h3\">\n            Сторінка не знайдена\n          </Typography>{\" \"}\n          <Typography variant=\"h2\" component=\"h3\">\n            404\n          </Typography>\n        </div>\n        <Box mt={8}>\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {\"Copyright © \"}\n            <Link color=\"inherit\" href=\"https://psdruk.com.ua/\">\n              psdruk.com.ua\n            </Link>{\" \"}\n            {new Date().getFullYear()}\n            {\".\"}\n          </Typography>\n        </Box>\n      </Paper>\n    </Paper>\n  );\n}\n\nexport default NotFound;\n","import {Redirect, Route} from \"react-router-dom\";\nimport {SET_AUTHENTICATED} from \"./context/actions\";\nimport store from \"./context/store\";\nimport {useSelector} from \"react-redux\";\n\nexport const ProtectedRoute = ({component: Component, ...props}) => {\n  const authState = useSelector((store) => store.auth);\n  const authToken = localStorage.getItem(\"token\");\n  const username = localStorage.getItem(\"username\");\n  const roles = localStorage.getItem(\"roles\");\n  const loggedUser = JSON.parse(localStorage.getItem(\"loggedUser\"));\n\n  return (\n    <Route\n      {...props}\n      render={(props) => {\n        if (authState.isAuthenticated) {\n          return <Component {...props} />;\n        } else if (authToken) {\n          store.dispatch(SET_AUTHENTICATED(authToken, loggedUser, username, roles));\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect to={{pathname: \"/login\", state: {from: props.location}}} />\n          );\n        }\n      }}\n    />\n  );\n};\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport {formatISO} from \"date-fns\";\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\nimport {ukUA} from \"@material-ui/core/locale\";\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport {uk} from \"date-fns/locale\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {QueryCache, QueryClient, QueryClientProvider} from \"react-query\";\nimport {ReactQueryDevtools} from \"react-query/devtools\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport App from \"./App\";\nimport store from \"./context/store\";\nimport \"./index.css\";\nimport Login from \"./Login\";\nimport NotFound from \"./NotFound\";\nimport {ProtectedRoute} from \"./ProtectedRoute\";\n\nconst oldTheme = createMuiTheme(\n  {\n    palette: {\n      primary: {\n        light: \"#fff\",\n        main: \"rgba(0, 60, 170, 0.95)\",\n        dark: \"rgba(0, 40, 170, 0.95)\",\n      },\n      secondary: {\n        main: \"#f44336\",\n      },\n    },\n    typography: {\n      useNextVariants: true,\n      fontSize: 11,\n      htmlFontSize: 15,\n    },\n  },\n  ukUA\n);\n\nconst {breakpoints} = oldTheme;\nconst theme = {\n  ...oldTheme,\n  overrides: {\n    MuiInputLabel: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiInputAdornment: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiInputBase: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiTypography: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n      subtitle1: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n      body1: {\n        fontSize: 12,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 12,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 10,\n        },\n      },\n      button: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiButton: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiTab: {\n      root: {\n        fontSize: 11,\n        [breakpoints.up(\"lg\")]: {\n          fontSize: 11,\n        },\n        [breakpoints.down(1300)]: {\n          fontSize: 9,\n        },\n      },\n    },\n    MuiSvgIcon: {\n      root: {\n        [breakpoints.down(1300)]: {\n          fontSize: 15,\n        },\n      },\n    },\n  },\n};\n\n// eslint-disable-next-line no-extend-native\nDate.prototype.toISOString = function () {\n  const date = formatISO(this);\n  return date.substr(0, date.indexOf(\"+\"));\n};\n\nconst queryCache = new QueryCache();\nconst queryClient = new QueryClient({queryCache});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <QueryClientProvider client={queryClient}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={uk}>\n        <Provider store={store}>\n          <Router>\n            <Switch>\n              <Route path=\"/login\" component={Login} />\n              <ProtectedRoute path=\"/\" component={App} />\n              <Route path=\"*\" component={NotFound} />\n            </Switch>\n          </Router>\n        </Provider>\n      </MuiPickersUtilsProvider>\n      <ReactQueryDevtools />\n    </QueryClientProvider>\n  </MuiThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}